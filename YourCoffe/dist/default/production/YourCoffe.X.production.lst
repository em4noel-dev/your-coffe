

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jul 04 18:53:44 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34  0000                     
    35                           ; Version 2.10
    36                           ; Generated 31/07/2019 GMT
    37                           ; 
    38                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4520 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  006AB6                     __pidataCOMRAM:
    72                           	opt callstack 0
    73                           
    74                           ;initializer for main@F200
    75  006AB6  39                 	db	57
    76  006AB7  30                 	db	48
    77  006AB8  6D                 	db	109
    78  006AB9  6C                 	db	108
    79  006ABA  00                 	db	0
    80  006ABB  00                 	db	0
    81  006ABC  00                 	db	0
    82  006ABD  00                 	db	0
    83  006ABE  31                 	db	49
    84  006ABF  35                 	db	53
    85  006AC0  30                 	db	48
    86  006AC1  6D                 	db	109
    87  006AC2  6C                 	db	108
    88  006AC3  00                 	db	0
    89  006AC4  00                 	db	0
    90  006AC5  00                 	db	0
    91                           
    92                           ;initializer for _atrasoMax
    93  006AC6  03E8               	dw	1000
    94                           
    95                           ;initializer for _atrasoMed
    96  006AC8  0096               	dw	150
    97                           
    98                           ;initializer for _atrasoMin
    99  006ACA  0014               	dw	20
   100                           
   101                           ;initializer for _atraso
   102  006ACC  000F               	dw	15
   103                           
   104                           ;initializer for _atraso_min
   105  006ACE  0005               	dw	5
   106                           
   107                           	psect	idataBANK1
   108  006B4A                     __pidataBANK1:
   109                           	opt callstack 0
   110                           
   111                           ;initializer for main@F196
   112  006B4A  45                 	db	69
   113  006B4B  58                 	db	88
   114  006B4C  50                 	db	80
   115  006B4D  52                 	db	82
   116  006B4E  45                 	db	69
   117  006B4F  53                 	db	83
   118  006B50  53                 	db	83
   119  006B51  4F                 	db	79
   120  006B52  00                 	db	0
   121  006B53  00                 	db	0
   122  006B54  41                 	db	65
   123  006B55  4D                 	db	77
   124  006B56  45                 	db	69
   125  006B57  52                 	db	82
   126  006B58  49                 	db	73
   127  006B59  43                 	db	67
   128  006B5A  41                 	db	65
   129  006B5B  4E                 	db	78
   130  006B5C  4F                 	db	79
   131  006B5D  00                 	db	0
   132  006B5E  43                 	db	67
   133  006B5F  41                 	db	65
   134  006B60  50                 	db	80
   135  006B61  55                 	db	85
   136  006B62  43                 	db	67
   137  006B63  43                 	db	67
   138  006B64  49                 	db	73
   139  006B65  4E                 	db	78
   140  006B66  4F                 	db	79
   141  006B67  00                 	db	0
   142  006B68  4C                 	db	76
   143  006B69  41                 	db	65
   144  006B6A  54                 	db	84
   145  006B6B  54                 	db	84
   146  006B6C  45                 	db	69
   147  006B6D  00                 	db	0
   148  006B6E  00                 	db	0
   149  006B6F  00                 	db	0
   150  006B70  00                 	db	0
   151  006B71  00                 	db	0
   152  006B72  00                 	db	0
   153  006B73  00                 	db	0
   154  006B74  00                 	db	0
   155  006B75  00                 	db	0
   156  006B76  00                 	db	0
   157  006B77  00                 	db	0
   158  006B78  00                 	db	0
   159  006B79  00                 	db	0
   160  006B7A  00                 	db	0
   161  006B7B  00                 	db	0
   162                           
   163                           	psect	mediumconst
   164  007E9A                     __pmediumconst:
   165                           	opt callstack 0
   166  007E9A  00                 	db	0
   167  007E9B                     tempoPreparo@valor:
   168                           	opt callstack 0
   169  007E9B  3F                 	db	63
   170  007E9C  06                 	db	6
   171  007E9D  5B                 	db	91
   172  007E9E  4F                 	db	79
   173  007E9F  66                 	db	102
   174  007EA0  6D                 	db	109
   175  007EA1  7D                 	db	125
   176  007EA2  07                 	db	7
   177  007EA3  7F                 	db	127
   178  007EA4  6F                 	db	111
   179  007EA5                     __end_oftempoPreparo@valor:
   180                           	opt callstack 0
   181  007EA5                     tempoPreparo@leds:
   182                           	opt callstack 0
   183  007EA5  01                 	db	1
   184  007EA6  02                 	db	2
   185  007EA7  04                 	db	4
   186  007EA8  08                 	db	8
   187  007EA9  10                 	db	16
   188  007EAA  20                 	db	32
   189  007EAB  40                 	db	64
   190  007EAC  80                 	db	128
   191  007EAD                     __end_oftempoPreparo@leds:
   192                           	opt callstack 0
   193  007EAD                     _linha:
   194                           	opt callstack 0
   195  007EAD  01                 	db	1
   196  007EAE  02                 	db	2
   197  007EAF  04                 	db	4
   198  007EB0  00                 	db	0
   199  007EB1                     __end_of_linha:
   200                           	opt callstack 0
   201  007EB1                     STR_15:
   202  007EB1  4D                 	db	77	;'M'
   203  007EB2  61                 	db	97	;'a'
   204  007EB3  69                 	db	105	;'i'
   205  007EB4  73                 	db	115	;'s'
   206  007EB5  20                 	db	32
   207  007EB6  64                 	db	100	;'d'
   208  007EB7  65                 	db	101	;'e'
   209  007EB8  6C                 	db	108	;'l'
   210  007EB9  69                 	db	105	;'i'
   211  007EBA  63                 	db	99	;'c'
   212  007EBB  69                 	db	105	;'i'
   213  007EBC  6F                 	db	111	;'o'
   214  007EBD  73                 	db	115	;'s'
   215  007EBE  6F                 	db	111	;'o'
   216  007EBF  20                 	db	32
   217  007EC0  69                 	db	105	;'i'
   218  007EC1  6D                 	db	109	;'m'
   219  007EC2  70                 	db	112	;'p'
   220  007EC3  6F                 	db	111	;'o'
   221  007EC4  73                 	db	115	;'s'
   222  007EC5  73                 	db	115	;'s'
   223  007EC6  69                 	db	105	;'i'
   224  007EC7  76                 	db	118	;'v'
   225  007EC8  65                 	db	101	;'e'
   226  007EC9  6C                 	db	108	;'l'
   227  007ECA  20                 	db	32
   228  007ECB  20                 	db	32
   229  007ECC  20                 	db	32
   230  007ECD  20                 	db	32
   231  007ECE  20                 	db	32
   232  007ECF  20                 	db	32
   233  007ED0  00                 	db	0
   234  007ED1                     STR_9:
   235  007ED1  28                 	db	40
   236  007ED2  31                 	db	49	;'1'
   237  007ED3  29                 	db	41
   238  007ED4  39                 	db	57	;'9'
   239  007ED5  30                 	db	48	;'0'
   240  007ED6  20                 	db	32
   241  007ED7  6D                 	db	109	;'m'
   242  007ED8  6C                 	db	108	;'l'
   243  007ED9  20                 	db	32
   244  007EDA  28                 	db	40
   245  007EDB  32                 	db	50	;'2'
   246  007EDC  29                 	db	41
   247  007EDD  31                 	db	49	;'1'
   248  007EDE  35                 	db	53	;'5'
   249  007EDF  30                 	db	48	;'0'
   250  007EE0  20                 	db	32
   251  007EE1  6D                 	db	109	;'m'
   252  007EE2  6C                 	db	108	;'l'
   253  007EE3  20                 	db	32
   254  007EE4  20                 	db	32
   255  007EE5  20                 	db	32
   256  007EE6  20                 	db	32
   257  007EE7  20                 	db	32
   258  007EE8  20                 	db	32
   259  007EE9  20                 	db	32
   260  007EEA  20                 	db	32
   261  007EEB  20                 	db	32
   262  007EEC  20                 	db	32
   263  007EED  20                 	db	32
   264  007EEE  20                 	db	32
   265  007EEF  00                 	db	0
   266  007EF0                     STR_4:
   267  007EF0  28                 	db	40
   268  007EF1  33                 	db	51	;'3'
   269  007EF2  29                 	db	41
   270  007EF3  20                 	db	32
   271  007EF4  63                 	db	99	;'c'
   272  007EF5  61                 	db	97	;'a'
   273  007EF6  70                 	db	112	;'p'
   274  007EF7  75                 	db	117	;'u'
   275  007EF8  63                 	db	99	;'c'
   276  007EF9  63                 	db	99	;'c'
   277  007EFA  69                 	db	105	;'i'
   278  007EFB  6E                 	db	110	;'n'
   279  007EFC  6F                 	db	111	;'o'
   280  007EFD  20                 	db	32
   281  007EFE  28                 	db	40
   282  007EFF  34                 	db	52	;'4'
   283  007F00  29                 	db	41
   284  007F01  20                 	db	32
   285  007F02  6C                 	db	108	;'l'
   286  007F03  61                 	db	97	;'a'
   287  007F04  74                 	db	116	;'t'
   288  007F05  74                 	db	116	;'t'
   289  007F06  65                 	db	101	;'e'
   290  007F07  20                 	db	32
   291  007F08  20                 	db	32
   292  007F09  20                 	db	32
   293  007F0A  20                 	db	32
   294  007F0B  20                 	db	32
   295  007F0C  20                 	db	32
   296  007F0D  20                 	db	32
   297  007F0E  00                 	db	0
   298  007F0F                     STR_3:
   299  007F0F  28                 	db	40
   300  007F10  31                 	db	49	;'1'
   301  007F11  29                 	db	41
   302  007F12  20                 	db	32
   303  007F13  65                 	db	101	;'e'
   304  007F14  78                 	db	120	;'x'
   305  007F15  70                 	db	112	;'p'
   306  007F16  72                 	db	114	;'r'
   307  007F17  65                 	db	101	;'e'
   308  007F18  73                 	db	115	;'s'
   309  007F19  73                 	db	115	;'s'
   310  007F1A  6F                 	db	111	;'o'
   311  007F1B  20                 	db	32
   312  007F1C  20                 	db	32
   313  007F1D  28                 	db	40
   314  007F1E  32                 	db	50	;'2'
   315  007F1F  29                 	db	41
   316  007F20  20                 	db	32
   317  007F21  61                 	db	97	;'a'
   318  007F22  6D                 	db	109	;'m'
   319  007F23  65                 	db	101	;'e'
   320  007F24  72                 	db	114	;'r'
   321  007F25  69                 	db	105	;'i'
   322  007F26  63                 	db	99	;'c'
   323  007F27  61                 	db	97	;'a'
   324  007F28  6E                 	db	110	;'n'
   325  007F29  6F                 	db	111	;'o'
   326  007F2A  00                 	db	0
   327  007F2B                     STR_6:
   328  007F2B  54                 	db	84	;'T'
   329  007F2C  41                 	db	65	;'A'
   330  007F2D  4D                 	db	77	;'M'
   331  007F2E  41                 	db	65	;'A'
   332  007F2F  4E                 	db	78	;'N'
   333  007F30  48                 	db	72	;'H'
   334  007F31  4F                 	db	79	;'O'
   335  007F32  20                 	db	32
   336  007F33  44                 	db	68	;'D'
   337  007F34  4F                 	db	79	;'O'
   338  007F35  20                 	db	32
   339  007F36  41                 	db	65	;'A'
   340  007F37  4D                 	db	77	;'M'
   341  007F38  45                 	db	69	;'E'
   342  007F39  52                 	db	82	;'R'
   343  007F3A  49                 	db	73	;'I'
   344  007F3B  43                 	db	67	;'C'
   345  007F3C  41                 	db	65	;'A'
   346  007F3D  4E                 	db	78	;'N'
   347  007F3E  4F                 	db	79	;'O'
   348  007F3F  00                 	db	0
   349  007F40                     STR_7:
   350  007F40  54                 	db	84	;'T'
   351  007F41  41                 	db	65	;'A'
   352  007F42  4D                 	db	77	;'M'
   353  007F43  41                 	db	65	;'A'
   354  007F44  4E                 	db	78	;'N'
   355  007F45  48                 	db	72	;'H'
   356  007F46  4F                 	db	79	;'O'
   357  007F47  20                 	db	32
   358  007F48  44                 	db	68	;'D'
   359  007F49  4F                 	db	79	;'O'
   360  007F4A  20                 	db	32
   361  007F4B  43                 	db	67	;'C'
   362  007F4C  41                 	db	65	;'A'
   363  007F4D  50                 	db	80	;'P'
   364  007F4E  55                 	db	85	;'U'
   365  007F4F  43                 	db	67	;'C'
   366  007F50  43                 	db	67	;'C'
   367  007F51  49                 	db	73	;'I'
   368  007F52  4E                 	db	78	;'N'
   369  007F53  4F                 	db	79	;'O'
   370  007F54  00                 	db	0
   371  007F55                     STR_14:
   372  007F55  53                 	db	83	;'S'
   373  007F56  45                 	db	69	;'E'
   374  007F57  55                 	db	85	;'U'
   375  007F58  20                 	db	32
   376  007F59  43                 	db	67	;'C'
   377  007F5A  41                 	db	65	;'A'
   378  007F5B  46                 	db	70	;'F'
   379  007F5C  45                 	db	69	;'E'
   380  007F5D  20                 	db	32
   381  007F5E  45                 	db	69	;'E'
   382  007F5F  53                 	db	83	;'S'
   383  007F60  54                 	db	84	;'T'
   384  007F61  41                 	db	65	;'A'
   385  007F62  20                 	db	32
   386  007F63  50                 	db	80	;'P'
   387  007F64  52                 	db	82	;'R'
   388  007F65  4F                 	db	79	;'O'
   389  007F66  4E                 	db	78	;'N'
   390  007F67  54                 	db	84	;'T'
   391  007F68  4F                 	db	79	;'O'
   392  007F69  00                 	db	0
   393  007F6A                     STR_5:
   394  007F6A  54                 	db	84	;'T'
   395  007F6B  41                 	db	65	;'A'
   396  007F6C  4D                 	db	77	;'M'
   397  007F6D  41                 	db	65	;'A'
   398  007F6E  4E                 	db	78	;'N'
   399  007F6F  48                 	db	72	;'H'
   400  007F70  4F                 	db	79	;'O'
   401  007F71  20                 	db	32
   402  007F72  44                 	db	68	;'D'
   403  007F73  4F                 	db	79	;'O'
   404  007F74  20                 	db	32
   405  007F75  45                 	db	69	;'E'
   406  007F76  58                 	db	88	;'X'
   407  007F77  50                 	db	80	;'P'
   408  007F78  52                 	db	82	;'R'
   409  007F79  45                 	db	69	;'E'
   410  007F7A  53                 	db	83	;'S'
   411  007F7B  53                 	db	83	;'S'
   412  007F7C  4F                 	db	79	;'O'
   413  007F7D  00                 	db	0
   414  007F7E                     STR_13:
   415  007F7E  43                 	db	67	;'C'
   416  007F7F  41                 	db	65	;'A'
   417  007F80  46                 	db	70	;'F'
   418  007F81  45                 	db	69	;'E'
   419  007F82  20                 	db	32
   420  007F83  44                 	db	68	;'D'
   421  007F84  45                 	db	69	;'E'
   422  007F85  53                 	db	83	;'S'
   423  007F86  45                 	db	69	;'E'
   424  007F87  4A                 	db	74	;'J'
   425  007F88  41                 	db	65	;'A'
   426  007F89  44                 	db	68	;'D'
   427  007F8A  4F                 	db	79	;'O'
   428  007F8B  20                 	db	32
   429  007F8C  20                 	db	32
   430  007F8D  20                 	db	32
   431  007F8E  20                 	db	32
   432  007F8F  00                 	db	0
   433  007F90                     STR_17:
   434  007F90  20                 	db	32
   435  007F91  4F                 	db	79	;'O'
   436  007F92  50                 	db	80	;'P'
   437  007F93  43                 	db	67	;'C'
   438  007F94  41                 	db	65	;'A'
   439  007F95  4F                 	db	79	;'O'
   440  007F96  20                 	db	32
   441  007F97  44                 	db	68	;'D'
   442  007F98  45                 	db	69	;'E'
   443  007F99  53                 	db	83	;'S'
   444  007F9A  45                 	db	69	;'E'
   445  007F9B  4A                 	db	74	;'J'
   446  007F9C  41                 	db	65	;'A'
   447  007F9D  44                 	db	68	;'D'
   448  007F9E  41                 	db	65	;'A'
   449  007F9F  20                 	db	32
   450  007FA0  00                 	db	0
   451  007FA1                     STR_11:
   452  007FA1  28                 	db	40
   453  007FA2  31                 	db	49	;'1'
   454  007FA3  29                 	db	41
   455  007FA4  4F                 	db	79	;'O'
   456  007FA5  4B                 	db	75	;'K'
   457  007FA6  20                 	db	32
   458  007FA7  28                 	db	40
   459  007FA8  32                 	db	50	;'2'
   460  007FA9  29                 	db	41
   461  007FAA  43                 	db	67	;'C'
   462  007FAB  41                 	db	65	;'A'
   463  007FAC  4E                 	db	78	;'N'
   464  007FAD  43                 	db	67	;'C'
   465  007FAE  45                 	db	69	;'E'
   466  007FAF  4C                 	db	76	;'L'
   467  007FB0  20                 	db	32
   468  007FB1  00                 	db	0
   469  007FB2                     STR_2:
   470  007FB2  45                 	db	69	;'E'
   471  007FB3  53                 	db	83	;'S'
   472  007FB4  43                 	db	67	;'C'
   473  007FB5  4F                 	db	79	;'O'
   474  007FB6  4C                 	db	76	;'L'
   475  007FB7  48                 	db	72	;'H'
   476  007FB8  41                 	db	65	;'A'
   477  007FB9  20                 	db	32
   478  007FBA  53                 	db	83	;'S'
   479  007FBB  45                 	db	69	;'E'
   480  007FBC  55                 	db	85	;'U'
   481  007FBD  20                 	db	32
   482  007FBE  43                 	db	67	;'C'
   483  007FBF  41                 	db	65	;'A'
   484  007FC0  46                 	db	70	;'F'
   485  007FC1  45                 	db	69	;'E'
   486  007FC2  00                 	db	0
   487  007FC3                     STR_8:
   488  007FC3  54                 	db	84	;'T'
   489  007FC4  41                 	db	65	;'A'
   490  007FC5  4D                 	db	77	;'M'
   491  007FC6  41                 	db	65	;'A'
   492  007FC7  4E                 	db	78	;'N'
   493  007FC8  48                 	db	72	;'H'
   494  007FC9  4F                 	db	79	;'O'
   495  007FCA  20                 	db	32
   496  007FCB  44                 	db	68	;'D'
   497  007FCC  4F                 	db	79	;'O'
   498  007FCD  20                 	db	32
   499  007FCE  4C                 	db	76	;'L'
   500  007FCF  41                 	db	65	;'A'
   501  007FD0  54                 	db	84	;'T'
   502  007FD1  54                 	db	84	;'T'
   503  007FD2  45                 	db	69	;'E'
   504  007FD3  00                 	db	0
   505  007FD4                     STR_16:
   506  007FD4  20                 	db	32
   507  007FD5  20                 	db	32
   508  007FD6  50                 	db	80	;'P'
   509  007FD7  52                 	db	82	;'R'
   510  007FD8  45                 	db	69	;'E'
   511  007FD9  53                 	db	83	;'S'
   512  007FDA  53                 	db	83	;'S'
   513  007FDB  49                 	db	73	;'I'
   514  007FDC  4F                 	db	79	;'O'
   515  007FDD  4E                 	db	78	;'N'
   516  007FDE  45                 	db	69	;'E'
   517  007FDF  20                 	db	32
   518  007FE0  41                 	db	65	;'A'
   519  007FE1  00                 	db	0
   520  007FE2                     STR_1:
   521  007FE2  20                 	db	32
   522  007FE3  20                 	db	32
   523  007FE4  20                 	db	32
   524  007FE5  59                 	db	89	;'Y'
   525  007FE6  30                 	db	48	;'0'
   526  007FE7  55                 	db	85	;'U'
   527  007FE8  52                 	db	82	;'R'
   528  007FE9  43                 	db	67	;'C'
   529  007FEA  30                 	db	48	;'0'
   530  007FEB  46                 	db	70	;'F'
   531  007FEC  46                 	db	70	;'F'
   532  007FED  33                 	db	51	;'3'
   533  007FEE  20                 	db	32
   534  007FEF  00                 	db	0
   535  007FF0                     STR_12:
   536  007FF0  50                 	db	80	;'P'
   537  007FF1  52                 	db	82	;'R'
   538  007FF2  45                 	db	69	;'E'
   539  007FF3  50                 	db	80	;'P'
   540  007FF4  41                 	db	65	;'A'
   541  007FF5  52                 	db	82	;'R'
   542  007FF6  41                 	db	65	;'A'
   543  007FF7  4E                 	db	78	;'N'
   544  007FF8  44                 	db	68	;'D'
   545  007FF9  4F                 	db	79	;'O'
   546  007FFA  20                 	db	32
   547  007FFB  4F                 	db	79	;'O'
   548  007FFC  20                 	db	32
   549  007FFD  00                 	db	0
   550  0000                     
   551                           ; #config settings
   552  007FFE  00                 	db	0	; dummy byte at the end
   553  0000                     
   554                           	psect	cinit
   555  006BB2                     __pcinit:
   556                           	opt callstack 0
   557  006BB2                     start_initialization:
   558                           	opt callstack 0
   559  006BB2                     __initialization:
   560                           	opt callstack 0
   561                           
   562                           ; Initialize objects allocated to BANK1 (50 bytes)
   563                           ; load TBLPTR registers with __pidataBANK1
   564  006BB2  0E4A               	movlw	low __pidataBANK1
   565  006BB4  6EF6               	movwf	tblptrl,c
   566  006BB6  0E6B               	movlw	high __pidataBANK1
   567  006BB8  6EF7               	movwf	tblptrh,c
   568  006BBA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   569  006BBC  6EF8               	movwf	tblptru,c
   570  006BBE  EE01  F000         	lfsr	0,__pdataBANK1
   571  006BC2  EE10 F032          	lfsr	1,50
   572  006BC6                     copy_data0:
   573  006BC6  0009               	tblrd		*+
   574  006BC8  CFF5 FFEE          	movff	tablat,postinc0
   575  006BCC  50E5               	movf	postdec1,w,c
   576  006BCE  50E1               	movf	fsr1l,w,c
   577  006BD0  E1FA               	bnz	copy_data0
   578                           
   579                           ; Initialize objects allocated to COMRAM (26 bytes)
   580                           ; load TBLPTR registers with __pidataCOMRAM
   581  006BD2  0EB6               	movlw	low __pidataCOMRAM
   582  006BD4  6EF6               	movwf	tblptrl,c
   583  006BD6  0E6A               	movlw	high __pidataCOMRAM
   584  006BD8  6EF7               	movwf	tblptrh,c
   585  006BDA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   586  006BDC  6EF8               	movwf	tblptru,c
   587  006BDE  EE00  F036         	lfsr	0,__pdataCOMRAM
   588  006BE2  EE10 F01A          	lfsr	1,26
   589  006BE6                     copy_data1:
   590  006BE6  0009               	tblrd		*+
   591  006BE8  CFF5 FFEE          	movff	tablat,postinc0
   592  006BEC  50E5               	movf	postdec1,w,c
   593  006BEE  50E1               	movf	fsr1l,w,c
   594  006BF0  E1FA               	bnz	copy_data1
   595  006BF2                     end_of_initialization:
   596                           	opt callstack 0
   597  006BF2                     __end_of__initialization:
   598                           	opt callstack 0
   599  006BF2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   600  006BF4  6EF8               	movwf	tblptru,c
   601  006BF6  0100               	movlb	0
   602  006BF8  EFBC  F03B         	goto	_main	;jump to C main() function
   603                           
   604                           	psect	dataCOMRAM
   605  000036                     __pdataCOMRAM:
   606                           	opt callstack 0
   607  000036                     main@F200:
   608                           	opt callstack 0
   609  000036                     	ds	16
   610  000046                     _atrasoMax:
   611                           	opt callstack 0
   612  000046                     	ds	2
   613  000048                     _atrasoMed:
   614                           	opt callstack 0
   615  000048                     	ds	2
   616  00004A                     _atrasoMin:
   617                           	opt callstack 0
   618  00004A                     	ds	2
   619  00004C                     _atraso:
   620                           	opt callstack 0
   621  00004C                     	ds	2
   622  00004E                     _atraso_min:
   623                           	opt callstack 0
   624  00004E                     	ds	2
   625                           
   626                           	psect	dataBANK1
   627  000100                     __pdataBANK1:
   628                           	opt callstack 0
   629  000100                     main@F196:
   630                           	opt callstack 0
   631  000100                     	ds	50
   632                           
   633                           	psect	cstackBANK0
   634  000080                     __pcstackBANK0:
   635                           	opt callstack 0
   636  000080                     main@cafes:
   637                           	opt callstack 0
   638                           
   639                           ; 50 bytes @ 0x0
   640  000080                     	ds	50
   641  0000B2                     main@tamanhos:
   642                           	opt callstack 0
   643                           
   644                           ; 16 bytes @ 0x32
   645  0000B2                     	ds	16
   646  0000C2                     main@frase:
   647                           	opt callstack 0
   648                           
   649                           ; 50 bytes @ 0x42
   650  0000C2                     	ds	50
   651  0000F4                     main@corfirmar:
   652                           	opt callstack 0
   653                           
   654                           ; 1 bytes @ 0x74
   655  0000F4                     	ds	1
   656  0000F5                     main@cafe:
   657                           	opt callstack 0
   658                           
   659                           ; 1 bytes @ 0x75
   660  0000F5                     	ds	1
   661  0000F6                     main@tamanho:
   662                           	opt callstack 0
   663                           
   664                           ; 1 bytes @ 0x76
   665  0000F6                     	ds	1
   666  0000F7                     main@tempo:
   667                           	opt callstack 0
   668                           
   669                           ; 1 bytes @ 0x77
   670  0000F7                     	ds	1
   671                           
   672                           	psect	cstackCOMRAM
   673  000001                     __pcstackCOMRAM:
   674                           	opt callstack 0
   675  000001                     ?_strlen:
   676                           	opt callstack 0
   677  000001                     ?___awdiv:
   678                           	opt callstack 0
   679  000001                     ?___xxtofl:
   680                           	opt callstack 0
   681  000001                     lcd_wr@val:
   682                           	opt callstack 0
   683  000001                     atraso_ms@t:
   684                           	opt callstack 0
   685  000001                     ___awdiv@dividend:
   686                           	opt callstack 0
   687  000001                     strlen@s:
   688                           	opt callstack 0
   689  000001                     ___xxtofl@val:
   690                           	opt callstack 0
   691                           
   692                           ; 4 bytes @ 0x0
   693  000001                     	ds	2
   694  000003                     atraso_ms@i:
   695                           	opt callstack 0
   696  000003                     ___awdiv@divisor:
   697                           	opt callstack 0
   698  000003                     strlen@a:
   699                           	opt callstack 0
   700                           
   701                           ; 2 bytes @ 0x2
   702  000003                     	ds	2
   703  000005                     ??___xxtofl:
   704  000005                     atraso_ms@j:
   705                           	opt callstack 0
   706  000005                     ___awdiv@counter:
   707                           	opt callstack 0
   708  000005                     strcpy@dest:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0x4
   712  000005                     	ds	1
   713  000006                     atraso_ms@k:
   714                           	opt callstack 0
   715  000006                     ___awdiv@sign:
   716                           	opt callstack 0
   717                           
   718                           ; 1 bytes @ 0x5
   719  000006                     	ds	1
   720  000007                     lcd_cmd@val:
   721                           	opt callstack 0
   722  000007                     lcd_dat@val:
   723                           	opt callstack 0
   724  000007                     tc_tecla@timeout:
   725                           	opt callstack 0
   726  000007                     ___awdiv@quotient:
   727                           	opt callstack 0
   728  000007                     strcpy@src:
   729                           	opt callstack 0
   730                           
   731                           ; 2 bytes @ 0x6
   732  000007                     	ds	1
   733  000008                     lcd_str@str:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x7
   737  000008                     	ds	1
   738  000009                     ??_strcpy:
   739  000009                     ?___awmod:
   740                           	opt callstack 0
   741  000009                     ___xxtofl@sign:
   742                           	opt callstack 0
   743  000009                     tc_tecla@to:
   744                           	opt callstack 0
   745  000009                     ___awmod@dividend:
   746                           	opt callstack 0
   747                           
   748                           ; 2 bytes @ 0x8
   749  000009                     	ds	1
   750  00000A                     ??_lcd_str:
   751  00000A                     ___xxtofl@exp:
   752                           	opt callstack 0
   753                           
   754                           ; 1 bytes @ 0x9
   755  00000A                     	ds	1
   756  00000B                     tc_tecla@tmp:
   757                           	opt callstack 0
   758  00000B                     ___awmod@divisor:
   759                           	opt callstack 0
   760  00000B                     strcpy@s:
   761                           	opt callstack 0
   762  00000B                     ___xxtofl@arg:
   763                           	opt callstack 0
   764                           
   765                           ; 4 bytes @ 0xA
   766  00000B                     	ds	1
   767  00000C                     lcd_str@i:
   768                           	opt callstack 0
   769  00000C                     tc_tecla@ret:
   770                           	opt callstack 0
   771                           
   772                           ; 1 bytes @ 0xB
   773  00000C                     	ds	1
   774  00000D                     tc_tecla@i:
   775                           	opt callstack 0
   776  00000D                     ___awmod@counter:
   777                           	opt callstack 0
   778  00000D                     scrollDisplay@linha1:
   779                           	opt callstack 0
   780  00000D                     strcpy@d:
   781                           	opt callstack 0
   782                           
   783                           ; 2 bytes @ 0xC
   784  00000D                     	ds	1
   785  00000E                     opcaoDesejada@menu:
   786                           	opt callstack 0
   787  00000E                     ___awmod@sign:
   788                           	opt callstack 0
   789                           
   790                           ; 1 bytes @ 0xD
   791  00000E                     	ds	1
   792  00000F                     ?___flmul:
   793                           	opt callstack 0
   794  00000F                     opcaoDesejada@tmp:
   795                           	opt callstack 0
   796  00000F                     scrollDisplay@linha2:
   797                           	opt callstack 0
   798  00000F                     tempoPreparo@segundos:
   799                           	opt callstack 0
   800  00000F                     strcat@dest:
   801                           	opt callstack 0
   802  00000F                     ___flmul@b:
   803                           	opt callstack 0
   804                           
   805                           ; 4 bytes @ 0xE
   806  00000F                     	ds	2
   807  000011                     scrollDisplay@i:
   808                           	opt callstack 0
   809  000011                     tempoPreparo@i:
   810                           	opt callstack 0
   811  000011                     strcat@src:
   812                           	opt callstack 0
   813                           
   814                           ; 2 bytes @ 0x10
   815  000011                     	ds	2
   816  000013                     tempoPreparo@aux:
   817                           	opt callstack 0
   818  000013                     ___flmul@a:
   819                           	opt callstack 0
   820                           
   821                           ; 4 bytes @ 0x12
   822  000013                     	ds	1
   823  000014                     tempoPreparo@delay:
   824                           	opt callstack 0
   825                           
   826                           ; 2 bytes @ 0x13
   827  000014                     	ds	2
   828  000016                     tempoPreparo@k:
   829                           	opt callstack 0
   830                           
   831                           ; 2 bytes @ 0x15
   832  000016                     	ds	1
   833  000017                     ??___flmul:
   834                           
   835                           ; 1 bytes @ 0x16
   836  000017                     	ds	4
   837  00001B                     ___flmul@sign:
   838                           	opt callstack 0
   839                           
   840                           ; 1 bytes @ 0x1A
   841  00001B                     	ds	1
   842  00001C                     ___flmul@grs:
   843                           	opt callstack 0
   844                           
   845                           ; 4 bytes @ 0x1B
   846  00001C                     	ds	4
   847  000020                     ___flmul@aexp:
   848                           	opt callstack 0
   849                           
   850                           ; 1 bytes @ 0x1F
   851  000020                     	ds	1
   852  000021                     ___flmul@bexp:
   853                           	opt callstack 0
   854                           
   855                           ; 1 bytes @ 0x20
   856  000021                     	ds	1
   857  000022                     ___flmul@prod:
   858                           	opt callstack 0
   859                           
   860                           ; 4 bytes @ 0x21
   861  000022                     	ds	4
   862  000026                     ___flmul@temp:
   863                           	opt callstack 0
   864                           
   865                           ; 2 bytes @ 0x25
   866  000026                     	ds	2
   867  000028                     ?___fltol:
   868                           	opt callstack 0
   869  000028                     ___fltol@f1:
   870                           	opt callstack 0
   871                           
   872                           ; 4 bytes @ 0x27
   873  000028                     	ds	4
   874  00002C                     ??___fltol:
   875                           
   876                           ; 1 bytes @ 0x2B
   877  00002C                     	ds	4
   878  000030                     ___fltol@sign1:
   879                           	opt callstack 0
   880                           
   881                           ; 1 bytes @ 0x2F
   882  000030                     	ds	1
   883  000031                     ___fltol@exp1:
   884                           	opt callstack 0
   885                           
   886                           ; 1 bytes @ 0x30
   887  000031                     	ds	1
   888  000032                     ??_main:
   889                           
   890                           ; 1 bytes @ 0x31
   891  000032                     	ds	4
   892                           
   893 ;;
   894 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   895 ;;
   896 ;; *************** function _main *****************
   897 ;; Defined at:
   898 ;;		line 9 in file "main.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  frase          50   66[BANK0 ] unsigned char [50]
   903 ;;  cafes          50    0[BANK0 ] unsigned char [10][5]
   904 ;;  tamanhos       16   50[BANK0 ] unsigned char [8][2]
   905 ;;  tempo           1  119[BANK0 ] unsigned char 
   906 ;;  tamanho         1  118[BANK0 ] unsigned char 
   907 ;;  cafe            1  117[BANK0 ] unsigned char 
   908 ;;  corfirmar       1  116[BANK0 ] unsigned char 
   909 ;;  i               1    0        unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   919 ;;      Params:         0       0       0       0       0       0       0
   920 ;;      Locals:         0     120       0       0       0       0       0
   921 ;;      Temps:          4       0       0       0       0       0       0
   922 ;;      Totals:         4     120       0       0       0       0       0
   923 ;;Total ram usage:      124 bytes
   924 ;; Hardware stack levels required when called:    4
   925 ;; This function calls:
   926 ;;		___flmul
   927 ;;		___fltol
   928 ;;		___xxtofl
   929 ;;		_atraso_ms
   930 ;;		_lcd_cmd
   931 ;;		_lcd_init
   932 ;;		_lcd_str
   933 ;;		_opcaoDesejada
   934 ;;		_scrollDisplay
   935 ;;		_strcat
   936 ;;		_strcpy
   937 ;;		_tempoPreparo
   938 ;; This function is called by:
   939 ;;		Startup code after reset
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text0
   944  007778                     __ptext0:
   945                           	opt callstack 0
   946  007778                     _main:
   947                           	opt callstack 27
   948  007778                     
   949                           ;main.c: 11:     unsigned char i, tempo;;main.c: 12:     unsigned char cafe, tamanho, co
      +                          rfirmar;;main.c: 13:     unsigned char cafes[5][10] = {"EXPRESSO", "AMERICANO", "CAPUCCI
      +                          NO", "LATTE"};
   950  007778  EE21  F000         	lfsr	2,main@F196
   951  00777C  EE10  F080         	lfsr	1,main@cafes
   952  007780  0E31               	movlw	49
   953  007782                     u1911:
   954  007782  CFDB FFE3          	movff	plusw2,plusw1
   955  007786  06E8               	decf	wreg,f,c
   956  007788  E2FC               	bc	u1911
   957                           
   958                           ;main.c: 14:     unsigned char tamanhos[2][8] = {"90ml" , "150ml"};
   959  00778A  EE20  F036         	lfsr	2,main@F200
   960  00778E  EE10  F0B2         	lfsr	1,main@tamanhos
   961  007792  0E0F               	movlw	15
   962  007794                     u1921:
   963  007794  CFDB FFE3          	movff	plusw2,plusw1
   964  007798  06E8               	decf	wreg,f,c
   965  00779A  E2FC               	bc	u1921
   966  00779C                     
   967                           ;main.c: 17:     (*(volatile __near unsigned char*)0xFC1) = 0x06;
   968  00779C  0E06               	movlw	6
   969  00779E  6EC1               	movwf	193,c	;volatile
   970  0077A0                     
   971                           ;main.c: 18:     (*(volatile __near unsigned char*)0xF95) = 0x00;
   972  0077A0  0E00               	movlw	0
   973  0077A2  6E95               	movwf	149,c	;volatile
   974  0077A4                     
   975                           ;main.c: 19:     (*(volatile __near unsigned char*)0xF96) = 0x00;
   976  0077A4  0E00               	movlw	0
   977  0077A6  6E96               	movwf	150,c	;volatile
   978  0077A8                     
   979                           ;main.c: 20:     (*(volatile __near unsigned char*)0xF93) = 0x01;
   980  0077A8  0E01               	movlw	1
   981  0077AA  6E93               	movwf	147,c	;volatile
   982  0077AC                     
   983                           ;main.c: 23:     (*(volatile __near unsigned char*)0xF93) = 0xF8;
   984  0077AC  0EF8               	movlw	248
   985  0077AE  6E93               	movwf	147,c	;volatile
   986  0077B0                     
   987                           ;main.c: 25:     lcd_init();
   988  0077B0  ECFE  F035         	call	_lcd_init	;wreg free
   989  0077B4                     l2302:
   990                           
   991                           ;main.c: 28:     {;main.c: 29:         (*(volatile __near unsigned char*)0xFC1) = 0x06;
   992  0077B4  0E06               	movlw	6
   993  0077B6  6EC1               	movwf	193,c	;volatile
   994  0077B8                     
   995                           ;main.c: 30:         (*(volatile __near unsigned char*)0xF95) = 0x00;
   996  0077B8  0E00               	movlw	0
   997  0077BA  6E95               	movwf	149,c	;volatile
   998  0077BC                     
   999                           ;main.c: 31:         (*(volatile __near unsigned char*)0xF96) = 0x00;
  1000  0077BC  0E00               	movlw	0
  1001  0077BE  6E96               	movwf	150,c	;volatile
  1002  0077C0                     
  1003                           ;main.c: 32:         (*(volatile __near unsigned char*)0xF93) = 0x01;
  1004  0077C0  0E01               	movlw	1
  1005  0077C2  6E93               	movwf	147,c	;volatile
  1006  0077C4                     
  1007                           ;main.c: 34:         (*(volatile __near unsigned char*)0xF93) = 0xF8;
  1008  0077C4  0EF8               	movlw	248
  1009  0077C6  6E93               	movwf	147,c	;volatile
  1010  0077C8                     
  1011                           ;main.c: 36:         lcd_cmd(0x01);
  1012  0077C8  0E01               	movlw	1
  1013  0077CA  EC7B  F035         	call	_lcd_cmd
  1014  0077CE                     
  1015                           ;main.c: 37:         lcd_cmd(0x80);
  1016  0077CE  0E80               	movlw	128
  1017  0077D0  EC7B  F035         	call	_lcd_cmd
  1018  0077D4                     
  1019                           ;main.c: 38:         lcd_str("   Y0URC0FF3 ");
  1020  0077D4  0EE2               	movlw	low STR_1
  1021  0077D6  6E08               	movwf	lcd_str@str^0,c
  1022  0077D8  0E7F               	movlw	high STR_1
  1023  0077DA  6E09               	movwf	(lcd_str@str+1)^0,c
  1024  0077DC  EC8C  F036         	call	_lcd_str	;wreg free
  1025  0077E0                     
  1026                           ;main.c: 39:         lcd_cmd(0xC0);
  1027  0077E0  0EC0               	movlw	192
  1028  0077E2  EC7B  F035         	call	_lcd_cmd
  1029  0077E6                     
  1030                           ;main.c: 40:         lcd_str("ESCOLHA SEU CAFE");
  1031  0077E6  0EB2               	movlw	low STR_2
  1032  0077E8  6E08               	movwf	lcd_str@str^0,c
  1033  0077EA  0E7F               	movlw	high STR_2
  1034  0077EC  6E09               	movwf	(lcd_str@str+1)^0,c
  1035  0077EE  EC8C  F036         	call	_lcd_str	;wreg free
  1036  0077F2                     
  1037                           ;main.c: 41:         atraso_ms(2000);
  1038  0077F2  0E07               	movlw	7
  1039  0077F4  6E02               	movwf	(atraso_ms@t+1)^0,c
  1040  0077F6  0ED0               	movlw	208
  1041  0077F8  6E01               	movwf	atraso_ms@t^0,c
  1042  0077FA  EC5A  F036         	call	_atraso_ms	;wreg free
  1043  0077FE                     l2324:
  1044                           
  1045                           ;main.c: 44:         {;main.c: 45:             scrollDisplay("(1) expresso  (2) american
      +                          o", "(3) capuccino (4) latte       ");
  1046  0077FE  0E0F               	movlw	low STR_3
  1047  007800  6E0D               	movwf	scrollDisplay@linha1^0,c
  1048  007802  0E7F               	movlw	high STR_3
  1049  007804  6E0E               	movwf	(scrollDisplay@linha1+1)^0,c
  1050  007806  0EF0               	movlw	low STR_4
  1051  007808  6E0F               	movwf	scrollDisplay@linha2^0,c
  1052  00780A  0E7E               	movlw	high STR_4
  1053  00780C  6E10               	movwf	(scrollDisplay@linha2+1)^0,c
  1054  00780E  ECF0  F037         	call	_scrollDisplay	;wreg free
  1055  007812                     
  1056                           ;main.c: 46:             cafe = opcaoDesejada('1');
  1057  007812  0E31               	movlw	49
  1058  007814  EC82  F037         	call	_opcaoDesejada
  1059  007818  0100               	movlb	0	; () banked
  1060  00781A  6FF5               	movwf	main@cafe& (0+255),b
  1061                           
  1062                           ;main.c: 48:             char frase[50];;main.c: 50:             switch (cafe)
  1063  00781C  EF4C  F03C         	goto	l2346
  1064  007820                     l2328:
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;main.c: 53:                     strcpy(frase, "TAMANHO DO EXPRESSO");
  1068  007820  0EC2               	movlw	low main@frase
  1069  007822  6E05               	movwf	strcpy@dest^0,c
  1070  007824  0E00               	movlw	high main@frase
  1071  007826  6E06               	movwf	(strcpy@dest+1)^0,c
  1072  007828  0E6A               	movlw	low STR_5
  1073  00782A  6E07               	movwf	strcpy@src^0,c
  1074  00782C  0E7F               	movlw	high STR_5
  1075  00782E  6E08               	movwf	(strcpy@src+1)^0,c
  1076  007830  EC2C  F036         	call	_strcpy	;wreg free
  1077  007834                     
  1078                           ;main.c: 54:                     tempo = 30;
  1079  007834  0E1E               	movlw	30
  1080  007836  0100               	movlb	0	; () banked
  1081  007838  6FF7               	movwf	main@tempo& (0+255),b
  1082                           
  1083                           ;main.c: 55:                     break;
  1084  00783A  EF69  F03C         	goto	l2348
  1085  00783E                     l2332:
  1086                           
  1087                           ; BSR set to: 0
  1088                           ;main.c: 57:                     strcpy(frase, "TAMANHO DO AMERICANO");
  1089  00783E  0EC2               	movlw	low main@frase
  1090  007840  6E05               	movwf	strcpy@dest^0,c
  1091  007842  0E00               	movlw	high main@frase
  1092  007844  6E06               	movwf	(strcpy@dest+1)^0,c
  1093  007846  0E2B               	movlw	low STR_6
  1094  007848  6E07               	movwf	strcpy@src^0,c
  1095  00784A  0E7F               	movlw	high STR_6
  1096  00784C  6E08               	movwf	(strcpy@src+1)^0,c
  1097  00784E  EC2C  F036         	call	_strcpy	;wreg free
  1098  007852                     
  1099                           ;main.c: 58:                     tempo = 50;
  1100  007852  0E32               	movlw	50
  1101  007854  0100               	movlb	0	; () banked
  1102  007856  6FF7               	movwf	main@tempo& (0+255),b
  1103                           
  1104                           ;main.c: 59:                     break;
  1105  007858  EF69  F03C         	goto	l2348
  1106  00785C                     l2336:
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;main.c: 61:                     strcpy(frase, "TAMANHO DO CAPUCCINO");
  1110  00785C  0EC2               	movlw	low main@frase
  1111  00785E  6E05               	movwf	strcpy@dest^0,c
  1112  007860  0E00               	movlw	high main@frase
  1113  007862  6E06               	movwf	(strcpy@dest+1)^0,c
  1114  007864  0E40               	movlw	low STR_7
  1115  007866  6E07               	movwf	strcpy@src^0,c
  1116  007868  0E7F               	movlw	high STR_7
  1117  00786A  6E08               	movwf	(strcpy@src+1)^0,c
  1118  00786C  EC2C  F036         	call	_strcpy	;wreg free
  1119  007870                     
  1120                           ;main.c: 62:                     tempo = 60;
  1121  007870  0E3C               	movlw	60
  1122  007872  0100               	movlb	0	; () banked
  1123  007874  6FF7               	movwf	main@tempo& (0+255),b
  1124                           
  1125                           ;main.c: 63:                     break;
  1126  007876  EF69  F03C         	goto	l2348
  1127  00787A                     l2340:
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;main.c: 65:                     strcpy(frase, "TAMANHO DO LATTE");
  1131  00787A  0EC2               	movlw	low main@frase
  1132  00787C  6E05               	movwf	strcpy@dest^0,c
  1133  00787E  0E00               	movlw	high main@frase
  1134  007880  6E06               	movwf	(strcpy@dest+1)^0,c
  1135  007882  0EC3               	movlw	low STR_8
  1136  007884  6E07               	movwf	strcpy@src^0,c
  1137  007886  0E7F               	movlw	high STR_8
  1138  007888  6E08               	movwf	(strcpy@src+1)^0,c
  1139  00788A  EC2C  F036         	call	_strcpy	;wreg free
  1140  00788E                     
  1141                           ;main.c: 66:                     tempo = 40;
  1142  00788E  0E28               	movlw	40
  1143  007890  0100               	movlb	0	; () banked
  1144  007892  6FF7               	movwf	main@tempo& (0+255),b
  1145                           
  1146                           ;main.c: 67:                     break;
  1147  007894  EF69  F03C         	goto	l2348
  1148  007898                     l2346:
  1149                           
  1150                           ; BSR set to: 0
  1151  007898  51F5               	movf	main@cafe& (0+255),w,b
  1152  00789A  6E32               	movwf	??_main^0,c
  1153  00789C  6A33               	clrf	(??_main+1)^0,c
  1154                           
  1155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1156                           ; Switch size 1, requested type "simple"
  1157                           ; Number of cases is 1, Range of values is 0 to 0
  1158                           ; switch strategies available:
  1159                           ; Name         Instructions Cycles
  1160                           ; simple_byte            4     3 (average)
  1161                           ;	Chosen strategy is simple_byte
  1162  00789E  5033               	movf	(??_main+1)^0,w,c
  1163  0078A0  0A00               	xorlw	0	; case 0
  1164  0078A2  B4D8               	btfsc	status,2,c
  1165  0078A4  EF56  F03C         	goto	l2412
  1166  0078A8  EF69  F03C         	goto	l2348
  1167  0078AC                     l2412:
  1168                           
  1169                           ; BSR set to: 0
  1170                           ; Switch size 1, requested type "simple"
  1171                           ; Number of cases is 4, Range of values is 49 to 52
  1172                           ; switch strategies available:
  1173                           ; Name         Instructions Cycles
  1174                           ; simple_byte           13     7 (average)
  1175                           ;	Chosen strategy is simple_byte
  1176  0078AC  5032               	movf	??_main^0,w,c
  1177  0078AE  0A31               	xorlw	49	; case 49
  1178  0078B0  B4D8               	btfsc	status,2,c
  1179  0078B2  EF10  F03C         	goto	l2328
  1180  0078B6  0A03               	xorlw	3	; case 50
  1181  0078B8  B4D8               	btfsc	status,2,c
  1182  0078BA  EF1F  F03C         	goto	l2332
  1183  0078BE  0A01               	xorlw	1	; case 51
  1184  0078C0  B4D8               	btfsc	status,2,c
  1185  0078C2  EF2E  F03C         	goto	l2336
  1186  0078C6  0A07               	xorlw	7	; case 52
  1187  0078C8  B4D8               	btfsc	status,2,c
  1188  0078CA  EF3D  F03C         	goto	l2340
  1189  0078CE  EF69  F03C         	goto	l2348
  1190  0078D2                     l2348:
  1191                           
  1192                           ; BSR set to: 0
  1193                           ;main.c: 70:             scrollDisplay(frase, "(1)90 ml (2)150 ml            ");
  1194  0078D2  0EC2               	movlw	low main@frase
  1195  0078D4  6E0D               	movwf	scrollDisplay@linha1^0,c
  1196  0078D6  0E00               	movlw	high main@frase
  1197  0078D8  6E0E               	movwf	(scrollDisplay@linha1+1)^0,c
  1198  0078DA  0ED1               	movlw	low STR_9
  1199  0078DC  6E0F               	movwf	scrollDisplay@linha2^0,c
  1200  0078DE  0E7E               	movlw	high STR_9
  1201  0078E0  6E10               	movwf	(scrollDisplay@linha2+1)^0,c
  1202  0078E2  ECF0  F037         	call	_scrollDisplay	;wreg free
  1203                           
  1204                           ;main.c: 72:             tamanho = opcaoDesejada('2');
  1205  0078E6  0E32               	movlw	50
  1206  0078E8  EC82  F037         	call	_opcaoDesejada
  1207  0078EC  0100               	movlb	0	; () banked
  1208  0078EE  6FF6               	movwf	main@tamanho& (0+255),b
  1209  0078F0                     
  1210                           ; BSR set to: 0
  1211                           ;main.c: 78:             strcpy(frase,cafes[(cafe - '0') - 1]);
  1212  0078F0  0EC2               	movlw	low main@frase
  1213  0078F2  6E05               	movwf	strcpy@dest^0,c
  1214  0078F4  0E00               	movlw	high main@frase
  1215  0078F6  6E06               	movwf	(strcpy@dest+1)^0,c
  1216  0078F8  0E16               	movlw	22
  1217  0078FA  6E32               	movwf	??_main^0,c
  1218  0078FC  0EFE               	movlw	254
  1219  0078FE  6E33               	movwf	(??_main+1)^0,c
  1220  007900  51F5               	movf	main@cafe& (0+255),w,b
  1221  007902  0D0A               	mullw	10
  1222  007904  CFF3 F034          	movff	prodl,??_main+2
  1223  007908  CFF4 F035          	movff	prodh,??_main+3
  1224  00790C  5032               	movf	??_main^0,w,c
  1225  00790E  2634               	addwf	(??_main+2)^0,f,c
  1226  007910  5033               	movf	(??_main+1)^0,w,c
  1227  007912  2235               	addwfc	(??_main+3)^0,f,c
  1228  007914  0E80               	movlw	low main@cafes
  1229  007916  2434               	addwf	(??_main+2)^0,w,c
  1230  007918  6E07               	movwf	strcpy@src^0,c
  1231  00791A  0E00               	movlw	high main@cafes
  1232  00791C  2035               	addwfc	(??_main+3)^0,w,c
  1233  00791E  6E08               	movwf	(strcpy@src+1)^0,c
  1234  007920  EC2C  F036         	call	_strcpy	;wreg free
  1235  007924                     
  1236                           ;main.c: 79:             strcat(frase," ");
  1237  007924  0EC2               	movlw	low main@frase
  1238  007926  6E0F               	movwf	strcat@dest^0,c
  1239  007928  0E00               	movlw	high main@frase
  1240  00792A  6E10               	movwf	(strcat@dest+1)^0,c
  1241  00792C  0EEE               	movlw	low (STR_9+29)
  1242  00792E  6E11               	movwf	strcat@src^0,c
  1243  007930  0E7E               	movlw	high (STR_9+29)
  1244  007932  6E12               	movwf	(strcat@src+1)^0,c
  1245  007934  EC68  F035         	call	_strcat	;wreg free
  1246  007938                     
  1247                           ;main.c: 80:             strcat(frase, tamanhos[(tamanho - '0')- 1]);
  1248  007938  0EC2               	movlw	low main@frase
  1249  00793A  6E0F               	movwf	strcat@dest^0,c
  1250  00793C  0E00               	movlw	high main@frase
  1251  00793E  6E10               	movwf	(strcat@dest+1)^0,c
  1252  007940  0E78               	movlw	120
  1253  007942  6E32               	movwf	??_main^0,c
  1254  007944  0EFE               	movlw	254
  1255  007946  6E33               	movwf	(??_main+1)^0,c
  1256  007948  0100               	movlb	0	; () banked
  1257  00794A  51F6               	movf	main@tamanho& (0+255),w,b
  1258  00794C  6E34               	movwf	(??_main+2)^0,c
  1259  00794E  6A35               	clrf	(??_main+3)^0,c
  1260  007950  90D8               	bcf	status,0,c
  1261  007952  3634               	rlcf	(??_main+2)^0,f,c
  1262  007954  3635               	rlcf	(??_main+3)^0,f,c
  1263  007956  90D8               	bcf	status,0,c
  1264  007958  3634               	rlcf	(??_main+2)^0,f,c
  1265  00795A  3635               	rlcf	(??_main+3)^0,f,c
  1266  00795C  90D8               	bcf	status,0,c
  1267  00795E  3634               	rlcf	(??_main+2)^0,f,c
  1268  007960  3635               	rlcf	(??_main+3)^0,f,c
  1269  007962  5032               	movf	??_main^0,w,c
  1270  007964  2634               	addwf	(??_main+2)^0,f,c
  1271  007966  5033               	movf	(??_main+1)^0,w,c
  1272  007968  2235               	addwfc	(??_main+3)^0,f,c
  1273  00796A  0EB2               	movlw	low main@tamanhos
  1274  00796C  2434               	addwf	(??_main+2)^0,w,c
  1275  00796E  6E11               	movwf	strcat@src^0,c
  1276  007970  0E00               	movlw	high main@tamanhos
  1277  007972  2035               	addwfc	(??_main+3)^0,w,c
  1278  007974  6E12               	movwf	(strcat@src+1)^0,c
  1279  007976  EC68  F035         	call	_strcat	;wreg free
  1280  00797A                     
  1281                           ;main.c: 82:             lcd_cmd(0x01);
  1282  00797A  0E01               	movlw	1
  1283  00797C  EC7B  F035         	call	_lcd_cmd
  1284  007980                     
  1285                           ;main.c: 83:             lcd_cmd(0x80);
  1286  007980  0E80               	movlw	128
  1287  007982  EC7B  F035         	call	_lcd_cmd
  1288  007986                     
  1289                           ;main.c: 84:             lcd_str(frase);
  1290  007986  0EC2               	movlw	low main@frase
  1291  007988  6E08               	movwf	lcd_str@str^0,c
  1292  00798A  0E00               	movlw	high main@frase
  1293  00798C  6E09               	movwf	(lcd_str@str+1)^0,c
  1294  00798E  EC8C  F036         	call	_lcd_str	;wreg free
  1295  007992                     
  1296                           ;main.c: 85:             lcd_cmd(0xC0);
  1297  007992  0EC0               	movlw	192
  1298  007994  EC7B  F035         	call	_lcd_cmd
  1299  007998                     
  1300                           ;main.c: 86:             lcd_str("(1)OK (2)CANCEL ");
  1301  007998  0EA1               	movlw	low STR_11
  1302  00799A  6E08               	movwf	lcd_str@str^0,c
  1303  00799C  0E7F               	movlw	high STR_11
  1304  00799E  6E09               	movwf	(lcd_str@str+1)^0,c
  1305  0079A0  EC8C  F036         	call	_lcd_str	;wreg free
  1306  0079A4                     
  1307                           ;main.c: 89:             corfirmar = opcaoDesejada('3');
  1308  0079A4  0E33               	movlw	51
  1309  0079A6  EC82  F037         	call	_opcaoDesejada
  1310  0079AA  0100               	movlb	0	; () banked
  1311  0079AC  6FF4               	movwf	main@corfirmar& (0+255),b
  1312  0079AE                     
  1313                           ; BSR set to: 0
  1314                           ;main.c: 91:         }while(corfirmar == '2');
  1315  0079AE  0E32               	movlw	50
  1316  0079B0  19F4               	xorwf	main@corfirmar& (0+255),w,b
  1317  0079B2  B4D8               	btfsc	status,2,c
  1318  0079B4  EFDE  F03C         	goto	u1931
  1319  0079B8  EFE0  F03C         	goto	u1930
  1320  0079BC                     u1931:
  1321  0079BC  EFFF  F03B         	goto	l2324
  1322  0079C0                     u1930:
  1323  0079C0                     
  1324                           ; BSR set to: 0
  1325                           ;main.c: 94:         if(tamanho == '2')
  1326  0079C0  0E32               	movlw	50
  1327  0079C2  19F6               	xorwf	main@tamanho& (0+255),w,b
  1328  0079C4  A4D8               	btfss	status,2,c
  1329  0079C6  EFE7  F03C         	goto	u1941
  1330  0079CA  EFE9  F03C         	goto	u1940
  1331  0079CE                     u1941:
  1332  0079CE  EF10  F03D         	goto	l2374
  1333  0079D2                     u1940:
  1334  0079D2                     
  1335                           ; BSR set to: 0
  1336                           ;main.c: 95:         tempo *= 1.2;
  1337  0079D2  0E9A               	movlw	154
  1338  0079D4  6E13               	movwf	___flmul@a^0,c
  1339  0079D6  0E99               	movlw	153
  1340  0079D8  6E14               	movwf	(___flmul@a+1)^0,c
  1341  0079DA  0E99               	movlw	153
  1342  0079DC  6E15               	movwf	(___flmul@a+2)^0,c
  1343  0079DE  0E3F               	movlw	63
  1344  0079E0  6E16               	movwf	(___flmul@a+3)^0,c
  1345  0079E2  51F7               	movf	main@tempo& (0+255),w,b
  1346  0079E4  6E01               	movwf	___xxtofl@val^0,c
  1347  0079E6  6A02               	clrf	(___xxtofl@val+1)^0,c
  1348  0079E8  6A03               	clrf	(___xxtofl@val+2)^0,c
  1349  0079EA  6A04               	clrf	(___xxtofl@val+3)^0,c
  1350  0079EC  0E00               	movlw	0
  1351  0079EE  ECEC  F038         	call	___xxtofl
  1352  0079F2  C001  F00F         	movff	?___xxtofl,___flmul@b
  1353  0079F6  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1354  0079FA  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1355  0079FE  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1356  007A02  EC38  F03D         	call	___flmul	;wreg free
  1357  007A06  C00F  F028         	movff	?___flmul,___fltol@f1
  1358  007A0A  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  1359  007A0E  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  1360  007A12  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  1361  007A16  EC69  F038         	call	___fltol	;wreg free
  1362  007A1A  5028               	movf	?___fltol^0,w,c
  1363  007A1C  0100               	movlb	0	; () banked
  1364  007A1E  6FF7               	movwf	main@tempo& (0+255),b
  1365  007A20                     l2374:
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;main.c: 98:         lcd_cmd(0x01);
  1369  007A20  0E01               	movlw	1
  1370  007A22  EC7B  F035         	call	_lcd_cmd
  1371  007A26                     
  1372                           ;main.c: 99:         lcd_cmd(0x80);
  1373  007A26  0E80               	movlw	128
  1374  007A28  EC7B  F035         	call	_lcd_cmd
  1375  007A2C                     
  1376                           ;main.c: 100:         lcd_str("PREPARANDO O ");
  1377  007A2C  0EF0               	movlw	low STR_12
  1378  007A2E  6E08               	movwf	lcd_str@str^0,c
  1379  007A30  0E7F               	movlw	high STR_12
  1380  007A32  6E09               	movwf	(lcd_str@str+1)^0,c
  1381  007A34  EC8C  F036         	call	_lcd_str	;wreg free
  1382  007A38                     
  1383                           ;main.c: 101:         lcd_cmd(0xC0);
  1384  007A38  0EC0               	movlw	192
  1385  007A3A  EC7B  F035         	call	_lcd_cmd
  1386  007A3E                     
  1387                           ;main.c: 102:         lcd_str("CAFE DESEJADO    ");
  1388  007A3E  0E7E               	movlw	low STR_13
  1389  007A40  6E08               	movwf	lcd_str@str^0,c
  1390  007A42  0E7F               	movlw	high STR_13
  1391  007A44  6E09               	movwf	(lcd_str@str+1)^0,c
  1392  007A46  EC8C  F036         	call	_lcd_str	;wreg free
  1393  007A4A                     
  1394                           ;main.c: 104:         tempoPreparo(tempo);
  1395  007A4A  C0F7  F00F         	movff	main@tempo,tempoPreparo@segundos
  1396  007A4E  6A10               	clrf	(tempoPreparo@segundos+1)^0,c
  1397  007A50  ECAB  F03A         	call	_tempoPreparo	;wreg free
  1398  007A54                     
  1399                           ;main.c: 106:         scrollDisplay("SEU CAFE ESTA PRONTO", "Mais delicioso impossivel  
      +                              ");
  1400  007A54  0E55               	movlw	low STR_14
  1401  007A56  6E0D               	movwf	scrollDisplay@linha1^0,c
  1402  007A58  0E7F               	movlw	high STR_14
  1403  007A5A  6E0E               	movwf	(scrollDisplay@linha1+1)^0,c
  1404  007A5C  0EB1               	movlw	low STR_15
  1405  007A5E  6E0F               	movwf	scrollDisplay@linha2^0,c
  1406  007A60  0E7E               	movlw	high STR_15
  1407  007A62  6E10               	movwf	(scrollDisplay@linha2+1)^0,c
  1408  007A64  ECF0  F037         	call	_scrollDisplay	;wreg free
  1409                           
  1410                           ;main.c: 108:     }
  1411  007A68  EFDA  F03B         	goto	l2302
  1412  007A6C  EF00  F000         	goto	start
  1413  007A70                     __end_of_main:
  1414                           	opt callstack 0
  1415                           
  1416 ;; *************** function _tempoPreparo *****************
  1417 ;; Defined at:
  1418 ;;		line 81 in file "yourcoffe.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  segundos        2   14[COMRAM] int 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  k               2   21[COMRAM] unsigned int 
  1423 ;;  delay           2   19[COMRAM] unsigned int 
  1424 ;;  i               2   16[COMRAM] unsigned int 
  1425 ;;  aux             1   18[COMRAM] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1435 ;;      Params:         2       0       0       0       0       0       0
  1436 ;;      Locals:         7       0       0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0
  1438 ;;      Totals:         9       0       0       0       0       0       0
  1439 ;;Total ram usage:        9 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    1
  1442 ;; This function calls:
  1443 ;;		___awdiv
  1444 ;;		___awmod
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text1
  1451  007556                     __ptext1:
  1452                           	opt callstack 0
  1453  007556                     _tempoPreparo:
  1454                           	opt callstack 29
  1455  007556                     
  1456                           ;yourcoffe.c: 81: void tempoPreparo(int segundos);yourcoffe.c: 82: {;yourcoffe.c: 90:   
      +                            (((*(volatile __near unsigned char*)0xFF1)) &= ~(1<<7));
  1457  007556  9EF1               	bcf	241,7,c	;volatile
  1458  007558                     
  1459                           ;yourcoffe.c: 91:     (*(volatile __near unsigned char*)0xFC1) = 0x0E;
  1460  007558  0E0E               	movlw	14
  1461  00755A  6EC1               	movwf	193,c	;volatile
  1462  00755C                     
  1463                           ;yourcoffe.c: 92:     (*(volatile __near unsigned char*)0xF95) = 0x00;
  1464  00755C  0E00               	movlw	0
  1465  00755E  6E95               	movwf	149,c	;volatile
  1466  007560                     
  1467                           ;yourcoffe.c: 93:     (*(volatile __near unsigned char*)0xF92) = 0x00;
  1468  007560  0E00               	movlw	0
  1469  007562  6E92               	movwf	146,c	;volatile
  1470  007564                     
  1471                           ;yourcoffe.c: 94:     (*(volatile __near unsigned char*)0xF93) = 0x00;
  1472  007564  0E00               	movlw	0
  1473  007566  6E93               	movwf	147,c	;volatile
  1474  007568                     
  1475                           ;yourcoffe.c: 95:     (*(volatile __near unsigned char*)0xF81) = 0x00;
  1476  007568  0E00               	movlw	0
  1477  00756A  6E81               	movwf	129,c	;volatile
  1478  00756C                     
  1479                           ;yourcoffe.c: 96:     const char valor[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 
      +                          0x07, 0x7F, 0x6F};;yourcoffe.c: 97:     const char leds[8] = {0x01, 0x02, 0x04, 0x08, 0x
      +                          10, 0x20, 0x40, 0x80};;yourcoffe.c: 98:     char aux = 0;
  1480  00756C  0E00               	movlw	0
  1481  00756E  6E13               	movwf	tempoPreparo@aux^0,c
  1482  007570                     
  1483                           ;yourcoffe.c: 99:     unsigned int k, delay = 1000, i;
  1484  007570  0E03               	movlw	3
  1485  007572  6E15               	movwf	(tempoPreparo@delay+1)^0,c
  1486  007574  0EE8               	movlw	232
  1487  007576  6E14               	movwf	tempoPreparo@delay^0,c
  1488  007578                     l1978:
  1489                           
  1490                           ;yourcoffe.c: 101:     {;yourcoffe.c: 102:         (*(volatile __near unsigned char*)0xF
      +                          81) = leds[aux++]; if(aux == 8) aux = 0;
  1491  007578  0EA5               	movlw	low tempoPreparo@leds
  1492  00757A  2413               	addwf	tempoPreparo@aux^0,w,c
  1493  00757C  6EF6               	movwf	tblptrl,c
  1494  00757E  6AF7               	clrf	tblptrh,c
  1495  007580  0E7E               	movlw	high tempoPreparo@leds
  1496  007582  22F7               	addwfc	tblptrh,f,c
  1497  007584                     	if	0	;There are less than 3 active tblptr bytes
  1498  007584                     	endif
  1499  007584  0008               	tblrd		*
  1500  007586  CFF5 FF81          	movff	tablat,3969	;volatile
  1501  00758A  2A13               	incf	tempoPreparo@aux^0,f,c
  1502  00758C  0E08               	movlw	8
  1503  00758E  1813               	xorwf	tempoPreparo@aux^0,w,c
  1504  007590  A4D8               	btfss	status,2,c
  1505  007592  EFCD  F03A         	goto	u1481
  1506  007596  EFCF  F03A         	goto	u1480
  1507  00759A                     u1481:
  1508  00759A  EFD1  F03A         	goto	l155
  1509  00759E                     u1480:
  1510  00759E  0E00               	movlw	0
  1511  0075A0  6E13               	movwf	tempoPreparo@aux^0,c
  1512  0075A2                     l155:
  1513                           
  1514                           ;yourcoffe.c: 103:         for(i = 0; i < 50; i++)
  1515  0075A2  0E00               	movlw	0
  1516  0075A4  6E12               	movwf	(tempoPreparo@i+1)^0,c
  1517  0075A6  0E00               	movlw	0
  1518  0075A8  6E11               	movwf	tempoPreparo@i^0,c
  1519  0075AA                     l1990:
  1520                           
  1521                           ;yourcoffe.c: 104:         {;yourcoffe.c: 105:             (*(volatile __near unsigned c
      +                          har*)0xF83) = valor[(segundos / 1) % 10];
  1522  0075AA  C00F  F009         	movff	tempoPreparo@segundos,___awmod@dividend
  1523  0075AE  C010  F00A         	movff	tempoPreparo@segundos+1,___awmod@dividend+1
  1524  0075B2  0E00               	movlw	0
  1525  0075B4  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1526  0075B6  0E0A               	movlw	10
  1527  0075B8  6E0B               	movwf	___awmod@divisor^0,c
  1528  0075BA  ECC8  F036         	call	___awmod	;wreg free
  1529  0075BE  0E9B               	movlw	low tempoPreparo@valor
  1530  0075C0  2409               	addwf	?___awmod^0,w,c
  1531  0075C2  6EF6               	movwf	tblptrl,c
  1532  0075C4  0E7E               	movlw	high tempoPreparo@valor
  1533  0075C6  200A               	addwfc	(?___awmod+1)^0,w,c
  1534  0075C8  6EF7               	movwf	tblptrh,c
  1535  0075CA                     	if	0	;There are less than 3 active tblptr bytes
  1536  0075CA                     	endif
  1537  0075CA  0008               	tblrd		*
  1538  0075CC  CFF5 FF83          	movff	tablat,3971	;volatile
  1539  0075D0                     
  1540                           ;yourcoffe.c: 106:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<5));
  1541  0075D0  8A80               	bsf	128,5,c	;volatile
  1542  0075D2                     
  1543                           ;yourcoffe.c: 107:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  1544  0075D2  9880               	bcf	128,4,c	;volatile
  1545  0075D4                     
  1546                           ;yourcoffe.c: 108:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<3));
  1547  0075D4  9680               	bcf	128,3,c	;volatile
  1548  0075D6                     
  1549                           ;yourcoffe.c: 109:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<2));
  1550  0075D6  9480               	bcf	128,2,c	;volatile
  1551  0075D8                     
  1552                           ;yourcoffe.c: 110:             for(k = 0; k < delay; k++);
  1553  0075D8  0E00               	movlw	0
  1554  0075DA  6E17               	movwf	(tempoPreparo@k+1)^0,c
  1555  0075DC  0E00               	movlw	0
  1556  0075DE  6E16               	movwf	tempoPreparo@k^0,c
  1557  0075E0  EFF4  F03A         	goto	l2004
  1558  0075E4                     l2002:
  1559  0075E4  4A16               	infsnz	tempoPreparo@k^0,f,c
  1560  0075E6  2A17               	incf	(tempoPreparo@k+1)^0,f,c
  1561  0075E8                     l2004:
  1562  0075E8  5014               	movf	tempoPreparo@delay^0,w,c
  1563  0075EA  5C16               	subwf	tempoPreparo@k^0,w,c
  1564  0075EC  5015               	movf	(tempoPreparo@delay+1)^0,w,c
  1565  0075EE  5817               	subwfb	(tempoPreparo@k+1)^0,w,c
  1566  0075F0  A0D8               	btfss	status,0,c
  1567  0075F2  EFFD  F03A         	goto	u1491
  1568  0075F6  EFFF  F03A         	goto	u1490
  1569  0075FA                     u1491:
  1570  0075FA  EFF2  F03A         	goto	l2002
  1571  0075FE                     u1490:
  1572  0075FE                     
  1573                           ;yourcoffe.c: 111:             (*(volatile __near unsigned char*)0xF83) = valor[(segundo
      +                          s / 10) % 10];
  1574  0075FE  0E00               	movlw	0
  1575  007600  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1576  007602  0E0A               	movlw	10
  1577  007604  6E03               	movwf	___awdiv@divisor^0,c
  1578  007606  C00F  F001         	movff	tempoPreparo@segundos,___awdiv@dividend
  1579  00760A  C010  F002         	movff	tempoPreparo@segundos+1,___awdiv@dividend+1
  1580  00760E  EC20  F037         	call	___awdiv	;wreg free
  1581  007612  C001  F009         	movff	?___awdiv,___awmod@dividend
  1582  007616  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1583  00761A  0E00               	movlw	0
  1584  00761C  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1585  00761E  0E0A               	movlw	10
  1586  007620  6E0B               	movwf	___awmod@divisor^0,c
  1587  007622  ECC8  F036         	call	___awmod	;wreg free
  1588  007626  0E9B               	movlw	low tempoPreparo@valor
  1589  007628  2409               	addwf	?___awmod^0,w,c
  1590  00762A  6EF6               	movwf	tblptrl,c
  1591  00762C  0E7E               	movlw	high tempoPreparo@valor
  1592  00762E  200A               	addwfc	(?___awmod+1)^0,w,c
  1593  007630  6EF7               	movwf	tblptrh,c
  1594  007632                     	if	0	;There are less than 3 active tblptr bytes
  1595  007632                     	endif
  1596  007632  0008               	tblrd		*
  1597  007634  CFF5 FF83          	movff	tablat,3971	;volatile
  1598  007638                     
  1599                           ;yourcoffe.c: 112:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  1600  007638  9A80               	bcf	128,5,c	;volatile
  1601  00763A                     
  1602                           ;yourcoffe.c: 113:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<4));
  1603  00763A  8880               	bsf	128,4,c	;volatile
  1604  00763C                     
  1605                           ;yourcoffe.c: 114:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<3));
  1606  00763C  9680               	bcf	128,3,c	;volatile
  1607  00763E                     
  1608                           ;yourcoffe.c: 115:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<2));
  1609  00763E  9480               	bcf	128,2,c	;volatile
  1610  007640                     
  1611                           ;yourcoffe.c: 116:             for(k = 0; k < delay; k++);
  1612  007640  0E00               	movlw	0
  1613  007642  6E17               	movwf	(tempoPreparo@k+1)^0,c
  1614  007644  0E00               	movlw	0
  1615  007646  6E16               	movwf	tempoPreparo@k^0,c
  1616  007648  EF28  F03B         	goto	l2020
  1617  00764C                     l2018:
  1618  00764C  4A16               	infsnz	tempoPreparo@k^0,f,c
  1619  00764E  2A17               	incf	(tempoPreparo@k+1)^0,f,c
  1620  007650                     l2020:
  1621  007650  5014               	movf	tempoPreparo@delay^0,w,c
  1622  007652  5C16               	subwf	tempoPreparo@k^0,w,c
  1623  007654  5015               	movf	(tempoPreparo@delay+1)^0,w,c
  1624  007656  5817               	subwfb	(tempoPreparo@k+1)^0,w,c
  1625  007658  A0D8               	btfss	status,0,c
  1626  00765A  EF31  F03B         	goto	u1501
  1627  00765E  EF33  F03B         	goto	u1500
  1628  007662                     u1501:
  1629  007662  EF26  F03B         	goto	l2018
  1630  007666                     u1500:
  1631  007666                     
  1632                           ;yourcoffe.c: 117:             (*(volatile __near unsigned char*)0xF83) = valor[(segundo
      +                          s / 100) % 10];
  1633  007666  0E00               	movlw	0
  1634  007668  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1635  00766A  0E64               	movlw	100
  1636  00766C  6E03               	movwf	___awdiv@divisor^0,c
  1637  00766E  C00F  F001         	movff	tempoPreparo@segundos,___awdiv@dividend
  1638  007672  C010  F002         	movff	tempoPreparo@segundos+1,___awdiv@dividend+1
  1639  007676  EC20  F037         	call	___awdiv	;wreg free
  1640  00767A  C001  F009         	movff	?___awdiv,___awmod@dividend
  1641  00767E  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1642  007682  0E00               	movlw	0
  1643  007684  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1644  007686  0E0A               	movlw	10
  1645  007688  6E0B               	movwf	___awmod@divisor^0,c
  1646  00768A  ECC8  F036         	call	___awmod	;wreg free
  1647  00768E  0E9B               	movlw	low tempoPreparo@valor
  1648  007690  2409               	addwf	?___awmod^0,w,c
  1649  007692  6EF6               	movwf	tblptrl,c
  1650  007694  0E7E               	movlw	high tempoPreparo@valor
  1651  007696  200A               	addwfc	(?___awmod+1)^0,w,c
  1652  007698  6EF7               	movwf	tblptrh,c
  1653  00769A                     	if	0	;There are less than 3 active tblptr bytes
  1654  00769A                     	endif
  1655  00769A  0008               	tblrd		*
  1656  00769C  CFF5 FF83          	movff	tablat,3971	;volatile
  1657  0076A0                     
  1658                           ;yourcoffe.c: 118:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  1659  0076A0  9A80               	bcf	128,5,c	;volatile
  1660  0076A2                     
  1661                           ;yourcoffe.c: 119:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  1662  0076A2  9880               	bcf	128,4,c	;volatile
  1663  0076A4                     
  1664                           ;yourcoffe.c: 120:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<3));
  1665  0076A4  8680               	bsf	128,3,c	;volatile
  1666  0076A6                     
  1667                           ;yourcoffe.c: 121:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<2));
  1668  0076A6  9480               	bcf	128,2,c	;volatile
  1669  0076A8                     
  1670                           ;yourcoffe.c: 122:             for(k = 0; k < delay; k++);
  1671  0076A8  0E00               	movlw	0
  1672  0076AA  6E17               	movwf	(tempoPreparo@k+1)^0,c
  1673  0076AC  0E00               	movlw	0
  1674  0076AE  6E16               	movwf	tempoPreparo@k^0,c
  1675  0076B0  EF5C  F03B         	goto	l2036
  1676  0076B4                     l2034:
  1677  0076B4  4A16               	infsnz	tempoPreparo@k^0,f,c
  1678  0076B6  2A17               	incf	(tempoPreparo@k+1)^0,f,c
  1679  0076B8                     l2036:
  1680  0076B8  5014               	movf	tempoPreparo@delay^0,w,c
  1681  0076BA  5C16               	subwf	tempoPreparo@k^0,w,c
  1682  0076BC  5015               	movf	(tempoPreparo@delay+1)^0,w,c
  1683  0076BE  5817               	subwfb	(tempoPreparo@k+1)^0,w,c
  1684  0076C0  A0D8               	btfss	status,0,c
  1685  0076C2  EF65  F03B         	goto	u1511
  1686  0076C6  EF67  F03B         	goto	u1510
  1687  0076CA                     u1511:
  1688  0076CA  EF5A  F03B         	goto	l2034
  1689  0076CE                     u1510:
  1690  0076CE                     
  1691                           ;yourcoffe.c: 123:             (*(volatile __near unsigned char*)0xF83) = valor[(segundo
      +                          s / 1000) % 10];
  1692  0076CE  0E03               	movlw	3
  1693  0076D0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1694  0076D2  0EE8               	movlw	232
  1695  0076D4  6E03               	movwf	___awdiv@divisor^0,c
  1696  0076D6  C00F  F001         	movff	tempoPreparo@segundos,___awdiv@dividend
  1697  0076DA  C010  F002         	movff	tempoPreparo@segundos+1,___awdiv@dividend+1
  1698  0076DE  EC20  F037         	call	___awdiv	;wreg free
  1699  0076E2  C001  F009         	movff	?___awdiv,___awmod@dividend
  1700  0076E6  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1701  0076EA  0E00               	movlw	0
  1702  0076EC  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1703  0076EE  0E0A               	movlw	10
  1704  0076F0  6E0B               	movwf	___awmod@divisor^0,c
  1705  0076F2  ECC8  F036         	call	___awmod	;wreg free
  1706  0076F6  0E9B               	movlw	low tempoPreparo@valor
  1707  0076F8  2409               	addwf	?___awmod^0,w,c
  1708  0076FA  6EF6               	movwf	tblptrl,c
  1709  0076FC  0E7E               	movlw	high tempoPreparo@valor
  1710  0076FE  200A               	addwfc	(?___awmod+1)^0,w,c
  1711  007700  6EF7               	movwf	tblptrh,c
  1712  007702                     	if	0	;There are less than 3 active tblptr bytes
  1713  007702                     	endif
  1714  007702  0008               	tblrd		*
  1715  007704  CFF5 FF83          	movff	tablat,3971	;volatile
  1716  007708                     
  1717                           ;yourcoffe.c: 124:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  1718  007708  9A80               	bcf	128,5,c	;volatile
  1719  00770A                     
  1720                           ;yourcoffe.c: 125:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  1721  00770A  9880               	bcf	128,4,c	;volatile
  1722  00770C                     
  1723                           ;yourcoffe.c: 126:             (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<3));
  1724  00770C  9680               	bcf	128,3,c	;volatile
  1725  00770E                     
  1726                           ;yourcoffe.c: 127:             (((*(volatile __near unsigned char*)0xF80)) |= (1<<2));
  1727  00770E  8480               	bsf	128,2,c	;volatile
  1728  007710                     
  1729                           ;yourcoffe.c: 128:             for(k = 0; k < delay; k++);
  1730  007710  0E00               	movlw	0
  1731  007712  6E17               	movwf	(tempoPreparo@k+1)^0,c
  1732  007714  0E00               	movlw	0
  1733  007716  6E16               	movwf	tempoPreparo@k^0,c
  1734  007718  EF90  F03B         	goto	l2052
  1735  00771C                     l2050:
  1736  00771C  4A16               	infsnz	tempoPreparo@k^0,f,c
  1737  00771E  2A17               	incf	(tempoPreparo@k+1)^0,f,c
  1738  007720                     l2052:
  1739  007720  5014               	movf	tempoPreparo@delay^0,w,c
  1740  007722  5C16               	subwf	tempoPreparo@k^0,w,c
  1741  007724  5015               	movf	(tempoPreparo@delay+1)^0,w,c
  1742  007726  5817               	subwfb	(tempoPreparo@k+1)^0,w,c
  1743  007728  A0D8               	btfss	status,0,c
  1744  00772A  EF99  F03B         	goto	u1521
  1745  00772E  EF9B  F03B         	goto	u1520
  1746  007732                     u1521:
  1747  007732  EF8E  F03B         	goto	l2050
  1748  007736                     u1520:
  1749  007736                     
  1750                           ;yourcoffe.c: 130:         }
  1751  007736  4A11               	infsnz	tempoPreparo@i^0,f,c
  1752  007738  2A12               	incf	(tempoPreparo@i+1)^0,f,c
  1753  00773A  5012               	movf	(tempoPreparo@i+1)^0,w,c
  1754  00773C  E109               	bnz	u1530
  1755  00773E  0E32               	movlw	50
  1756  007740  5C11               	subwf	tempoPreparo@i^0,w,c
  1757  007742  A0D8               	btfss	status,0,c
  1758  007744  EFA6  F03B         	goto	u1531
  1759  007748  EFA8  F03B         	goto	u1530
  1760  00774C                     u1531:
  1761  00774C  EFD5  F03A         	goto	l1990
  1762  007750                     u1530:
  1763  007750                     
  1764                           ;yourcoffe.c: 132:         segundos--;
  1765  007750  060F               	decf	tempoPreparo@segundos^0,f,c
  1766  007752  A0D8               	btfss	status,0,c
  1767  007754  0610               	decf	(tempoPreparo@segundos+1)^0,f,c
  1768  007756                     
  1769                           ;yourcoffe.c: 134:         if(segundos == -1) break;
  1770  007756  280F               	incf	tempoPreparo@segundos^0,w,c
  1771  007758  E106               	bnz	u1541
  1772  00775A  2810               	incf	(tempoPreparo@segundos+1)^0,w,c
  1773  00775C  A4D8               	btfss	status,2,c
  1774  00775E  EFB3  F03B         	goto	u1541
  1775  007762  EFB5  F03B         	goto	u1540
  1776  007766                     u1541:
  1777  007766  EFBC  F03A         	goto	l1978
  1778  00776A                     u1540:
  1779  00776A                     
  1780                           ;yourcoffe.c: 137:     (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<5));
  1781  00776A  9A80               	bcf	128,5,c	;volatile
  1782                           
  1783                           ;yourcoffe.c: 138:     (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<4));
  1784  00776C  9880               	bcf	128,4,c	;volatile
  1785                           
  1786                           ;yourcoffe.c: 139:     (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<3));
  1787  00776E  9680               	bcf	128,3,c	;volatile
  1788                           
  1789                           ;yourcoffe.c: 140:     (((*(volatile __near unsigned char*)0xF80)) &= ~(1<<2));
  1790  007770  9480               	bcf	128,2,c	;volatile
  1791  007772                     
  1792                           ;yourcoffe.c: 141:     (*(volatile __near unsigned char*)0xF81) = 0x00;
  1793  007772  0E00               	movlw	0
  1794  007774  6E81               	movwf	129,c	;volatile
  1795  007776  0012               	return		;funcret
  1796  007778                     __end_of_tempoPreparo:
  1797                           	opt callstack 0
  1798                           
  1799 ;; *************** function ___awmod *****************
  1800 ;; Defined at:
  1801 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  dividend        2    8[COMRAM] int 
  1804 ;;  divisor         2   10[COMRAM] int 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  sign            1   13[COMRAM] unsigned char 
  1807 ;;  counter         1   12[COMRAM] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  2    8[COMRAM] int 
  1810 ;; Registers used:
  1811 ;;		wreg, status,2, status,0
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1817 ;;      Params:         4       0       0       0       0       0       0
  1818 ;;      Locals:         2       0       0       0       0       0       0
  1819 ;;      Temps:          0       0       0       0       0       0       0
  1820 ;;      Totals:         6       0       0       0       0       0       0
  1821 ;;Total ram usage:        6 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; This function calls:
  1824 ;;		Nothing
  1825 ;; This function is called by:
  1826 ;;		_tempoPreparo
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           	psect	text2
  1831  006D90                     __ptext2:
  1832                           	opt callstack 0
  1833  006D90                     ___awmod:
  1834                           	opt callstack 29
  1835  006D90  0E00               	movlw	0
  1836  006D92  6E0E               	movwf	___awmod@sign^0,c
  1837  006D94  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  1838  006D96  EFD1  F036         	goto	u1300
  1839  006D9A  EFCF  F036         	goto	u1301
  1840  006D9E                     u1301:
  1841  006D9E  EFD7  F036         	goto	l1834
  1842  006DA2                     u1300:
  1843  006DA2  6C09               	negf	___awmod@dividend^0,c
  1844  006DA4  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  1845  006DA6  B0D8               	btfsc	status,0,c
  1846  006DA8  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  1847  006DAA  0E01               	movlw	1
  1848  006DAC  6E0E               	movwf	___awmod@sign^0,c
  1849  006DAE                     l1834:
  1850  006DAE  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  1851  006DB0  EFDE  F036         	goto	u1310
  1852  006DB4  EFDC  F036         	goto	u1311
  1853  006DB8                     u1311:
  1854  006DB8  EFE2  F036         	goto	l1838
  1855  006DBC                     u1310:
  1856  006DBC  6C0B               	negf	___awmod@divisor^0,c
  1857  006DBE  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  1858  006DC0  B0D8               	btfsc	status,0,c
  1859  006DC2  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  1860  006DC4                     l1838:
  1861  006DC4  500B               	movf	___awmod@divisor^0,w,c
  1862  006DC6  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  1863  006DC8  B4D8               	btfsc	status,2,c
  1864  006DCA  EFE9  F036         	goto	u1321
  1865  006DCE  EFEB  F036         	goto	u1320
  1866  006DD2                     u1321:
  1867  006DD2  EF0F  F037         	goto	l1854
  1868  006DD6                     u1320:
  1869  006DD6  0E01               	movlw	1
  1870  006DD8  6E0D               	movwf	___awmod@counter^0,c
  1871  006DDA  EFF3  F036         	goto	l1844
  1872  006DDE                     l1842:
  1873  006DDE  90D8               	bcf	status,0,c
  1874  006DE0  360B               	rlcf	___awmod@divisor^0,f,c
  1875  006DE2  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  1876  006DE4  2A0D               	incf	___awmod@counter^0,f,c
  1877  006DE6                     l1844:
  1878  006DE6  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  1879  006DE8  EFF8  F036         	goto	u1331
  1880  006DEC  EFFA  F036         	goto	u1330
  1881  006DF0                     u1331:
  1882  006DF0  EFEF  F036         	goto	l1842
  1883  006DF4                     u1330:
  1884  006DF4                     l1846:
  1885  006DF4  500B               	movf	___awmod@divisor^0,w,c
  1886  006DF6  5C09               	subwf	___awmod@dividend^0,w,c
  1887  006DF8  500C               	movf	(___awmod@divisor+1)^0,w,c
  1888  006DFA  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  1889  006DFC  A0D8               	btfss	status,0,c
  1890  006DFE  EF03  F037         	goto	u1341
  1891  006E02  EF05  F037         	goto	u1340
  1892  006E06                     u1341:
  1893  006E06  EF09  F037         	goto	l1850
  1894  006E0A                     u1340:
  1895  006E0A  500B               	movf	___awmod@divisor^0,w,c
  1896  006E0C  5E09               	subwf	___awmod@dividend^0,f,c
  1897  006E0E  500C               	movf	(___awmod@divisor+1)^0,w,c
  1898  006E10  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  1899  006E12                     l1850:
  1900  006E12  90D8               	bcf	status,0,c
  1901  006E14  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  1902  006E16  320B               	rrcf	___awmod@divisor^0,f,c
  1903  006E18  2E0D               	decfsz	___awmod@counter^0,f,c
  1904  006E1A  EFFA  F036         	goto	l1846
  1905  006E1E                     l1854:
  1906  006E1E  500E               	movf	___awmod@sign^0,w,c
  1907  006E20  B4D8               	btfsc	status,2,c
  1908  006E22  EF15  F037         	goto	u1351
  1909  006E26  EF17  F037         	goto	u1350
  1910  006E2A                     u1351:
  1911  006E2A  EF1B  F037         	goto	l1858
  1912  006E2E                     u1350:
  1913  006E2E  6C09               	negf	___awmod@dividend^0,c
  1914  006E30  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  1915  006E32  B0D8               	btfsc	status,0,c
  1916  006E34  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  1917  006E36                     l1858:
  1918  006E36  C009  F009         	movff	___awmod@dividend,?___awmod
  1919  006E3A  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  1920  006E3E  0012               	return		;funcret
  1921  006E40                     __end_of___awmod:
  1922                           	opt callstack 0
  1923                           
  1924 ;; *************** function ___awdiv *****************
  1925 ;; Defined at:
  1926 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  1927 ;; Parameters:    Size  Location     Type
  1928 ;;  dividend        2    0[COMRAM] int 
  1929 ;;  divisor         2    2[COMRAM] int 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  quotient        2    6[COMRAM] int 
  1932 ;;  sign            1    5[COMRAM] unsigned char 
  1933 ;;  counter         1    4[COMRAM] unsigned char 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  2    0[COMRAM] int 
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1943 ;;      Params:         4       0       0       0       0       0       0
  1944 ;;      Locals:         4       0       0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0
  1946 ;;      Totals:         8       0       0       0       0       0       0
  1947 ;;Total ram usage:        8 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_tempoPreparo
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text3
  1957  006E40                     __ptext3:
  1958                           	opt callstack 0
  1959  006E40                     ___awdiv:
  1960                           	opt callstack 29
  1961  006E40  0E00               	movlw	0
  1962  006E42  6E06               	movwf	___awdiv@sign^0,c
  1963  006E44  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1964  006E46  EF29  F037         	goto	u1240
  1965  006E4A  EF27  F037         	goto	u1241
  1966  006E4E                     u1241:
  1967  006E4E  EF2F  F037         	goto	l1790
  1968  006E52                     u1240:
  1969  006E52  6C03               	negf	___awdiv@divisor^0,c
  1970  006E54  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1971  006E56  B0D8               	btfsc	status,0,c
  1972  006E58  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1973  006E5A  0E01               	movlw	1
  1974  006E5C  6E06               	movwf	___awdiv@sign^0,c
  1975  006E5E                     l1790:
  1976  006E5E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1977  006E60  EF36  F037         	goto	u1250
  1978  006E64  EF34  F037         	goto	u1251
  1979  006E68                     u1251:
  1980  006E68  EF3C  F037         	goto	l1796
  1981  006E6C                     u1250:
  1982  006E6C  6C01               	negf	___awdiv@dividend^0,c
  1983  006E6E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1984  006E70  B0D8               	btfsc	status,0,c
  1985  006E72  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1986  006E74  0E01               	movlw	1
  1987  006E76  1A06               	xorwf	___awdiv@sign^0,f,c
  1988  006E78                     l1796:
  1989  006E78  0E00               	movlw	0
  1990  006E7A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1991  006E7C  0E00               	movlw	0
  1992  006E7E  6E07               	movwf	___awdiv@quotient^0,c
  1993  006E80  5003               	movf	___awdiv@divisor^0,w,c
  1994  006E82  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1995  006E84  B4D8               	btfsc	status,2,c
  1996  006E86  EF47  F037         	goto	u1261
  1997  006E8A  EF49  F037         	goto	u1260
  1998  006E8E                     u1261:
  1999  006E8E  EF71  F037         	goto	l1818
  2000  006E92                     u1260:
  2001  006E92  0E01               	movlw	1
  2002  006E94  6E05               	movwf	___awdiv@counter^0,c
  2003  006E96  EF51  F037         	goto	l1804
  2004  006E9A                     l1802:
  2005  006E9A  90D8               	bcf	status,0,c
  2006  006E9C  3603               	rlcf	___awdiv@divisor^0,f,c
  2007  006E9E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2008  006EA0  2A05               	incf	___awdiv@counter^0,f,c
  2009  006EA2                     l1804:
  2010  006EA2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2011  006EA4  EF56  F037         	goto	u1271
  2012  006EA8  EF58  F037         	goto	u1270
  2013  006EAC                     u1271:
  2014  006EAC  EF4D  F037         	goto	l1802
  2015  006EB0                     u1270:
  2016  006EB0                     l1806:
  2017  006EB0  90D8               	bcf	status,0,c
  2018  006EB2  3607               	rlcf	___awdiv@quotient^0,f,c
  2019  006EB4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2020  006EB6  5003               	movf	___awdiv@divisor^0,w,c
  2021  006EB8  5C01               	subwf	___awdiv@dividend^0,w,c
  2022  006EBA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2023  006EBC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2024  006EBE  A0D8               	btfss	status,0,c
  2025  006EC0  EF64  F037         	goto	u1281
  2026  006EC4  EF66  F037         	goto	u1280
  2027  006EC8                     u1281:
  2028  006EC8  EF6B  F037         	goto	l1814
  2029  006ECC                     u1280:
  2030  006ECC  5003               	movf	___awdiv@divisor^0,w,c
  2031  006ECE  5E01               	subwf	___awdiv@dividend^0,f,c
  2032  006ED0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2033  006ED2  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2034  006ED4  8007               	bsf	___awdiv@quotient^0,0,c
  2035  006ED6                     l1814:
  2036  006ED6  90D8               	bcf	status,0,c
  2037  006ED8  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2038  006EDA  3203               	rrcf	___awdiv@divisor^0,f,c
  2039  006EDC  2E05               	decfsz	___awdiv@counter^0,f,c
  2040  006EDE  EF58  F037         	goto	l1806
  2041  006EE2                     l1818:
  2042  006EE2  5006               	movf	___awdiv@sign^0,w,c
  2043  006EE4  B4D8               	btfsc	status,2,c
  2044  006EE6  EF77  F037         	goto	u1291
  2045  006EEA  EF79  F037         	goto	u1290
  2046  006EEE                     u1291:
  2047  006EEE  EF7D  F037         	goto	l1822
  2048  006EF2                     u1290:
  2049  006EF2  6C07               	negf	___awdiv@quotient^0,c
  2050  006EF4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2051  006EF6  B0D8               	btfsc	status,0,c
  2052  006EF8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2053  006EFA                     l1822:
  2054  006EFA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2055  006EFE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2056  006F02  0012               	return		;funcret
  2057  006F04                     __end_of___awdiv:
  2058                           	opt callstack 0
  2059                           
  2060 ;; *************** function _strcat *****************
  2061 ;; Defined at:
  2062 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcat.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  dest            2   14[COMRAM] PTR unsigned char 
  2065 ;;		 -> main@frase(50), 
  2066 ;;  src             2   16[COMRAM] PTR const unsigned char 
  2067 ;;		 -> STR_10(2), main@tamanhos(16), 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  2   14[COMRAM] PTR unsigned char 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2079 ;;      Params:         4       0       0       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0
  2082 ;;      Totals:         4       0       0       0       0       0       0
  2083 ;;Total ram usage:        4 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    1
  2086 ;; This function calls:
  2087 ;;		_strcpy
  2088 ;;		_strlen
  2089 ;; This function is called by:
  2090 ;;		_main
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text4
  2095  006AD0                     __ptext4:
  2096                           	opt callstack 0
  2097  006AD0                     _strcat:
  2098                           	opt callstack 29
  2099  006AD0  C00F  F001         	movff	strcat@dest,strlen@s
  2100  006AD4  C010  F002         	movff	strcat@dest+1,strlen@s+1
  2101  006AD8  ECBE  F035         	call	_strlen	;wreg free
  2102  006ADC  5001               	movf	?_strlen^0,w,c
  2103  006ADE  240F               	addwf	strcat@dest^0,w,c
  2104  006AE0  6E05               	movwf	strcpy@dest^0,c
  2105  006AE2  5002               	movf	(?_strlen+1)^0,w,c
  2106  006AE4  2010               	addwfc	(strcat@dest+1)^0,w,c
  2107  006AE6  6E06               	movwf	(strcpy@dest+1)^0,c
  2108  006AE8  C011  F007         	movff	strcat@src,strcpy@src
  2109  006AEC  C012  F008         	movff	strcat@src+1,strcpy@src+1
  2110  006AF0  EC2C  F036         	call	_strcpy	;wreg free
  2111  006AF4  0012               	return		;funcret
  2112  006AF6                     __end_of_strcat:
  2113                           	opt callstack 0
  2114                           
  2115 ;; *************** function _strlen *****************
  2116 ;; Defined at:
  2117 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2120 ;;		 -> main@frase(50), 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2123 ;;		 -> main@frase(50), 
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  2    0[COMRAM] unsigned int 
  2126 ;; Registers used:
  2127 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2133 ;;      Params:         2       0       0       0       0       0       0
  2134 ;;      Locals:         2       0       0       0       0       0       0
  2135 ;;      Temps:          0       0       0       0       0       0       0
  2136 ;;      Totals:         4       0       0       0       0       0       0
  2137 ;;Total ram usage:        4 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_strcat
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text5
  2147  006B7C                     __ptext5:
  2148                           	opt callstack 0
  2149  006B7C                     _strlen:
  2150                           	opt callstack 29
  2151  006B7C  C001  F003         	movff	strlen@s,strlen@a
  2152  006B80  C002  F004         	movff	strlen@s+1,strlen@a+1
  2153  006B84  EFC6  F035         	goto	l1866
  2154  006B88                     l1864:
  2155  006B88  4A01               	infsnz	strlen@s^0,f,c
  2156  006B8A  2A02               	incf	(strlen@s+1)^0,f,c
  2157  006B8C                     l1866:
  2158  006B8C  C001  FFD9         	movff	strlen@s,fsr2l
  2159  006B90  C002  FFDA         	movff	strlen@s+1,fsr2h
  2160  006B94  50DF               	movf	indf2,w,c
  2161  006B96  A4D8               	btfss	status,2,c
  2162  006B98  EFD0  F035         	goto	u1361
  2163  006B9C  EFD2  F035         	goto	u1360
  2164  006BA0                     u1361:
  2165  006BA0  EFC4  F035         	goto	l1864
  2166  006BA4                     u1360:
  2167  006BA4  5003               	movf	strlen@a^0,w,c
  2168  006BA6  5C01               	subwf	strlen@s^0,w,c
  2169  006BA8  6E01               	movwf	?_strlen^0,c
  2170  006BAA  5004               	movf	(strlen@a+1)^0,w,c
  2171  006BAC  5802               	subwfb	(strlen@s+1)^0,w,c
  2172  006BAE  6E02               	movwf	(?_strlen+1)^0,c
  2173  006BB0  0012               	return		;funcret
  2174  006BB2                     __end_of_strlen:
  2175                           	opt callstack 0
  2176                           
  2177 ;; *************** function _strcpy *****************
  2178 ;; Defined at:
  2179 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  dest            2    4[COMRAM] PTR unsigned char 
  2182 ;;		 -> main@frase(50), 
  2183 ;;  src             2    6[COMRAM] PTR const unsigned char 
  2184 ;;		 -> STR_10(2), STR_8(17), STR_7(21), STR_6(21), 
  2185 ;;		 -> STR_5(20), main@tamanhos(16), main@cafes(50), 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  d               2   12[COMRAM] PTR unsigned char 
  2188 ;;		 -> main@frase(50), 
  2189 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2190 ;;		 -> STR_10(2), STR_8(17), STR_7(21), STR_6(21), 
  2191 ;;		 -> STR_5(20), main@tamanhos(16), main@cafes(50), 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  2    4[COMRAM] PTR unsigned char 
  2194 ;; Registers used:
  2195 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2201 ;;      Params:         4       0       0       0       0       0       0
  2202 ;;      Locals:         4       0       0       0       0       0       0
  2203 ;;      Temps:          2       0       0       0       0       0       0
  2204 ;;      Totals:        10       0       0       0       0       0       0
  2205 ;;Total ram usage:       10 bytes
  2206 ;; Hardware stack levels used:    1
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_main
  2211 ;;		_strcat
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text6
  2216  006C58                     __ptext6:
  2217                           	opt callstack 0
  2218  006C58                     _strcpy:
  2219                           	opt callstack 30
  2220  006C58  C007  F00B         	movff	strcpy@src,strcpy@s
  2221  006C5C  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  2222  006C60  C005  F00D         	movff	strcpy@dest,strcpy@d
  2223  006C64  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  2224  006C68                     l1780:
  2225  006C68  500B               	movf	strcpy@s^0,w,c
  2226  006C6A  6E09               	movwf	??_strcpy^0,c
  2227  006C6C  500C               	movf	(strcpy@s+1)^0,w,c
  2228  006C6E  6E0A               	movwf	(??_strcpy+1)^0,c
  2229  006C70  4A0B               	infsnz	strcpy@s^0,f,c
  2230  006C72  2A0C               	incf	(strcpy@s+1)^0,f,c
  2231  006C74  C009  FFF6         	movff	??_strcpy,tblptrl
  2232  006C78  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  2233  006C7C  6AF8               	clrf	tblptru,c
  2234  006C7E  C00D  FFD9         	movff	strcpy@d,fsr2l
  2235  006C82  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  2236  006C86  4A0D               	infsnz	strcpy@d^0,f,c
  2237  006C88  2A0E               	incf	(strcpy@d+1)^0,f,c
  2238  006C8A  0E05               	movlw	(high __ramtop+-1)
  2239  006C8C  64F7               	cpfsgt	tblptrh,c
  2240  006C8E  D003               	bra	u1227
  2241  006C90  0008               	tblrd		*
  2242  006C92  50F5               	movf	tablat,w,c
  2243  006C94  D005               	bra	u1220
  2244  006C96                     u1227:
  2245  006C96  CFF6 FFE9          	movff	tblptrl,fsr0l
  2246  006C9A  CFF7 FFEA          	movff	tblptrh,fsr0h
  2247  006C9E  50EF               	movf	indf0,w,c
  2248  006CA0                     u1220:
  2249  006CA0  6EDF               	movwf	indf2,c
  2250  006CA2  50DF               	movf	indf2,w,c
  2251  006CA4  A4D8               	btfss	status,2,c
  2252  006CA6  EF57  F036         	goto	u1231
  2253  006CAA  EF59  F036         	goto	u1230
  2254  006CAE                     u1231:
  2255  006CAE  EF34  F036         	goto	l1780
  2256  006CB2                     u1230:
  2257  006CB2  0012               	return		;funcret
  2258  006CB4                     __end_of_strcpy:
  2259                           	opt callstack 0
  2260                           
  2261 ;; *************** function _scrollDisplay *****************
  2262 ;; Defined at:
  2263 ;;		line 48 in file "yourcoffe.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  linha1          2   12[COMRAM] PTR unsigned char 
  2266 ;;		 -> STR_14(21), main@frase(50), STR_3(28), 
  2267 ;;  linha2          2   14[COMRAM] PTR unsigned char 
  2268 ;;		 -> STR_15(32), STR_9(31), STR_4(31), 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  i               2   16[COMRAM] int 
  2271 ;; Return value:  Size  Location     Type
  2272 ;;                  1    wreg      void 
  2273 ;; Registers used:
  2274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2275 ;; Tracked objects:
  2276 ;;		On entry : 0/0
  2277 ;;		On exit  : 0/0
  2278 ;;		Unchanged: 0/0
  2279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2280 ;;      Params:         4       0       0       0       0       0       0
  2281 ;;      Locals:         2       0       0       0       0       0       0
  2282 ;;      Temps:          0       0       0       0       0       0       0
  2283 ;;      Totals:         6       0       0       0       0       0       0
  2284 ;;Total ram usage:        6 bytes
  2285 ;; Hardware stack levels used:    1
  2286 ;; Hardware stack levels required when called:    3
  2287 ;; This function calls:
  2288 ;;		_atraso_ms
  2289 ;;		_lcd_cmd
  2290 ;;		_lcd_str
  2291 ;; This function is called by:
  2292 ;;		_main
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text7
  2297  006FE0                     __ptext7:
  2298                           	opt callstack 0
  2299  006FE0                     _scrollDisplay:
  2300                           	opt callstack 27
  2301  006FE0                     
  2302                           ;yourcoffe.c: 48: void scrollDisplay(char *linha1, char *linha2);yourcoffe.c: 49: {;your
      +                          coffe.c: 55:     int i;;yourcoffe.c: 56:     lcd_cmd(0x01);
  2303  006FE0  0E01               	movlw	1
  2304  006FE2  EC7B  F035         	call	_lcd_cmd
  2305                           
  2306                           ;yourcoffe.c: 57:     lcd_cmd(0x80);
  2307  006FE6  0E80               	movlw	128
  2308  006FE8  EC7B  F035         	call	_lcd_cmd
  2309  006FEC                     
  2310                           ;yourcoffe.c: 58:     lcd_str(linha1);
  2311  006FEC  C00D  F008         	movff	scrollDisplay@linha1,lcd_str@str
  2312  006FF0  C00E  F009         	movff	scrollDisplay@linha1+1,lcd_str@str+1
  2313  006FF4  EC8C  F036         	call	_lcd_str	;wreg free
  2314  006FF8                     
  2315                           ;yourcoffe.c: 59:     lcd_cmd(0xC0);
  2316  006FF8  0EC0               	movlw	192
  2317  006FFA  EC7B  F035         	call	_lcd_cmd
  2318                           
  2319                           ;yourcoffe.c: 60:     lcd_str(linha2);
  2320  006FFE  C00F  F008         	movff	scrollDisplay@linha2,lcd_str@str
  2321  007002  C010  F009         	movff	scrollDisplay@linha2+1,lcd_str@str+1
  2322  007006  EC8C  F036         	call	_lcd_str	;wreg free
  2323  00700A                     
  2324                           ;yourcoffe.c: 61:     atraso_ms(atrasoMax);
  2325  00700A  0E03               	movlw	3
  2326  00700C  6E02               	movwf	(atraso_ms@t+1)^0,c
  2327  00700E  0EE8               	movlw	232
  2328  007010  6E01               	movwf	atraso_ms@t^0,c
  2329  007012  EC5A  F036         	call	_atraso_ms	;wreg free
  2330  007016                     
  2331                           ;yourcoffe.c: 63:     for (i = 0; i < 14; i++) {
  2332  007016  0E00               	movlw	0
  2333  007018  6E12               	movwf	(scrollDisplay@i+1)^0,c
  2334  00701A  0E00               	movlw	0
  2335  00701C  6E11               	movwf	scrollDisplay@i^0,c
  2336  00701E                     l1892:
  2337                           
  2338                           ;yourcoffe.c: 64:         atraso_ms(atrasoMed);
  2339  00701E  0E00               	movlw	0
  2340  007020  6E02               	movwf	(atraso_ms@t+1)^0,c
  2341  007022  0E96               	movlw	150
  2342  007024  6E01               	movwf	atraso_ms@t^0,c
  2343  007026  EC5A  F036         	call	_atraso_ms	;wreg free
  2344                           
  2345                           ;yourcoffe.c: 65:         lcd_cmd(0x18);
  2346  00702A  0E18               	movlw	24
  2347  00702C  EC7B  F035         	call	_lcd_cmd
  2348  007030                     
  2349                           ;yourcoffe.c: 66:     }
  2350  007030  4A11               	infsnz	scrollDisplay@i^0,f,c
  2351  007032  2A12               	incf	(scrollDisplay@i+1)^0,f,c
  2352  007034  BE12               	btfsc	(scrollDisplay@i+1)^0,7,c
  2353  007036  EF26  F038         	goto	u1371
  2354  00703A  5012               	movf	(scrollDisplay@i+1)^0,w,c
  2355  00703C  E109               	bnz	u1370
  2356  00703E  0E0E               	movlw	14
  2357  007040  5C11               	subwf	scrollDisplay@i^0,w,c
  2358  007042  A0D8               	btfss	status,0,c
  2359  007044  EF26  F038         	goto	u1371
  2360  007048  EF28  F038         	goto	u1370
  2361  00704C                     u1371:
  2362  00704C  EF0F  F038         	goto	l1892
  2363  007050                     u1370:
  2364  007050                     
  2365                           ;yourcoffe.c: 68:     for (i = 0; i < 22; i++) {
  2366  007050  0E00               	movlw	0
  2367  007052  6E12               	movwf	(scrollDisplay@i+1)^0,c
  2368  007054  0E00               	movlw	0
  2369  007056  6E11               	movwf	scrollDisplay@i^0,c
  2370  007058                     l1904:
  2371                           
  2372                           ;yourcoffe.c: 69:         atraso_ms(atrasoMed);
  2373  007058  0E00               	movlw	0
  2374  00705A  6E02               	movwf	(atraso_ms@t+1)^0,c
  2375  00705C  0E96               	movlw	150
  2376  00705E  6E01               	movwf	atraso_ms@t^0,c
  2377  007060  EC5A  F036         	call	_atraso_ms	;wreg free
  2378                           
  2379                           ;yourcoffe.c: 70:         lcd_cmd(0x1C);
  2380  007064  0E1C               	movlw	28
  2381  007066  EC7B  F035         	call	_lcd_cmd
  2382  00706A                     
  2383                           ;yourcoffe.c: 71:     }
  2384  00706A  4A11               	infsnz	scrollDisplay@i^0,f,c
  2385  00706C  2A12               	incf	(scrollDisplay@i+1)^0,f,c
  2386  00706E  BE12               	btfsc	(scrollDisplay@i+1)^0,7,c
  2387  007070  EF43  F038         	goto	u1381
  2388  007074  5012               	movf	(scrollDisplay@i+1)^0,w,c
  2389  007076  E109               	bnz	u1380
  2390  007078  0E16               	movlw	22
  2391  00707A  5C11               	subwf	scrollDisplay@i^0,w,c
  2392  00707C  A0D8               	btfss	status,0,c
  2393  00707E  EF43  F038         	goto	u1381
  2394  007082  EF45  F038         	goto	u1380
  2395  007086                     u1381:
  2396  007086  EF2C  F038         	goto	l1904
  2397  00708A                     u1380:
  2398  00708A                     
  2399                           ;yourcoffe.c: 73:     for (i = 0; i < 15; i++) {
  2400  00708A  0E00               	movlw	0
  2401  00708C  6E12               	movwf	(scrollDisplay@i+1)^0,c
  2402  00708E  0E00               	movlw	0
  2403  007090  6E11               	movwf	scrollDisplay@i^0,c
  2404  007092                     l1916:
  2405                           
  2406                           ;yourcoffe.c: 74:         atraso_ms(atrasoMed);
  2407  007092  0E00               	movlw	0
  2408  007094  6E02               	movwf	(atraso_ms@t+1)^0,c
  2409  007096  0E96               	movlw	150
  2410  007098  6E01               	movwf	atraso_ms@t^0,c
  2411  00709A  EC5A  F036         	call	_atraso_ms	;wreg free
  2412                           
  2413                           ;yourcoffe.c: 75:         lcd_cmd(0x18);
  2414  00709E  0E18               	movlw	24
  2415  0070A0  EC7B  F035         	call	_lcd_cmd
  2416  0070A4                     
  2417                           ;yourcoffe.c: 76:     }
  2418  0070A4  4A11               	infsnz	scrollDisplay@i^0,f,c
  2419  0070A6  2A12               	incf	(scrollDisplay@i+1)^0,f,c
  2420  0070A8  BE12               	btfsc	(scrollDisplay@i+1)^0,7,c
  2421  0070AA  EF60  F038         	goto	u1391
  2422  0070AE  5012               	movf	(scrollDisplay@i+1)^0,w,c
  2423  0070B0  E109               	bnz	u1390
  2424  0070B2  0E0F               	movlw	15
  2425  0070B4  5C11               	subwf	scrollDisplay@i^0,w,c
  2426  0070B6  A0D8               	btfss	status,0,c
  2427  0070B8  EF60  F038         	goto	u1391
  2428  0070BC  EF62  F038         	goto	u1390
  2429  0070C0                     u1391:
  2430  0070C0  EF49  F038         	goto	l1916
  2431  0070C4                     u1390:
  2432  0070C4                     
  2433                           ;yourcoffe.c: 78:     atraso_ms(atrasoMax);
  2434  0070C4  0E03               	movlw	3
  2435  0070C6  6E02               	movwf	(atraso_ms@t+1)^0,c
  2436  0070C8  0EE8               	movlw	232
  2437  0070CA  6E01               	movwf	atraso_ms@t^0,c
  2438  0070CC  EC5A  F036         	call	_atraso_ms	;wreg free
  2439  0070D0  0012               	return		;funcret
  2440  0070D2                     __end_of_scrollDisplay:
  2441                           	opt callstack 0
  2442                           
  2443 ;; *************** function _opcaoDesejada *****************
  2444 ;; Defined at:
  2445 ;;		line 13 in file "yourcoffe.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  menu            1    wreg     unsigned char 
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  menu            1   13[COMRAM] unsigned char 
  2450 ;;  tmp             1   14[COMRAM] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      unsigned char 
  2453 ;; Registers used:
  2454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2460 ;;      Params:         0       0       0       0       0       0       0
  2461 ;;      Locals:         2       0       0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0
  2463 ;;      Totals:         2       0       0       0       0       0       0
  2464 ;;Total ram usage:        2 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    3
  2467 ;; This function calls:
  2468 ;;		_lcd_cmd
  2469 ;;		_lcd_str
  2470 ;;		_tc_tecla
  2471 ;; This function is called by:
  2472 ;;		_main
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           	psect	text8
  2477  006F04                     __ptext8:
  2478                           	opt callstack 0
  2479  006F04                     _opcaoDesejada:
  2480                           	opt callstack 27
  2481                           
  2482                           ;incstack = 0
  2483                           ;opcaoDesejada@menu stored from wreg
  2484  006F04  6E0E               	movwf	opcaoDesejada@menu^0,c
  2485  006F06                     
  2486                           ;yourcoffe.c: 13: char opcaoDesejada(char menu);yourcoffe.c: 14: {;yourcoffe.c: 24:     
      +                          char tmp;;yourcoffe.c: 25:     if(menu != '3'){
  2487  006F06  0E33               	movlw	51
  2488  006F08  180E               	xorwf	opcaoDesejada@menu^0,w,c
  2489  006F0A  B4D8               	btfsc	status,2,c
  2490  006F0C  EF8A  F037         	goto	u1401
  2491  006F10  EF8C  F037         	goto	u1400
  2492  006F14                     u1401:
  2493  006F14  EFA1  F037         	goto	l1932
  2494  006F18                     u1400:
  2495  006F18                     
  2496                           ;yourcoffe.c: 26:         lcd_cmd(0x01);
  2497  006F18  0E01               	movlw	1
  2498  006F1A  EC7B  F035         	call	_lcd_cmd
  2499                           
  2500                           ;yourcoffe.c: 27:         lcd_cmd(0x80);
  2501  006F1E  0E80               	movlw	128
  2502  006F20  EC7B  F035         	call	_lcd_cmd
  2503  006F24                     
  2504                           ;yourcoffe.c: 28:         lcd_str("  PRESSIONE A");
  2505  006F24  0ED4               	movlw	low STR_16
  2506  006F26  6E08               	movwf	lcd_str@str^0,c
  2507  006F28  0E7F               	movlw	high STR_16
  2508  006F2A  6E09               	movwf	(lcd_str@str+1)^0,c
  2509  006F2C  EC8C  F036         	call	_lcd_str	;wreg free
  2510  006F30                     
  2511                           ;yourcoffe.c: 29:         lcd_cmd(0xC0);
  2512  006F30  0EC0               	movlw	192
  2513  006F32  EC7B  F035         	call	_lcd_cmd
  2514                           
  2515                           ;yourcoffe.c: 30:         lcd_str(" OPCAO DESEJADA ");
  2516  006F36  0E90               	movlw	low STR_17
  2517  006F38  6E08               	movwf	lcd_str@str^0,c
  2518  006F3A  0E7F               	movlw	high STR_17
  2519  006F3C  6E09               	movwf	(lcd_str@str+1)^0,c
  2520  006F3E  EC8C  F036         	call	_lcd_str	;wreg free
  2521  006F42                     l1932:
  2522                           
  2523                           ;yourcoffe.c: 34:     {;yourcoffe.c: 35:         (*(volatile __near unsigned char*)0xF95
      +                          ) = 0x0F;
  2524  006F42  0E0F               	movlw	15
  2525  006F44  6E95               	movwf	149,c	;volatile
  2526  006F46                     
  2527                           ;yourcoffe.c: 36:         tmp = tc_tecla(0) + 0x30;
  2528  006F46  0E00               	movlw	0
  2529  006F48  6E08               	movwf	(tc_tecla@timeout+1)^0,c
  2530  006F4A  0E00               	movlw	0
  2531  006F4C  6E07               	movwf	tc_tecla@timeout^0,c
  2532  006F4E  ECC6  F039         	call	_tc_tecla	;wreg free
  2533  006F52  0F30               	addlw	48
  2534  006F54  6E0F               	movwf	opcaoDesejada@tmp^0,c
  2535  006F56                     
  2536                           ;yourcoffe.c: 37:         (*(volatile __near unsigned char*)0xF95) = 0x00;
  2537  006F56  0E00               	movlw	0
  2538  006F58  6E95               	movwf	149,c	;volatile
  2539  006F5A                     
  2540                           ;yourcoffe.c: 38:         if(menu == '1' && (tmp == '1' || tmp == '2' || tmp == '3' || t
      +                          mp == '4'))
  2541  006F5A  0E31               	movlw	49
  2542  006F5C  180E               	xorwf	opcaoDesejada@menu^0,w,c
  2543  006F5E  A4D8               	btfss	status,2,c
  2544  006F60  EFB4  F037         	goto	u1411
  2545  006F64  EFB6  F037         	goto	u1410
  2546  006F68                     u1411:
  2547  006F68  EFDC  F037         	goto	l1950
  2548  006F6C                     u1410:
  2549  006F6C  0E31               	movlw	49
  2550  006F6E  180F               	xorwf	opcaoDesejada@tmp^0,w,c
  2551  006F70  B4D8               	btfsc	status,2,c
  2552  006F72  EFBD  F037         	goto	u1421
  2553  006F76  EFBF  F037         	goto	u1420
  2554  006F7A                     u1421:
  2555  006F7A  EFEE  F037         	goto	l1954
  2556  006F7E                     u1420:
  2557  006F7E  0E32               	movlw	50
  2558  006F80  180F               	xorwf	opcaoDesejada@tmp^0,w,c
  2559  006F82  B4D8               	btfsc	status,2,c
  2560  006F84  EFC6  F037         	goto	u1431
  2561  006F88  EFC8  F037         	goto	u1430
  2562  006F8C                     u1431:
  2563  006F8C  EFEE  F037         	goto	l1954
  2564  006F90                     u1430:
  2565  006F90  0E33               	movlw	51
  2566  006F92  180F               	xorwf	opcaoDesejada@tmp^0,w,c
  2567  006F94  B4D8               	btfsc	status,2,c
  2568  006F96  EFCF  F037         	goto	u1441
  2569  006F9A  EFD1  F037         	goto	u1440
  2570  006F9E                     u1441:
  2571  006F9E  EFEE  F037         	goto	l1954
  2572  006FA2                     u1440:
  2573  006FA2  0E34               	movlw	52
  2574  006FA4  180F               	xorwf	opcaoDesejada@tmp^0,w,c
  2575  006FA6  A4D8               	btfss	status,2,c
  2576  006FA8  EFD8  F037         	goto	u1451
  2577  006FAC  EFDA  F037         	goto	u1450
  2578  006FB0                     u1451:
  2579  006FB0  EFDC  F037         	goto	l1950
  2580  006FB4                     u1450:
  2581  006FB4  EFEE  F037         	goto	l1954
  2582  006FB8                     l1950:
  2583  006FB8  0E31               	movlw	49
  2584  006FBA  180F               	xorwf	opcaoDesejada@tmp^0,w,c
  2585  006FBC  B4D8               	btfsc	status,2,c
  2586  006FBE  EFE3  F037         	goto	u1461
  2587  006FC2  EFE5  F037         	goto	u1460
  2588  006FC6                     u1461:
  2589  006FC6  EFEE  F037         	goto	l1954
  2590  006FCA                     u1460:
  2591  006FCA  0E32               	movlw	50
  2592  006FCC  180F               	xorwf	opcaoDesejada@tmp^0,w,c
  2593  006FCE  A4D8               	btfss	status,2,c
  2594  006FD0  EFEC  F037         	goto	u1471
  2595  006FD4  EFEE  F037         	goto	u1470
  2596  006FD8                     u1471:
  2597  006FD8  EFA1  F037         	goto	l1932
  2598  006FDC                     u1470:
  2599  006FDC                     l1954:
  2600                           
  2601                           ;yourcoffe.c: 45:     return tmp;
  2602  006FDC  500F               	movf	opcaoDesejada@tmp^0,w,c
  2603  006FDE  0012               	return		;funcret
  2604  006FE0                     __end_of_opcaoDesejada:
  2605                           	opt callstack 0
  2606                           
  2607 ;; *************** function _tc_tecla *****************
  2608 ;; Defined at:
  2609 ;;		line 14 in file "teclado.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  timeout         2    6[COMRAM] unsigned int 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;  to              2    8[COMRAM] unsigned int 
  2614 ;;  i               1   12[COMRAM] unsigned char 
  2615 ;;  ret             1   11[COMRAM] unsigned char 
  2616 ;;  tmp             1   10[COMRAM] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      unsigned char 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2626 ;;      Params:         2       0       0       0       0       0       0
  2627 ;;      Locals:         5       0       0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0
  2629 ;;      Totals:         7       0       0       0       0       0       0
  2630 ;;Total ram usage:        7 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    1
  2633 ;; This function calls:
  2634 ;;		_atraso_ms
  2635 ;; This function is called by:
  2636 ;;		_opcaoDesejada
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text9
  2641  00738C                     __ptext9:
  2642                           	opt callstack 0
  2643  00738C                     _tc_tecla:
  2644                           	opt callstack 28
  2645  00738C                     
  2646                           ;teclado.c: 15:     unsigned int to = 0;
  2647  00738C  0E00               	movlw	0
  2648  00738E  6E0A               	movwf	(tc_tecla@to+1)^0,c
  2649  007390  0E00               	movlw	0
  2650  007392  6E09               	movwf	tc_tecla@to^0,c
  2651                           
  2652                           ;teclado.c: 16:     unsigned char i;;teclado.c: 17:     unsigned char ret = 0;
  2653  007394  0E00               	movlw	0
  2654  007396  6E0C               	movwf	tc_tecla@ret^0,c
  2655  007398                     
  2656                           ;teclado.c: 18:     unsigned char tmp = (*(volatile __near unsigned char*)0xF81);
  2657  007398  CF81 F00B          	movff	3969,tc_tecla@tmp	;volatile
  2658                           
  2659                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  2660  00739C  EF77  F03A         	goto	l1760
  2661  0073A0                     l1708:
  2662                           
  2663                           ;teclado.c: 22:         for (i = 0; i < 3; i++) {
  2664  0073A0  0E00               	movlw	0
  2665  0073A2  6E0D               	movwf	tc_tecla@i^0,c
  2666  0073A4                     l1714:
  2667                           
  2668                           ;teclado.c: 23:             (*(volatile __near unsigned char*)0xF81) |= ~linha[i];
  2669  0073A4  0EAD               	movlw	low _linha
  2670  0073A6  240D               	addwf	tc_tecla@i^0,w,c
  2671  0073A8  6EF6               	movwf	tblptrl,c
  2672  0073AA  6AF7               	clrf	tblptrh,c
  2673  0073AC  0E7E               	movlw	high _linha
  2674  0073AE  22F7               	addwfc	tblptrh,f,c
  2675  0073B0                     	if	0	;There are less than 3 active tblptr bytes
  2676  0073B0                     	endif
  2677  0073B0  0008               	tblrd		*
  2678  0073B2  50F5               	movf	tablat,w,c
  2679  0073B4  0AFF               	xorlw	255
  2680  0073B6  1281               	iorwf	129,f,c	;volatile
  2681  0073B8                     
  2682                           ;teclado.c: 24:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3))) 
      +                          {
  2683  0073B8  B683               	btfsc	131,3,c	;volatile
  2684  0073BA  EFE1  F039         	goto	u1041
  2685  0073BE  EFE3  F039         	goto	u1040
  2686  0073C2                     u1041:
  2687  0073C2  EFFB  F039         	goto	l45
  2688  0073C6                     u1040:
  2689  0073C6                     
  2690                           ;teclado.c: 25:                 atraso_ms(atraso);
  2691  0073C6  0E00               	movlw	0
  2692  0073C8  6E02               	movwf	(atraso_ms@t+1)^0,c
  2693  0073CA  0E0F               	movlw	15
  2694  0073CC  6E01               	movwf	atraso_ms@t^0,c
  2695  0073CE  EC5A  F036         	call	_atraso_ms	;wreg free
  2696  0073D2                     
  2697                           ;teclado.c: 26:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<3
      +                          ))) {
  2698  0073D2  B683               	btfsc	131,3,c	;volatile
  2699  0073D4  EFEE  F039         	goto	u1051
  2700  0073D8  EFF0  F039         	goto	u1050
  2701  0073DC                     u1051:
  2702  0073DC  EFFB  F039         	goto	l45
  2703  0073E0                     u1050:
  2704  0073E0                     l47:
  2705  0073E0  A683               	btfss	131,3,c	;volatile
  2706  0073E2  EFF5  F039         	goto	u1061
  2707  0073E6  EFF7  F039         	goto	u1060
  2708  0073EA                     u1061:
  2709  0073EA  EFF0  F039         	goto	l47
  2710  0073EE                     u1060:
  2711  0073EE                     
  2712                           ;teclado.c: 28:                     ret = 1 + i;
  2713  0073EE  280D               	incf	tc_tecla@i^0,w,c
  2714  0073F0  6E0C               	movwf	tc_tecla@ret^0,c
  2715                           
  2716                           ;teclado.c: 29:                     break;
  2717  0073F2  EF6D  F03A         	goto	l1756
  2718  0073F6                     l45:
  2719                           
  2720                           ;teclado.c: 32:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2))) 
      +                          {
  2721  0073F6  B483               	btfsc	131,2,c	;volatile
  2722  0073F8  EF00  F03A         	goto	u1071
  2723  0073FC  EF02  F03A         	goto	u1070
  2724  007400                     u1071:
  2725  007400  EF1B  F03A         	goto	l50
  2726  007404                     u1070:
  2727  007404                     
  2728                           ;teclado.c: 33:                 atraso_ms(atraso);
  2729  007404  0E00               	movlw	0
  2730  007406  6E02               	movwf	(atraso_ms@t+1)^0,c
  2731  007408  0E0F               	movlw	15
  2732  00740A  6E01               	movwf	atraso_ms@t^0,c
  2733  00740C  EC5A  F036         	call	_atraso_ms	;wreg free
  2734  007410                     
  2735                           ;teclado.c: 34:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<2
      +                          ))) {
  2736  007410  B483               	btfsc	131,2,c	;volatile
  2737  007412  EF0D  F03A         	goto	u1081
  2738  007416  EF0F  F03A         	goto	u1080
  2739  00741A                     u1081:
  2740  00741A  EF1B  F03A         	goto	l50
  2741  00741E                     u1080:
  2742  00741E                     l52:
  2743  00741E  A483               	btfss	131,2,c	;volatile
  2744  007420  EF14  F03A         	goto	u1091
  2745  007424  EF16  F03A         	goto	u1090
  2746  007428                     u1091:
  2747  007428  EF0F  F03A         	goto	l52
  2748  00742C                     u1090:
  2749  00742C                     
  2750                           ;teclado.c: 36:                     ret = 4 + i;
  2751  00742C  500D               	movf	tc_tecla@i^0,w,c
  2752  00742E  0F04               	addlw	4
  2753  007430  6E0C               	movwf	tc_tecla@ret^0,c
  2754                           
  2755                           ;teclado.c: 37:                     break;
  2756  007432  EF6D  F03A         	goto	l1756
  2757  007436                     l50:
  2758                           
  2759                           ;teclado.c: 40:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1))) 
      +                          {
  2760  007436  B283               	btfsc	131,1,c	;volatile
  2761  007438  EF20  F03A         	goto	u1101
  2762  00743C  EF22  F03A         	goto	u1100
  2763  007440                     u1101:
  2764  007440  EF3B  F03A         	goto	l55
  2765  007444                     u1100:
  2766  007444                     
  2767                           ;teclado.c: 41:                 atraso_ms(atraso);
  2768  007444  0E00               	movlw	0
  2769  007446  6E02               	movwf	(atraso_ms@t+1)^0,c
  2770  007448  0E0F               	movlw	15
  2771  00744A  6E01               	movwf	atraso_ms@t^0,c
  2772  00744C  EC5A  F036         	call	_atraso_ms	;wreg free
  2773  007450                     
  2774                           ;teclado.c: 42:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<1
      +                          ))) {
  2775  007450  B283               	btfsc	131,1,c	;volatile
  2776  007452  EF2D  F03A         	goto	u1111
  2777  007456  EF2F  F03A         	goto	u1110
  2778  00745A                     u1111:
  2779  00745A  EF3B  F03A         	goto	l55
  2780  00745E                     u1110:
  2781  00745E                     l57:
  2782  00745E  A283               	btfss	131,1,c	;volatile
  2783  007460  EF34  F03A         	goto	u1121
  2784  007464  EF36  F03A         	goto	u1120
  2785  007468                     u1121:
  2786  007468  EF2F  F03A         	goto	l57
  2787  00746C                     u1120:
  2788  00746C                     
  2789                           ;teclado.c: 44:                     ret = 7 + i;
  2790  00746C  500D               	movf	tc_tecla@i^0,w,c
  2791  00746E  0F07               	addlw	7
  2792  007470  6E0C               	movwf	tc_tecla@ret^0,c
  2793                           
  2794                           ;teclado.c: 45:                     break;
  2795  007472  EF6D  F03A         	goto	l1756
  2796  007476                     l55:
  2797                           
  2798                           ;teclado.c: 48:             if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0))) 
      +                          {
  2799  007476  B083               	btfsc	131,0,c	;volatile
  2800  007478  EF40  F03A         	goto	u1131
  2801  00747C  EF42  F03A         	goto	u1130
  2802  007480                     u1131:
  2803  007480  EF5B  F03A         	goto	l1750
  2804  007484                     u1130:
  2805  007484                     
  2806                           ;teclado.c: 49:                 atraso_ms(atraso);
  2807  007484  0E00               	movlw	0
  2808  007486  6E02               	movwf	(atraso_ms@t+1)^0,c
  2809  007488  0E0F               	movlw	15
  2810  00748A  6E01               	movwf	atraso_ms@t^0,c
  2811  00748C  EC5A  F036         	call	_atraso_ms	;wreg free
  2812  007490                     
  2813                           ;teclado.c: 50:                 if (!(((*(volatile __near unsigned char*)0xF83)) & (1<<0
      +                          ))) {
  2814  007490  B083               	btfsc	131,0,c	;volatile
  2815  007492  EF4D  F03A         	goto	u1141
  2816  007496  EF4F  F03A         	goto	u1140
  2817  00749A                     u1141:
  2818  00749A  EF5B  F03A         	goto	l1750
  2819  00749E                     u1140:
  2820  00749E                     l62:
  2821  00749E  A083               	btfss	131,0,c	;volatile
  2822  0074A0  EF54  F03A         	goto	u1151
  2823  0074A4  EF56  F03A         	goto	u1150
  2824  0074A8                     u1151:
  2825  0074A8  EF4F  F03A         	goto	l62
  2826  0074AC                     u1150:
  2827  0074AC                     
  2828                           ;teclado.c: 52:                     ret = 10 + i;
  2829  0074AC  500D               	movf	tc_tecla@i^0,w,c
  2830  0074AE  0F0A               	addlw	10
  2831  0074B0  6E0C               	movwf	tc_tecla@ret^0,c
  2832                           
  2833                           ;teclado.c: 53:                     break;
  2834  0074B2  EF6D  F03A         	goto	l1756
  2835  0074B6                     l1750:
  2836                           
  2837                           ;teclado.c: 56:             (*(volatile __near unsigned char*)0xF81) &= linha[i];
  2838  0074B6  0EAD               	movlw	low _linha
  2839  0074B8  240D               	addwf	tc_tecla@i^0,w,c
  2840  0074BA  6EF6               	movwf	tblptrl,c
  2841  0074BC  6AF7               	clrf	tblptrh,c
  2842  0074BE  0E7E               	movlw	high _linha
  2843  0074C0  22F7               	addwfc	tblptrh,f,c
  2844  0074C2                     	if	0	;There are less than 3 active tblptr bytes
  2845  0074C2                     	endif
  2846  0074C2  0008               	tblrd		*
  2847  0074C4  50F5               	movf	tablat,w,c
  2848  0074C6  1681               	andwf	129,f,c	;volatile
  2849  0074C8                     
  2850                           ;teclado.c: 57:         };
  2851  0074C8  2A0D               	incf	tc_tecla@i^0,f,c
  2852  0074CA  0E02               	movlw	2
  2853  0074CC  640D               	cpfsgt	tc_tecla@i^0,c
  2854  0074CE  EF6B  F03A         	goto	u1161
  2855  0074D2  EF6D  F03A         	goto	u1160
  2856  0074D6                     u1161:
  2857  0074D6  EFD2  F039         	goto	l1714
  2858  0074DA                     u1160:
  2859  0074DA                     l1756:
  2860                           
  2861                           ;teclado.c: 58:         atraso_ms(atraso_min);
  2862  0074DA  0E00               	movlw	0
  2863  0074DC  6E02               	movwf	(atraso_ms@t+1)^0,c
  2864  0074DE  0E05               	movlw	5
  2865  0074E0  6E01               	movwf	atraso_ms@t^0,c
  2866  0074E2  EC5A  F036         	call	_atraso_ms	;wreg free
  2867  0074E6                     
  2868                           ;teclado.c: 59:         to += 5;
  2869  0074E6  0E05               	movlw	5
  2870  0074E8  2609               	addwf	tc_tecla@to^0,f,c
  2871  0074EA  0E00               	movlw	0
  2872  0074EC  220A               	addwfc	(tc_tecla@to+1)^0,f,c
  2873  0074EE                     l1760:
  2874                           
  2875                           ;teclado.c: 21:     while (((to < timeout) || (!timeout))&&(!ret)) {
  2876  0074EE  5007               	movf	tc_tecla@timeout^0,w,c
  2877  0074F0  5C09               	subwf	tc_tecla@to^0,w,c
  2878  0074F2  5008               	movf	(tc_tecla@timeout+1)^0,w,c
  2879  0074F4  580A               	subwfb	(tc_tecla@to+1)^0,w,c
  2880  0074F6  A0D8               	btfss	status,0,c
  2881  0074F8  EF80  F03A         	goto	u1171
  2882  0074FC  EF82  F03A         	goto	u1170
  2883  007500                     u1171:
  2884  007500  EF8B  F03A         	goto	l1764
  2885  007504                     u1170:
  2886  007504  5007               	movf	tc_tecla@timeout^0,w,c
  2887  007506  1008               	iorwf	(tc_tecla@timeout+1)^0,w,c
  2888  007508  A4D8               	btfss	status,2,c
  2889  00750A  EF89  F03A         	goto	u1181
  2890  00750E  EF8B  F03A         	goto	u1180
  2891  007512                     u1181:
  2892  007512  EF93  F03A         	goto	l1766
  2893  007516                     u1180:
  2894  007516                     l1764:
  2895  007516  500C               	movf	tc_tecla@ret^0,w,c
  2896  007518  B4D8               	btfsc	status,2,c
  2897  00751A  EF91  F03A         	goto	u1191
  2898  00751E  EF93  F03A         	goto	u1190
  2899  007522                     u1191:
  2900  007522  EFD0  F039         	goto	l1708
  2901  007526                     u1190:
  2902  007526                     l1766:
  2903                           
  2904                           ;teclado.c: 62:     if (!ret)ret = 255;
  2905  007526  500C               	movf	tc_tecla@ret^0,w,c
  2906  007528  A4D8               	btfss	status,2,c
  2907  00752A  EF99  F03A         	goto	u1201
  2908  00752E  EF9B  F03A         	goto	u1200
  2909  007532                     u1201:
  2910  007532  EF9C  F03A         	goto	l1770
  2911  007536                     u1200:
  2912  007536  680C               	setf	tc_tecla@ret^0,c
  2913  007538                     l1770:
  2914                           
  2915                           ;teclado.c: 63:     if (ret == 11)ret = 0;
  2916  007538  0E0B               	movlw	11
  2917  00753A  180C               	xorwf	tc_tecla@ret^0,w,c
  2918  00753C  A4D8               	btfss	status,2,c
  2919  00753E  EFA3  F03A         	goto	u1211
  2920  007542  EFA5  F03A         	goto	u1210
  2921  007546                     u1211:
  2922  007546  EFA7  F03A         	goto	l1774
  2923  00754A                     u1210:
  2924  00754A  0E00               	movlw	0
  2925  00754C  6E0C               	movwf	tc_tecla@ret^0,c
  2926  00754E                     l1774:
  2927                           
  2928                           ;teclado.c: 64:     (*(volatile __near unsigned char*)0xF81) = tmp;
  2929  00754E  C00B  FF81         	movff	tc_tecla@tmp,3969	;volatile
  2930                           
  2931                           ;teclado.c: 65:     return ret;
  2932  007552  500C               	movf	tc_tecla@ret^0,w,c
  2933  007554  0012               	return		;funcret
  2934  007556                     __end_of_tc_tecla:
  2935                           	opt callstack 0
  2936                           
  2937 ;; *************** function _lcd_str *****************
  2938 ;; Defined at:
  2939 ;;		line 47 in file "lcd.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  str             2    7[COMRAM] PTR const unsigned char 
  2942 ;;		 -> STR_17(17), STR_16(14), STR_15(32), STR_14(21), 
  2943 ;;		 -> STR_13(18), STR_12(14), STR_11(17), STR_9(31), 
  2944 ;;		 -> main@frase(50), STR_4(31), STR_3(28), STR_2(17), 
  2945 ;;		 -> STR_1(14), 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  i               1   11[COMRAM] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  1    wreg      void 
  2950 ;; Registers used:
  2951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2957 ;;      Params:         2       0       0       0       0       0       0
  2958 ;;      Locals:         1       0       0       0       0       0       0
  2959 ;;      Temps:          2       0       0       0       0       0       0
  2960 ;;      Totals:         5       0       0       0       0       0       0
  2961 ;;Total ram usage:        5 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; Hardware stack levels required when called:    2
  2964 ;; This function calls:
  2965 ;;		_lcd_dat
  2966 ;; This function is called by:
  2967 ;;		_main
  2968 ;;		_opcaoDesejada
  2969 ;;		_scrollDisplay
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text10
  2974  006D18                     __ptext10:
  2975                           	opt callstack 0
  2976  006D18                     _lcd_str:
  2977                           	opt callstack 27
  2978  006D18                     
  2979                           ;lcd.c: 48:     unsigned char i = 0;
  2980  006D18  0E00               	movlw	0
  2981  006D1A  6E0C               	movwf	lcd_str@i^0,c
  2982                           
  2983                           ;lcd.c: 50:     while (str[i] != 0) {
  2984  006D1C  EFA9  F036         	goto	l1702
  2985  006D20                     l1698:
  2986                           
  2987                           ;lcd.c: 51:         lcd_dat(str[i]);
  2988  006D20  500C               	movf	lcd_str@i^0,w,c
  2989  006D22  2408               	addwf	lcd_str@str^0,w,c
  2990  006D24  6E0A               	movwf	??_lcd_str^0,c
  2991  006D26  0E00               	movlw	0
  2992  006D28  2009               	addwfc	(lcd_str@str+1)^0,w,c
  2993  006D2A  6E0B               	movwf	(??_lcd_str+1)^0,c
  2994  006D2C  C00A  FFF6         	movff	??_lcd_str,tblptrl
  2995  006D30  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  2996  006D34  6AF8               	clrf	tblptru,c
  2997  006D36  0E05               	movlw	(high __ramtop+-1)
  2998  006D38  64F7               	cpfsgt	tblptrh,c
  2999  006D3A  D003               	bra	u1017
  3000  006D3C  0008               	tblrd		*
  3001  006D3E  50F5               	movf	tablat,w,c
  3002  006D40  D005               	bra	u1010
  3003  006D42                     u1017:
  3004  006D42  CFF6 FFE9          	movff	tblptrl,fsr0l
  3005  006D46  CFF7 FFEA          	movff	tblptrh,fsr0h
  3006  006D4A  50EF               	movf	indf0,w,c
  3007  006D4C                     u1010:
  3008  006D4C  EC90  F035         	call	_lcd_dat
  3009  006D50                     
  3010                           ;lcd.c: 52:         i++;
  3011  006D50  2A0C               	incf	lcd_str@i^0,f,c
  3012  006D52                     l1702:
  3013                           
  3014                           ;lcd.c: 50:     while (str[i] != 0) {
  3015  006D52  500C               	movf	lcd_str@i^0,w,c
  3016  006D54  2408               	addwf	lcd_str@str^0,w,c
  3017  006D56  6E0A               	movwf	??_lcd_str^0,c
  3018  006D58  0E00               	movlw	0
  3019  006D5A  2009               	addwfc	(lcd_str@str+1)^0,w,c
  3020  006D5C  6E0B               	movwf	(??_lcd_str+1)^0,c
  3021  006D5E  C00A  FFF6         	movff	??_lcd_str,tblptrl
  3022  006D62  C00B  FFF7         	movff	??_lcd_str+1,tblptrh
  3023  006D66  6AF8               	clrf	tblptru,c
  3024  006D68  0E05               	movlw	(high __ramtop+-1)
  3025  006D6A  64F7               	cpfsgt	tblptrh,c
  3026  006D6C  D003               	bra	u1027
  3027  006D6E  0008               	tblrd		*
  3028  006D70  50F5               	movf	tablat,w,c
  3029  006D72  D005               	bra	u1020
  3030  006D74                     u1027:
  3031  006D74  CFF6 FFE9          	movff	tblptrl,fsr0l
  3032  006D78  CFF7 FFEA          	movff	tblptrh,fsr0h
  3033  006D7C  50EF               	movf	indf0,w,c
  3034  006D7E                     u1020:
  3035  006D7E  0900               	iorlw	0
  3036  006D80  A4D8               	btfss	status,2,c
  3037  006D82  EFC5  F036         	goto	u1031
  3038  006D86  EFC7  F036         	goto	u1030
  3039  006D8A                     u1031:
  3040  006D8A  EF90  F036         	goto	l1698
  3041  006D8E                     u1030:
  3042  006D8E  0012               	return		;funcret
  3043  006D90                     __end_of_lcd_str:
  3044                           	opt callstack 0
  3045                           
  3046 ;; *************** function _lcd_dat *****************
  3047 ;; Defined at:
  3048 ;;		line 19 in file "lcd.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  val             1    wreg     unsigned char 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  val             1    6[COMRAM] unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, status,2, status,0, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3062 ;;      Params:         0       0       0       0       0       0       0
  3063 ;;      Locals:         1       0       0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0
  3065 ;;      Totals:         1       0       0       0       0       0       0
  3066 ;;Total ram usage:        1 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    1
  3069 ;; This function calls:
  3070 ;;		_atraso_ms
  3071 ;;		_lcd_wr
  3072 ;; This function is called by:
  3073 ;;		_lcd_str
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077                           	psect	text11
  3078  006B20                     __ptext11:
  3079                           	opt callstack 0
  3080  006B20                     _lcd_dat:
  3081                           	opt callstack 27
  3082                           
  3083                           ;incstack = 0
  3084                           ;lcd_dat@val stored from wreg
  3085  006B20  6E07               	movwf	lcd_dat@val^0,c
  3086  006B22                     
  3087                           ;lcd.c: 20:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3088  006B22  8284               	bsf	132,1,c	;volatile
  3089  006B24                     
  3090                           ;lcd.c: 21:     lcd_wr(val);
  3091  006B24  5007               	movf	lcd_dat@val^0,w,c
  3092  006B26  EC57  F035         	call	_lcd_wr
  3093  006B2A                     
  3094                           ;lcd.c: 22:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<2));
  3095  006B2A  8484               	bsf	132,2,c	;volatile
  3096  006B2C                     
  3097                           ;lcd.c: 23:     atraso_ms(3);
  3098  006B2C  0E00               	movlw	0
  3099  006B2E  6E02               	movwf	(atraso_ms@t+1)^0,c
  3100  006B30  0E03               	movlw	3
  3101  006B32  6E01               	movwf	atraso_ms@t^0,c
  3102  006B34  EC5A  F036         	call	_atraso_ms	;wreg free
  3103  006B38                     
  3104                           ;lcd.c: 24:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  3105  006B38  9284               	bcf	132,1,c	;volatile
  3106  006B3A                     
  3107                           ;lcd.c: 25:     atraso_ms(3);
  3108  006B3A  0E00               	movlw	0
  3109  006B3C  6E02               	movwf	(atraso_ms@t+1)^0,c
  3110  006B3E  0E03               	movlw	3
  3111  006B40  6E01               	movwf	atraso_ms@t^0,c
  3112  006B42  EC5A  F036         	call	_atraso_ms	;wreg free
  3113  006B46                     
  3114                           ;lcd.c: 26:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3115  006B46  8284               	bsf	132,1,c	;volatile
  3116  006B48  0012               	return		;funcret
  3117  006B4A                     __end_of_lcd_dat:
  3118                           	opt callstack 0
  3119                           
  3120 ;; *************** function _lcd_init *****************
  3121 ;; Defined at:
  3122 ;;		line 29 in file "lcd.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;		None
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;		None
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3136 ;;      Params:         0       0       0       0       0       0       0
  3137 ;;      Locals:         0       0       0       0       0       0       0
  3138 ;;      Temps:          0       0       0       0       0       0       0
  3139 ;;      Totals:         0       0       0       0       0       0       0
  3140 ;;Total ram usage:        0 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; Hardware stack levels required when called:    2
  3143 ;; This function calls:
  3144 ;;		_atraso_ms
  3145 ;;		_lcd_cmd
  3146 ;; This function is called by:
  3147 ;;		_main
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text12
  3152  006BFC                     __ptext12:
  3153                           	opt callstack 0
  3154  006BFC                     _lcd_init:
  3155                           	opt callstack 28
  3156  006BFC                     
  3157                           ;lcd.c: 30:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  3158  006BFC  9284               	bcf	132,1,c	;volatile
  3159                           
  3160                           ;lcd.c: 31:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  3161  006BFE  9484               	bcf	132,2,c	;volatile
  3162  006C00                     
  3163                           ;lcd.c: 32:     atraso_ms(20);
  3164  006C00  0E00               	movlw	0
  3165  006C02  6E02               	movwf	(atraso_ms@t+1)^0,c
  3166  006C04  0E14               	movlw	20
  3167  006C06  6E01               	movwf	atraso_ms@t^0,c
  3168  006C08  EC5A  F036         	call	_atraso_ms	;wreg free
  3169  006C0C                     
  3170                           ;lcd.c: 33:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3171  006C0C  8284               	bsf	132,1,c	;volatile
  3172                           
  3173                           ;lcd.c: 35:     lcd_cmd(0x38);
  3174  006C0E  0E38               	movlw	56
  3175  006C10  EC7B  F035         	call	_lcd_cmd
  3176                           
  3177                           ;lcd.c: 36:     atraso_ms(5);
  3178  006C14  0E00               	movlw	0
  3179  006C16  6E02               	movwf	(atraso_ms@t+1)^0,c
  3180  006C18  0E05               	movlw	5
  3181  006C1A  6E01               	movwf	atraso_ms@t^0,c
  3182  006C1C  EC5A  F036         	call	_atraso_ms	;wreg free
  3183                           
  3184                           ;lcd.c: 37:     lcd_cmd(0x38);
  3185  006C20  0E38               	movlw	56
  3186  006C22  EC7B  F035         	call	_lcd_cmd
  3187                           
  3188                           ;lcd.c: 38:     atraso_ms(1);
  3189  006C26  0E00               	movlw	0
  3190  006C28  6E02               	movwf	(atraso_ms@t+1)^0,c
  3191  006C2A  0E01               	movlw	1
  3192  006C2C  6E01               	movwf	atraso_ms@t^0,c
  3193  006C2E  EC5A  F036         	call	_atraso_ms	;wreg free
  3194                           
  3195                           ;lcd.c: 39:     lcd_cmd(0x38);
  3196  006C32  0E38               	movlw	56
  3197  006C34  EC7B  F035         	call	_lcd_cmd
  3198                           
  3199                           ;lcd.c: 40:     lcd_cmd(0x08);
  3200  006C38  0E08               	movlw	8
  3201  006C3A  EC7B  F035         	call	_lcd_cmd
  3202                           
  3203                           ;lcd.c: 41:     lcd_cmd(0x0F);
  3204  006C3E  0E0F               	movlw	15
  3205  006C40  EC7B  F035         	call	_lcd_cmd
  3206                           
  3207                           ;lcd.c: 42:     lcd_cmd(0x01);
  3208  006C44  0E01               	movlw	1
  3209  006C46  EC7B  F035         	call	_lcd_cmd
  3210                           
  3211                           ;lcd.c: 43:     lcd_cmd(0x38);
  3212  006C4A  0E38               	movlw	56
  3213  006C4C  EC7B  F035         	call	_lcd_cmd
  3214                           
  3215                           ;lcd.c: 44:     lcd_cmd(0x80);
  3216  006C50  0E80               	movlw	128
  3217  006C52  EC7B  F035         	call	_lcd_cmd
  3218  006C56  0012               	return		;funcret
  3219  006C58                     __end_of_lcd_init:
  3220                           	opt callstack 0
  3221                           
  3222 ;; *************** function _lcd_cmd *****************
  3223 ;; Defined at:
  3224 ;;		line 9 in file "lcd.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  val             1    wreg     unsigned char 
  3227 ;; Auto vars:     Size  Location     Type
  3228 ;;  val             1    6[COMRAM] unsigned char 
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  1    wreg      void 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3238 ;;      Params:         0       0       0       0       0       0       0
  3239 ;;      Locals:         1       0       0       0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0       0       0
  3241 ;;      Totals:         1       0       0       0       0       0       0
  3242 ;;Total ram usage:        1 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    1
  3245 ;; This function calls:
  3246 ;;		_atraso_ms
  3247 ;;		_lcd_wr
  3248 ;; This function is called by:
  3249 ;;		_lcd_init
  3250 ;;		_main
  3251 ;;		_opcaoDesejada
  3252 ;;		_scrollDisplay
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text13
  3257  006AF6                     __ptext13:
  3258                           	opt callstack 0
  3259  006AF6                     _lcd_cmd:
  3260                           	opt callstack 28
  3261                           
  3262                           ;incstack = 0
  3263                           ;lcd_cmd@val stored from wreg
  3264  006AF6  6E07               	movwf	lcd_cmd@val^0,c
  3265  006AF8                     
  3266                           ;lcd.c: 10:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3267  006AF8  8284               	bsf	132,1,c	;volatile
  3268  006AFA                     
  3269                           ;lcd.c: 11:     lcd_wr(val);
  3270  006AFA  5007               	movf	lcd_cmd@val^0,w,c
  3271  006AFC  EC57  F035         	call	_lcd_wr
  3272  006B00                     
  3273                           ;lcd.c: 12:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<2));
  3274  006B00  9484               	bcf	132,2,c	;volatile
  3275  006B02                     
  3276                           ;lcd.c: 13:     atraso_ms(3);
  3277  006B02  0E00               	movlw	0
  3278  006B04  6E02               	movwf	(atraso_ms@t+1)^0,c
  3279  006B06  0E03               	movlw	3
  3280  006B08  6E01               	movwf	atraso_ms@t^0,c
  3281  006B0A  EC5A  F036         	call	_atraso_ms	;wreg free
  3282  006B0E                     
  3283                           ;lcd.c: 14:     (((*(volatile __near unsigned char*)0xF84)) &= ~(1<<1));
  3284  006B0E  9284               	bcf	132,1,c	;volatile
  3285  006B10                     
  3286                           ;lcd.c: 15:     atraso_ms(3);
  3287  006B10  0E00               	movlw	0
  3288  006B12  6E02               	movwf	(atraso_ms@t+1)^0,c
  3289  006B14  0E03               	movlw	3
  3290  006B16  6E01               	movwf	atraso_ms@t^0,c
  3291  006B18  EC5A  F036         	call	_atraso_ms	;wreg free
  3292  006B1C                     
  3293                           ;lcd.c: 16:     (((*(volatile __near unsigned char*)0xF84)) |= (1<<1));
  3294  006B1C  8284               	bsf	132,1,c	;volatile
  3295  006B1E  0012               	return		;funcret
  3296  006B20                     __end_of_lcd_cmd:
  3297                           	opt callstack 0
  3298                           
  3299 ;; *************** function _lcd_wr *****************
  3300 ;; Defined at:
  3301 ;;		line 5 in file "lcd.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  val             1    wreg     unsigned char 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  val             1    0[COMRAM] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3315 ;;      Params:         0       0       0       0       0       0       0
  3316 ;;      Locals:         1       0       0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0
  3318 ;;      Totals:         1       0       0       0       0       0       0
  3319 ;;Total ram usage:        1 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_lcd_cmd
  3325 ;;		_lcd_dat
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text14
  3330  006AAE                     __ptext14:
  3331                           	opt callstack 0
  3332  006AAE                     _lcd_wr:
  3333                           	opt callstack 27
  3334                           
  3335                           ;incstack = 0
  3336                           ;lcd_wr@val stored from wreg
  3337  006AAE  6E01               	movwf	lcd_wr@val^0,c
  3338  006AB0                     
  3339                           ;lcd.c: 6:     (*(volatile __near unsigned char*)0xF83) = val;
  3340  006AB0  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  3341  006AB4  0012               	return		;funcret
  3342  006AB6                     __end_of_lcd_wr:
  3343                           	opt callstack 0
  3344                           
  3345 ;; *************** function _atraso_ms *****************
  3346 ;; Defined at:
  3347 ;;		line 3 in file "delay.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  t               2    0[COMRAM] int 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  i               2    2[COMRAM] volatile unsigned int 
  3352 ;;  k               1    5[COMRAM] volatile unsigned char 
  3353 ;;  j               1    4[COMRAM] volatile unsigned char 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      void 
  3356 ;; Registers used:
  3357 ;;		wreg, status,2, status,0
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3363 ;;      Params:         2       0       0       0       0       0       0
  3364 ;;      Locals:         4       0       0       0       0       0       0
  3365 ;;      Temps:          0       0       0       0       0       0       0
  3366 ;;      Totals:         6       0       0       0       0       0       0
  3367 ;;Total ram usage:        6 bytes
  3368 ;; Hardware stack levels used:    1
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_lcd_cmd
  3373 ;;		_lcd_dat
  3374 ;;		_lcd_init
  3375 ;;		_tc_tecla
  3376 ;;		_main
  3377 ;;		_scrollDisplay
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text15
  3382  006CB4                     __ptext15:
  3383                           	opt callstack 0
  3384  006CB4                     _atraso_ms:
  3385                           	opt callstack 27
  3386  006CB4                     
  3387                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (t); i++) {
  3388  006CB4  0E00               	movlw	0
  3389  006CB6  6E04               	movwf	(atraso_ms@i+1)^0,c	;volatile
  3390  006CB8  0E00               	movlw	0
  3391  006CBA  6E03               	movwf	atraso_ms@i^0,c	;volatile
  3392  006CBC  EF80  F036         	goto	l1666
  3393  006CC0                     l1644:
  3394                           
  3395                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
  3396  006CC0  0E00               	movlw	0
  3397  006CC2  6E05               	movwf	atraso_ms@j^0,c	;volatile
  3398  006CC4                     l1646:
  3399  006CC4  0E28               	movlw	40
  3400  006CC6  6405               	cpfsgt	atraso_ms@j^0,c	;volatile
  3401  006CC8  EF68  F036         	goto	u981
  3402  006CCC  EF6A  F036         	goto	u980
  3403  006CD0                     u981:
  3404  006CD0  EF6C  F036         	goto	l1650
  3405  006CD4                     u980:
  3406  006CD4  EF7E  F036         	goto	l1664
  3407  006CD8                     l1650:
  3408                           
  3409                           ;delay.c: 9:             for (k = 0; k < 3; k++);
  3410  006CD8  0E00               	movlw	0
  3411  006CDA  6E06               	movwf	atraso_ms@k^0,c	;volatile
  3412  006CDC                     l1652:
  3413  006CDC  0E02               	movlw	2
  3414  006CDE  6406               	cpfsgt	atraso_ms@k^0,c	;volatile
  3415  006CE0  EF74  F036         	goto	u991
  3416  006CE4  EF76  F036         	goto	u990
  3417  006CE8                     u991:
  3418  006CE8  EF78  F036         	goto	l1656
  3419  006CEC                     u990:
  3420  006CEC  EF7B  F036         	goto	l1660
  3421  006CF0                     l1656:
  3422  006CF0  2A06               	incf	atraso_ms@k^0,f,c	;volatile
  3423  006CF2  EF6E  F036         	goto	l1652
  3424  006CF6                     l1660:
  3425                           
  3426                           ;delay.c: 10:         }
  3427  006CF6  2A05               	incf	atraso_ms@j^0,f,c	;volatile
  3428  006CF8  EF62  F036         	goto	l1646
  3429  006CFC                     l1664:
  3430                           
  3431                           ;delay.c: 11:     }
  3432  006CFC  4A03               	infsnz	atraso_ms@i^0,f,c	;volatile
  3433  006CFE  2A04               	incf	(atraso_ms@i+1)^0,f,c	;volatile
  3434  006D00                     l1666:
  3435  006D00  5001               	movf	atraso_ms@t^0,w,c
  3436  006D02  5C03               	subwf	atraso_ms@i^0,w,c	;volatile
  3437  006D04  5002               	movf	(atraso_ms@t+1)^0,w,c
  3438  006D06  5804               	subwfb	(atraso_ms@i+1)^0,w,c	;volatile
  3439  006D08  A0D8               	btfss	status,0,c
  3440  006D0A  EF89  F036         	goto	u1001
  3441  006D0E  EF8B  F036         	goto	u1000
  3442  006D12                     u1001:
  3443  006D12  EF60  F036         	goto	l1644
  3444  006D16                     u1000:
  3445  006D16  0012               	return		;funcret
  3446  006D18                     __end_of_atraso_ms:
  3447                           	opt callstack 0
  3448                           
  3449 ;; *************** function ___xxtofl *****************
  3450 ;; Defined at:
  3451 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  sign            1    wreg     unsigned char 
  3454 ;;  val             4    0[COMRAM] long 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  sign            1    8[COMRAM] unsigned char 
  3457 ;;  arg             4   10[COMRAM] unsigned long 
  3458 ;;  exp             1    9[COMRAM] unsigned char 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  4    0[COMRAM] unsigned char 
  3461 ;; Registers used:
  3462 ;;		wreg, status,2, status,0
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3468 ;;      Params:         4       0       0       0       0       0       0
  3469 ;;      Locals:         6       0       0       0       0       0       0
  3470 ;;      Temps:          4       0       0       0       0       0       0
  3471 ;;      Totals:        14       0       0       0       0       0       0
  3472 ;;Total ram usage:       14 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; This function calls:
  3475 ;;		Nothing
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text16
  3482  0071D8                     __ptext16:
  3483                           	opt callstack 0
  3484  0071D8                     ___xxtofl:
  3485                           	opt callstack 30
  3486                           
  3487                           ;incstack = 0
  3488                           ;___xxtofl@sign stored from wreg
  3489  0071D8  6E09               	movwf	___xxtofl@sign^0,c
  3490  0071DA  5009               	movf	___xxtofl@sign^0,w,c
  3491  0071DC  B4D8               	btfsc	status,2,c
  3492  0071DE  EFF3  F038         	goto	u1811
  3493  0071E2  EFF5  F038         	goto	u1810
  3494  0071E6                     u1811:
  3495  0071E6  EF17  F039         	goto	l831
  3496  0071EA                     u1810:
  3497  0071EA  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3498  0071EC  EFFC  F038         	goto	u1820
  3499  0071F0  EFFA  F038         	goto	u1821
  3500  0071F4                     u1821:
  3501  0071F4  EF17  F039         	goto	l831
  3502  0071F8                     u1820:
  3503  0071F8  C001  F005         	movff	___xxtofl@val,??___xxtofl
  3504  0071FC  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  3505  007200  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  3506  007204  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  3507  007208  1E05               	comf	??___xxtofl^0,f,c
  3508  00720A  1E06               	comf	(??___xxtofl+1)^0,f,c
  3509  00720C  1E07               	comf	(??___xxtofl+2)^0,f,c
  3510  00720E  1E08               	comf	(??___xxtofl+3)^0,f,c
  3511  007210  2A05               	incf	??___xxtofl^0,f,c
  3512  007212  0E00               	movlw	0
  3513  007214  2206               	addwfc	(??___xxtofl+1)^0,f,c
  3514  007216  2207               	addwfc	(??___xxtofl+2)^0,f,c
  3515  007218  2208               	addwfc	(??___xxtofl+3)^0,f,c
  3516  00721A  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  3517  00721E  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3518  007222  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3519  007226  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3520  00722A  EF1F  F039         	goto	l2248
  3521  00722E                     l831:
  3522  00722E  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  3523  007232  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3524  007236  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3525  00723A  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3526  00723E                     l2248:
  3527  00723E  5001               	movf	___xxtofl@val^0,w,c
  3528  007240  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  3529  007242  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  3530  007244  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  3531  007246  A4D8               	btfss	status,2,c
  3532  007248  EF28  F039         	goto	u1831
  3533  00724C  EF2A  F039         	goto	u1830
  3534  007250                     u1831:
  3535  007250  EF34  F039         	goto	l2254
  3536  007254                     u1830:
  3537  007254  0E00               	movlw	0
  3538  007256  6E01               	movwf	?___xxtofl^0,c
  3539  007258  0E00               	movlw	0
  3540  00725A  6E02               	movwf	(?___xxtofl+1)^0,c
  3541  00725C  0E00               	movlw	0
  3542  00725E  6E03               	movwf	(?___xxtofl+2)^0,c
  3543  007260  0E00               	movlw	0
  3544  007262  6E04               	movwf	(?___xxtofl+3)^0,c
  3545  007264  EFC5  F039         	goto	l834
  3546  007268                     l2254:
  3547  007268  0E96               	movlw	150
  3548  00726A  6E0A               	movwf	___xxtofl@exp^0,c
  3549  00726C  EF3E  F039         	goto	l2258
  3550  007270                     l2256:
  3551  007270  2A0A               	incf	___xxtofl@exp^0,f,c
  3552  007272  90D8               	bcf	status,0,c
  3553  007274  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3554  007276  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3555  007278  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3556  00727A  320B               	rrcf	___xxtofl@arg^0,f,c
  3557  00727C                     l2258:
  3558  00727C  0E00               	movlw	0
  3559  00727E  140B               	andwf	___xxtofl@arg^0,w,c
  3560  007280  6E05               	movwf	??___xxtofl^0,c
  3561  007282  0E00               	movlw	0
  3562  007284  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3563  007286  6E06               	movwf	(??___xxtofl+1)^0,c
  3564  007288  0E00               	movlw	0
  3565  00728A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3566  00728C  6E07               	movwf	(??___xxtofl+2)^0,c
  3567  00728E  0EFE               	movlw	254
  3568  007290  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3569  007292  6E08               	movwf	(??___xxtofl+3)^0,c
  3570  007294  5005               	movf	??___xxtofl^0,w,c
  3571  007296  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3572  007298  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3573  00729A  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3574  00729C  A4D8               	btfss	status,2,c
  3575  00729E  EF53  F039         	goto	u1841
  3576  0072A2  EF55  F039         	goto	u1840
  3577  0072A6                     u1841:
  3578  0072A6  EF38  F039         	goto	l2256
  3579  0072AA                     u1840:
  3580  0072AA  EF63  F039         	goto	l838
  3581  0072AE                     l2260:
  3582  0072AE  2A0A               	incf	___xxtofl@exp^0,f,c
  3583  0072B0  0E01               	movlw	1
  3584  0072B2  260B               	addwf	___xxtofl@arg^0,f,c
  3585  0072B4  0E00               	movlw	0
  3586  0072B6  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  3587  0072B8  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  3588  0072BA  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  3589  0072BC  90D8               	bcf	status,0,c
  3590  0072BE  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  3591  0072C0  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  3592  0072C2  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  3593  0072C4  320B               	rrcf	___xxtofl@arg^0,f,c
  3594  0072C6                     l838:
  3595  0072C6  0E00               	movlw	0
  3596  0072C8  140B               	andwf	___xxtofl@arg^0,w,c
  3597  0072CA  6E05               	movwf	??___xxtofl^0,c
  3598  0072CC  0E00               	movlw	0
  3599  0072CE  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  3600  0072D0  6E06               	movwf	(??___xxtofl+1)^0,c
  3601  0072D2  0E00               	movlw	0
  3602  0072D4  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  3603  0072D6  6E07               	movwf	(??___xxtofl+2)^0,c
  3604  0072D8  0EFF               	movlw	255
  3605  0072DA  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  3606  0072DC  6E08               	movwf	(??___xxtofl+3)^0,c
  3607  0072DE  5005               	movf	??___xxtofl^0,w,c
  3608  0072E0  1006               	iorwf	(??___xxtofl+1)^0,w,c
  3609  0072E2  1007               	iorwf	(??___xxtofl+2)^0,w,c
  3610  0072E4  1008               	iorwf	(??___xxtofl+3)^0,w,c
  3611  0072E6  A4D8               	btfss	status,2,c
  3612  0072E8  EF78  F039         	goto	u1851
  3613  0072EC  EF7A  F039         	goto	u1850
  3614  0072F0                     u1851:
  3615  0072F0  EF57  F039         	goto	l2260
  3616  0072F4                     u1850:
  3617  0072F4  EF82  F039         	goto	l2268
  3618  0072F8                     l2266:
  3619  0072F8  060A               	decf	___xxtofl@exp^0,f,c
  3620  0072FA  90D8               	bcf	status,0,c
  3621  0072FC  360B               	rlcf	___xxtofl@arg^0,f,c
  3622  0072FE  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  3623  007300  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  3624  007302  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  3625  007304                     l2268:
  3626  007304  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  3627  007306  EF87  F039         	goto	u1861
  3628  00730A  EF89  F039         	goto	u1860
  3629  00730E                     u1861:
  3630  00730E  EF91  F039         	goto	l845
  3631  007312                     u1860:
  3632  007312  0E02               	movlw	2
  3633  007314  600A               	cpfslt	___xxtofl@exp^0,c
  3634  007316  EF8F  F039         	goto	u1871
  3635  00731A  EF91  F039         	goto	u1870
  3636  00731E                     u1871:
  3637  00731E  EF7C  F039         	goto	l2266
  3638  007322                     u1870:
  3639  007322                     l845:
  3640  007322  B00A               	btfsc	___xxtofl@exp^0,0,c
  3641  007324  EF96  F039         	goto	u1881
  3642  007328  EF98  F039         	goto	u1880
  3643  00732C                     u1881:
  3644  00732C  EF99  F039         	goto	l2274
  3645  007330                     u1880:
  3646  007330  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  3647  007332                     l2274:
  3648  007332  90D8               	bcf	status,0,c
  3649  007334  320A               	rrcf	___xxtofl@exp^0,f,c
  3650  007336  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  3651  00733A  6A06               	clrf	(??___xxtofl+1)^0,c
  3652  00733C  6A07               	clrf	(??___xxtofl+2)^0,c
  3653  00733E  6A08               	clrf	(??___xxtofl+3)^0,c
  3654  007340  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  3655  007344  6A07               	clrf	(??___xxtofl+2)^0,c
  3656  007346  6A06               	clrf	(??___xxtofl+1)^0,c
  3657  007348  6A05               	clrf	??___xxtofl^0,c
  3658  00734A  5005               	movf	??___xxtofl^0,w,c
  3659  00734C  120B               	iorwf	___xxtofl@arg^0,f,c
  3660  00734E  5006               	movf	(??___xxtofl+1)^0,w,c
  3661  007350  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  3662  007352  5007               	movf	(??___xxtofl+2)^0,w,c
  3663  007354  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  3664  007356  5008               	movf	(??___xxtofl+3)^0,w,c
  3665  007358  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  3666  00735A  5009               	movf	___xxtofl@sign^0,w,c
  3667  00735C  B4D8               	btfsc	status,2,c
  3668  00735E  EFB3  F039         	goto	u1891
  3669  007362  EFB5  F039         	goto	u1890
  3670  007366                     u1891:
  3671  007366  EFBD  F039         	goto	l2284
  3672  00736A                     u1890:
  3673  00736A  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  3674  00736C  EFBC  F039         	goto	u1900
  3675  007370  EFBA  F039         	goto	u1901
  3676  007374                     u1901:
  3677  007374  EFBD  F039         	goto	l2284
  3678  007378                     u1900:
  3679  007378  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  3680  00737A                     l2284:
  3681  00737A  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  3682  00737E  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  3683  007382  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  3684  007386  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  3685  00738A                     l834:
  3686  00738A  0012               	return		;funcret
  3687  00738C                     __end_of___xxtofl:
  3688                           	opt callstack 0
  3689                           
  3690 ;; *************** function ___fltol *****************
  3691 ;; Defined at:
  3692 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  f1              4   39[COMRAM] unsigned char 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;  exp1            1   48[COMRAM] unsigned char 
  3697 ;;  sign1           1   47[COMRAM] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  4   39[COMRAM] long 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2, status,0
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3707 ;;      Params:         4       0       0       0       0       0       0
  3708 ;;      Locals:         2       0       0       0       0       0       0
  3709 ;;      Temps:          4       0       0       0       0       0       0
  3710 ;;      Totals:        10       0       0       0       0       0       0
  3711 ;;Total ram usage:       10 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_main
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text17
  3721  0070D2                     __ptext17:
  3722                           	opt callstack 0
  3723  0070D2                     ___fltol:
  3724                           	opt callstack 30
  3725  0070D2  342A               	rlcf	(___fltol@f1+2)^0,w,c
  3726  0070D4  342B               	rlcf	(___fltol@f1+3)^0,w,c
  3727  0070D6  6E31               	movwf	___fltol@exp1^0,c
  3728  0070D8  5031               	movf	___fltol@exp1^0,w,c
  3729  0070DA  A4D8               	btfss	status,2,c
  3730  0070DC  EF72  F038         	goto	u1741
  3731  0070E0  EF74  F038         	goto	u1740
  3732  0070E4                     u1741:
  3733  0070E4  EF7E  F038         	goto	l2204
  3734  0070E8                     u1740:
  3735  0070E8                     l2200:
  3736  0070E8  0E00               	movlw	0
  3737  0070EA  6E28               	movwf	?___fltol^0,c
  3738  0070EC  0E00               	movlw	0
  3739  0070EE  6E29               	movwf	(?___fltol+1)^0,c
  3740  0070F0  0E00               	movlw	0
  3741  0070F2  6E2A               	movwf	(?___fltol+2)^0,c
  3742  0070F4  0E00               	movlw	0
  3743  0070F6  6E2B               	movwf	(?___fltol+3)^0,c
  3744  0070F8  EFEB  F038         	goto	l473
  3745  0070FC                     l2204:
  3746  0070FC  C028  F02C         	movff	___fltol@f1,??___fltol
  3747  007100  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  3748  007104  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  3749  007108  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  3750  00710C  0E20               	movlw	32
  3751  00710E  EF8E  F038         	goto	u1750
  3752  007112                     u1755:
  3753  007112  90D8               	bcf	status,0,c
  3754  007114  322F               	rrcf	(??___fltol+3)^0,f,c
  3755  007116  322E               	rrcf	(??___fltol+2)^0,f,c
  3756  007118  322D               	rrcf	(??___fltol+1)^0,f,c
  3757  00711A  322C               	rrcf	??___fltol^0,f,c
  3758  00711C                     u1750:
  3759  00711C  2EE8               	decfsz	wreg,f,c
  3760  00711E  EF89  F038         	goto	u1755
  3761  007122  502C               	movf	??___fltol^0,w,c
  3762  007124  6E30               	movwf	___fltol@sign1^0,c
  3763  007126  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  3764  007128  0EFF               	movlw	255
  3765  00712A  1628               	andwf	___fltol@f1^0,f,c
  3766  00712C  0EFF               	movlw	255
  3767  00712E  1629               	andwf	(___fltol@f1+1)^0,f,c
  3768  007130  0EFF               	movlw	255
  3769  007132  162A               	andwf	(___fltol@f1+2)^0,f,c
  3770  007134  0E00               	movlw	0
  3771  007136  162B               	andwf	(___fltol@f1+3)^0,f,c
  3772  007138  0E96               	movlw	150
  3773  00713A  5E31               	subwf	___fltol@exp1^0,f,c
  3774  00713C  BE31               	btfsc	___fltol@exp1^0,7,c
  3775  00713E  EFA5  F038         	goto	u1760
  3776  007142  EFA3  F038         	goto	u1761
  3777  007146                     u1761:
  3778  007146  EFBB  F038         	goto	l2224
  3779  00714A                     u1760:
  3780  00714A  5031               	movf	___fltol@exp1^0,w,c
  3781  00714C  0A80               	xorlw	128
  3782  00714E  0F97               	addlw	151
  3783  007150  B0D8               	btfsc	status,0,c
  3784  007152  EFAD  F038         	goto	u1771
  3785  007156  EFAF  F038         	goto	u1770
  3786  00715A                     u1771:
  3787  00715A  EFB1  F038         	goto	l2220
  3788  00715E                     u1770:
  3789  00715E  EF74  F038         	goto	l2200
  3790  007162                     l2220:
  3791  007162  90D8               	bcf	status,0,c
  3792  007164  322B               	rrcf	(___fltol@f1+3)^0,f,c
  3793  007166  322A               	rrcf	(___fltol@f1+2)^0,f,c
  3794  007168  3229               	rrcf	(___fltol@f1+1)^0,f,c
  3795  00716A  3228               	rrcf	___fltol@f1^0,f,c
  3796  00716C  3E31               	incfsz	___fltol@exp1^0,f,c
  3797  00716E  EFB1  F038         	goto	l2220
  3798  007172  EFD3  F038         	goto	l2234
  3799  007176                     l2224:
  3800  007176  0E1F               	movlw	31
  3801  007178  6431               	cpfsgt	___fltol@exp1^0,c
  3802  00717A  EFC1  F038         	goto	u1781
  3803  00717E  EFC3  F038         	goto	u1780
  3804  007182                     u1781:
  3805  007182  EFCB  F038         	goto	l2232
  3806  007186                     u1780:
  3807  007186  EF74  F038         	goto	l2200
  3808  00718A                     l2230:
  3809  00718A  90D8               	bcf	status,0,c
  3810  00718C  3628               	rlcf	___fltol@f1^0,f,c
  3811  00718E  3629               	rlcf	(___fltol@f1+1)^0,f,c
  3812  007190  362A               	rlcf	(___fltol@f1+2)^0,f,c
  3813  007192  362B               	rlcf	(___fltol@f1+3)^0,f,c
  3814  007194  0631               	decf	___fltol@exp1^0,f,c
  3815  007196                     l2232:
  3816  007196  5031               	movf	___fltol@exp1^0,w,c
  3817  007198  A4D8               	btfss	status,2,c
  3818  00719A  EFD1  F038         	goto	u1791
  3819  00719E  EFD3  F038         	goto	u1790
  3820  0071A2                     u1791:
  3821  0071A2  EFC5  F038         	goto	l2230
  3822  0071A6                     u1790:
  3823  0071A6                     l2234:
  3824  0071A6  5030               	movf	___fltol@sign1^0,w,c
  3825  0071A8  B4D8               	btfsc	status,2,c
  3826  0071AA  EFD9  F038         	goto	u1801
  3827  0071AE  EFDB  F038         	goto	u1800
  3828  0071B2                     u1801:
  3829  0071B2  EFE3  F038         	goto	l2238
  3830  0071B6                     u1800:
  3831  0071B6  1E2B               	comf	(___fltol@f1+3)^0,f,c
  3832  0071B8  1E2A               	comf	(___fltol@f1+2)^0,f,c
  3833  0071BA  1E29               	comf	(___fltol@f1+1)^0,f,c
  3834  0071BC  6C28               	negf	___fltol@f1^0,c
  3835  0071BE  0E00               	movlw	0
  3836  0071C0  2229               	addwfc	(___fltol@f1+1)^0,f,c
  3837  0071C2  222A               	addwfc	(___fltol@f1+2)^0,f,c
  3838  0071C4  222B               	addwfc	(___fltol@f1+3)^0,f,c
  3839  0071C6                     l2238:
  3840  0071C6  C028  F028         	movff	___fltol@f1,?___fltol
  3841  0071CA  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  3842  0071CE  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  3843  0071D2  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  3844  0071D6                     l473:
  3845  0071D6  0012               	return		;funcret
  3846  0071D8                     __end_of___fltol:
  3847                           	opt callstack 0
  3848                           
  3849 ;; *************** function ___flmul *****************
  3850 ;; Defined at:
  3851 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;  b               4   14[COMRAM] long 
  3854 ;;  a               4   18[COMRAM] long 
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  prod            4   33[COMRAM] struct .
  3857 ;;  grs             4   27[COMRAM] unsigned long 
  3858 ;;  temp            2   37[COMRAM] struct .
  3859 ;;  bexp            1   32[COMRAM] unsigned char 
  3860 ;;  aexp            1   31[COMRAM] unsigned char 
  3861 ;;  sign            1   26[COMRAM] unsigned char 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  4   14[COMRAM] unsigned char 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, prodl, prodh
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3871 ;;      Params:         8       0       0       0       0       0       0
  3872 ;;      Locals:        13       0       0       0       0       0       0
  3873 ;;      Temps:          4       0       0       0       0       0       0
  3874 ;;      Totals:        25       0       0       0       0       0       0
  3875 ;;Total ram usage:       25 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; This function calls:
  3878 ;;		Nothing
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           	psect	text18
  3885  007A70                     __ptext18:
  3886                           	opt callstack 0
  3887  007A70                     ___flmul:
  3888                           	opt callstack 30
  3889  007A70  5012               	movf	(___flmul@b+3)^0,w,c
  3890  007A72  0B80               	andlw	128
  3891  007A74  6E1B               	movwf	___flmul@sign^0,c
  3892  007A76  5012               	movf	(___flmul@b+3)^0,w,c
  3893  007A78  2412               	addwf	(___flmul@b+3)^0,w,c
  3894  007A7A  6E21               	movwf	___flmul@bexp^0,c
  3895  007A7C  AE11               	btfss	(___flmul@b+2)^0,7,c
  3896  007A7E  EF43  F03D         	goto	u1551
  3897  007A82  EF45  F03D         	goto	u1550
  3898  007A86                     u1551:
  3899  007A86  EF46  F03D         	goto	l2074
  3900  007A8A                     u1550:
  3901  007A8A  8021               	bsf	___flmul@bexp^0,0,c
  3902  007A8C                     l2074:
  3903  007A8C  5021               	movf	___flmul@bexp^0,w,c
  3904  007A8E  B4D8               	btfsc	status,2,c
  3905  007A90  EF4C  F03D         	goto	u1561
  3906  007A94  EF4E  F03D         	goto	u1560
  3907  007A98                     u1561:
  3908  007A98  EF61  F03D         	goto	l2082
  3909  007A9C                     u1560:
  3910  007A9C  2821               	incf	___flmul@bexp^0,w,c
  3911  007A9E  A4D8               	btfss	status,2,c
  3912  007AA0  EF54  F03D         	goto	u1571
  3913  007AA4  EF56  F03D         	goto	u1570
  3914  007AA8                     u1571:
  3915  007AA8  EF5E  F03D         	goto	l2080
  3916  007AAC                     u1570:
  3917  007AAC  0E00               	movlw	0
  3918  007AAE  6E0F               	movwf	___flmul@b^0,c
  3919  007AB0  0E00               	movlw	0
  3920  007AB2  6E10               	movwf	(___flmul@b+1)^0,c
  3921  007AB4  0E00               	movlw	0
  3922  007AB6  6E11               	movwf	(___flmul@b+2)^0,c
  3923  007AB8  0E00               	movlw	0
  3924  007ABA  6E12               	movwf	(___flmul@b+3)^0,c
  3925  007ABC                     l2080:
  3926  007ABC  8E11               	bsf	(___flmul@b+2)^0,7,c
  3927  007ABE  EF69  F03D         	goto	l2084
  3928  007AC2                     l2082:
  3929  007AC2  0E00               	movlw	0
  3930  007AC4  6E0F               	movwf	___flmul@b^0,c
  3931  007AC6  0E00               	movlw	0
  3932  007AC8  6E10               	movwf	(___flmul@b+1)^0,c
  3933  007ACA  0E00               	movlw	0
  3934  007ACC  6E11               	movwf	(___flmul@b+2)^0,c
  3935  007ACE  0E00               	movlw	0
  3936  007AD0  6E12               	movwf	(___flmul@b+3)^0,c
  3937  007AD2                     l2084:
  3938  007AD2  5016               	movf	(___flmul@a+3)^0,w,c
  3939  007AD4  0B80               	andlw	128
  3940  007AD6  1A1B               	xorwf	___flmul@sign^0,f,c
  3941  007AD8  5016               	movf	(___flmul@a+3)^0,w,c
  3942  007ADA  2416               	addwf	(___flmul@a+3)^0,w,c
  3943  007ADC  6E20               	movwf	___flmul@aexp^0,c
  3944  007ADE  AE15               	btfss	(___flmul@a+2)^0,7,c
  3945  007AE0  EF74  F03D         	goto	u1581
  3946  007AE4  EF76  F03D         	goto	u1580
  3947  007AE8                     u1581:
  3948  007AE8  EF77  F03D         	goto	l2092
  3949  007AEC                     u1580:
  3950  007AEC  8020               	bsf	___flmul@aexp^0,0,c
  3951  007AEE                     l2092:
  3952  007AEE  5020               	movf	___flmul@aexp^0,w,c
  3953  007AF0  B4D8               	btfsc	status,2,c
  3954  007AF2  EF7D  F03D         	goto	u1591
  3955  007AF6  EF7F  F03D         	goto	u1590
  3956  007AFA                     u1591:
  3957  007AFA  EF92  F03D         	goto	l2100
  3958  007AFE                     u1590:
  3959  007AFE  2820               	incf	___flmul@aexp^0,w,c
  3960  007B00  A4D8               	btfss	status,2,c
  3961  007B02  EF85  F03D         	goto	u1601
  3962  007B06  EF87  F03D         	goto	u1600
  3963  007B0A                     u1601:
  3964  007B0A  EF8F  F03D         	goto	l2098
  3965  007B0E                     u1600:
  3966  007B0E  0E00               	movlw	0
  3967  007B10  6E13               	movwf	___flmul@a^0,c
  3968  007B12  0E00               	movlw	0
  3969  007B14  6E14               	movwf	(___flmul@a+1)^0,c
  3970  007B16  0E00               	movlw	0
  3971  007B18  6E15               	movwf	(___flmul@a+2)^0,c
  3972  007B1A  0E00               	movlw	0
  3973  007B1C  6E16               	movwf	(___flmul@a+3)^0,c
  3974  007B1E                     l2098:
  3975  007B1E  8E15               	bsf	(___flmul@a+2)^0,7,c
  3976  007B20  EF9A  F03D         	goto	l790
  3977  007B24                     l2100:
  3978  007B24  0E00               	movlw	0
  3979  007B26  6E13               	movwf	___flmul@a^0,c
  3980  007B28  0E00               	movlw	0
  3981  007B2A  6E14               	movwf	(___flmul@a+1)^0,c
  3982  007B2C  0E00               	movlw	0
  3983  007B2E  6E15               	movwf	(___flmul@a+2)^0,c
  3984  007B30  0E00               	movlw	0
  3985  007B32  6E16               	movwf	(___flmul@a+3)^0,c
  3986  007B34                     l790:
  3987  007B34  5020               	movf	___flmul@aexp^0,w,c
  3988  007B36  B4D8               	btfsc	status,2,c
  3989  007B38  EFA0  F03D         	goto	u1611
  3990  007B3C  EFA2  F03D         	goto	u1610
  3991  007B40                     u1611:
  3992  007B40  EFAA  F03D         	goto	l2104
  3993  007B44                     u1610:
  3994  007B44  5021               	movf	___flmul@bexp^0,w,c
  3995  007B46  A4D8               	btfss	status,2,c
  3996  007B48  EFA8  F03D         	goto	u1621
  3997  007B4C  EFAA  F03D         	goto	u1620
  3998  007B50                     u1621:
  3999  007B50  EFB4  F03D         	goto	l2108
  4000  007B54                     u1620:
  4001  007B54                     l2104:
  4002  007B54  0E00               	movlw	0
  4003  007B56  6E0F               	movwf	?___flmul^0,c
  4004  007B58  0E00               	movlw	0
  4005  007B5A  6E10               	movwf	(?___flmul+1)^0,c
  4006  007B5C  0E00               	movlw	0
  4007  007B5E  6E11               	movwf	(?___flmul+2)^0,c
  4008  007B60  0E00               	movlw	0
  4009  007B62  6E12               	movwf	(?___flmul+3)^0,c
  4010  007B64  EF4C  F03F         	goto	l794
  4011  007B68                     l2108:
  4012  007B68  5015               	movf	(___flmul@a+2)^0,w,c
  4013  007B6A  020F               	mulwf	___flmul@b^0,c
  4014  007B6C  CFF3 F026          	movff	prodl,___flmul@temp
  4015  007B70  CFF4 F027          	movff	prodh,___flmul@temp+1
  4016  007B74  5026               	movf	___flmul@temp^0,w,c
  4017  007B76  6E1C               	movwf	___flmul@grs^0,c
  4018  007B78  6A1D               	clrf	(___flmul@grs+1)^0,c
  4019  007B7A  6A1E               	clrf	(___flmul@grs+2)^0,c
  4020  007B7C  6A1F               	clrf	(___flmul@grs+3)^0,c
  4021  007B7E  5027               	movf	(___flmul@temp+1)^0,w,c
  4022  007B80  6E22               	movwf	___flmul@prod^0,c
  4023  007B82  6A23               	clrf	(___flmul@prod+1)^0,c
  4024  007B84  6A24               	clrf	(___flmul@prod+2)^0,c
  4025  007B86  6A25               	clrf	(___flmul@prod+3)^0,c
  4026  007B88  5014               	movf	(___flmul@a+1)^0,w,c
  4027  007B8A  0210               	mulwf	(___flmul@b+1)^0,c
  4028  007B8C  CFF3 F026          	movff	prodl,___flmul@temp
  4029  007B90  CFF4 F027          	movff	prodh,___flmul@temp+1
  4030  007B94  5026               	movf	___flmul@temp^0,w,c
  4031  007B96  261C               	addwf	___flmul@grs^0,f,c
  4032  007B98  0E00               	movlw	0
  4033  007B9A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4034  007B9C  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4035  007B9E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4036  007BA0  5027               	movf	(___flmul@temp+1)^0,w,c
  4037  007BA2  2622               	addwf	___flmul@prod^0,f,c
  4038  007BA4  0E00               	movlw	0
  4039  007BA6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4040  007BA8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4041  007BAA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4042  007BAC  5013               	movf	___flmul@a^0,w,c
  4043  007BAE  0211               	mulwf	(___flmul@b+2)^0,c
  4044  007BB0  CFF3 F026          	movff	prodl,___flmul@temp
  4045  007BB4  CFF4 F027          	movff	prodh,___flmul@temp+1
  4046  007BB8  5026               	movf	___flmul@temp^0,w,c
  4047  007BBA  261C               	addwf	___flmul@grs^0,f,c
  4048  007BBC  0E00               	movlw	0
  4049  007BBE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4050  007BC0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4051  007BC2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4052  007BC4  5027               	movf	(___flmul@temp+1)^0,w,c
  4053  007BC6  2622               	addwf	___flmul@prod^0,f,c
  4054  007BC8  0E00               	movlw	0
  4055  007BCA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4056  007BCC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4057  007BCE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4058  007BD0  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4059  007BD4  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4060  007BD8  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4061  007BDC  6A1C               	clrf	___flmul@grs^0,c
  4062  007BDE  5013               	movf	___flmul@a^0,w,c
  4063  007BE0  0210               	mulwf	(___flmul@b+1)^0,c
  4064  007BE2  CFF3 F026          	movff	prodl,___flmul@temp
  4065  007BE6  CFF4 F027          	movff	prodh,___flmul@temp+1
  4066  007BEA  5026               	movf	___flmul@temp^0,w,c
  4067  007BEC  261C               	addwf	___flmul@grs^0,f,c
  4068  007BEE  5027               	movf	(___flmul@temp+1)^0,w,c
  4069  007BF0  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4070  007BF2  0E00               	movlw	0
  4071  007BF4  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4072  007BF6  0E00               	movlw	0
  4073  007BF8  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4074  007BFA  5014               	movf	(___flmul@a+1)^0,w,c
  4075  007BFC  020F               	mulwf	___flmul@b^0,c
  4076  007BFE  CFF3 F026          	movff	prodl,___flmul@temp
  4077  007C02  CFF4 F027          	movff	prodh,___flmul@temp+1
  4078  007C06  5026               	movf	___flmul@temp^0,w,c
  4079  007C08  261C               	addwf	___flmul@grs^0,f,c
  4080  007C0A  5027               	movf	(___flmul@temp+1)^0,w,c
  4081  007C0C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4082  007C0E  0E00               	movlw	0
  4083  007C10  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4084  007C12  0E00               	movlw	0
  4085  007C14  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4086  007C16  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4087  007C1A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4088  007C1E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4089  007C22  6A1C               	clrf	___flmul@grs^0,c
  4090  007C24  5013               	movf	___flmul@a^0,w,c
  4091  007C26  020F               	mulwf	___flmul@b^0,c
  4092  007C28  CFF3 F026          	movff	prodl,___flmul@temp
  4093  007C2C  CFF4 F027          	movff	prodh,___flmul@temp+1
  4094  007C30  5026               	movf	___flmul@temp^0,w,c
  4095  007C32  261C               	addwf	___flmul@grs^0,f,c
  4096  007C34  5027               	movf	(___flmul@temp+1)^0,w,c
  4097  007C36  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4098  007C38  0E00               	movlw	0
  4099  007C3A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4100  007C3C  0E00               	movlw	0
  4101  007C3E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4102  007C40  5015               	movf	(___flmul@a+2)^0,w,c
  4103  007C42  0210               	mulwf	(___flmul@b+1)^0,c
  4104  007C44  CFF3 F026          	movff	prodl,___flmul@temp
  4105  007C48  CFF4 F027          	movff	prodh,___flmul@temp+1
  4106  007C4C  5026               	movf	___flmul@temp^0,w,c
  4107  007C4E  2622               	addwf	___flmul@prod^0,f,c
  4108  007C50  5027               	movf	(___flmul@temp+1)^0,w,c
  4109  007C52  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4110  007C54  0E00               	movlw	0
  4111  007C56  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4112  007C58  0E00               	movlw	0
  4113  007C5A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4114  007C5C  5014               	movf	(___flmul@a+1)^0,w,c
  4115  007C5E  0211               	mulwf	(___flmul@b+2)^0,c
  4116  007C60  CFF3 F026          	movff	prodl,___flmul@temp
  4117  007C64  CFF4 F027          	movff	prodh,___flmul@temp+1
  4118  007C68  5026               	movf	___flmul@temp^0,w,c
  4119  007C6A  2622               	addwf	___flmul@prod^0,f,c
  4120  007C6C  5027               	movf	(___flmul@temp+1)^0,w,c
  4121  007C6E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4122  007C70  0E00               	movlw	0
  4123  007C72  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4124  007C74  0E00               	movlw	0
  4125  007C76  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4126  007C78  5015               	movf	(___flmul@a+2)^0,w,c
  4127  007C7A  0211               	mulwf	(___flmul@b+2)^0,c
  4128  007C7C  CFF3 F026          	movff	prodl,___flmul@temp
  4129  007C80  CFF4 F027          	movff	prodh,___flmul@temp+1
  4130  007C84  5026               	movf	___flmul@temp^0,w,c
  4131  007C86  6E17               	movwf	??___flmul^0,c
  4132  007C88  5027               	movf	(___flmul@temp+1)^0,w,c
  4133  007C8A  6E18               	movwf	(??___flmul+1)^0,c
  4134  007C8C  6A19               	clrf	(??___flmul+2)^0,c
  4135  007C8E  6A1A               	clrf	(??___flmul+3)^0,c
  4136  007C90  C019  F01A         	movff	??___flmul+2,??___flmul+3
  4137  007C94  C018  F019         	movff	??___flmul+1,??___flmul+2
  4138  007C98  C017  F018         	movff	??___flmul,??___flmul+1
  4139  007C9C  6A17               	clrf	??___flmul^0,c
  4140  007C9E  5017               	movf	??___flmul^0,w,c
  4141  007CA0  2622               	addwf	___flmul@prod^0,f,c
  4142  007CA2  5018               	movf	(??___flmul+1)^0,w,c
  4143  007CA4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4144  007CA6  5019               	movf	(??___flmul+2)^0,w,c
  4145  007CA8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4146  007CAA  501A               	movf	(??___flmul+3)^0,w,c
  4147  007CAC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4148  007CAE  C01C  F017         	movff	___flmul@grs,??___flmul
  4149  007CB2  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  4150  007CB6  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  4151  007CBA  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  4152  007CBE  0E19               	movlw	25
  4153  007CC0  EF67  F03E         	goto	u1630
  4154  007CC4                     u1635:
  4155  007CC4  90D8               	bcf	status,0,c
  4156  007CC6  321A               	rrcf	(??___flmul+3)^0,f,c
  4157  007CC8  3219               	rrcf	(??___flmul+2)^0,f,c
  4158  007CCA  3218               	rrcf	(??___flmul+1)^0,f,c
  4159  007CCC  3217               	rrcf	??___flmul^0,f,c
  4160  007CCE                     u1630:
  4161  007CCE  2EE8               	decfsz	wreg,f,c
  4162  007CD0  EF62  F03E         	goto	u1635
  4163  007CD4  5017               	movf	??___flmul^0,w,c
  4164  007CD6  2622               	addwf	___flmul@prod^0,f,c
  4165  007CD8  5018               	movf	(??___flmul+1)^0,w,c
  4166  007CDA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4167  007CDC  5019               	movf	(??___flmul+2)^0,w,c
  4168  007CDE  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4169  007CE0  501A               	movf	(??___flmul+3)^0,w,c
  4170  007CE2  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4171  007CE4  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4172  007CE8  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4173  007CEC  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4174  007CF0  6A1C               	clrf	___flmul@grs^0,c
  4175  007CF2  5020               	movf	___flmul@aexp^0,w,c
  4176  007CF4  C021  F017         	movff	___flmul@bexp,??___flmul
  4177  007CF8  6A18               	clrf	(??___flmul+1)^0,c
  4178  007CFA  2617               	addwf	??___flmul^0,f,c
  4179  007CFC  0E00               	movlw	0
  4180  007CFE  2218               	addwfc	(??___flmul+1)^0,f,c
  4181  007D00  0E82               	movlw	130
  4182  007D02  2417               	addwf	??___flmul^0,w,c
  4183  007D04  6E26               	movwf	___flmul@temp^0,c
  4184  007D06  0EFF               	movlw	255
  4185  007D08  2018               	addwfc	(??___flmul+1)^0,w,c
  4186  007D0A  6E27               	movwf	(___flmul@temp+1)^0,c
  4187  007D0C  EF9D  F03E         	goto	l2156
  4188  007D10                     l2150:
  4189  007D10  90D8               	bcf	status,0,c
  4190  007D12  3622               	rlcf	___flmul@prod^0,f,c
  4191  007D14  3623               	rlcf	(___flmul@prod+1)^0,f,c
  4192  007D16  3624               	rlcf	(___flmul@prod+2)^0,f,c
  4193  007D18  3625               	rlcf	(___flmul@prod+3)^0,f,c
  4194  007D1A  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4195  007D1C  EF92  F03E         	goto	u1641
  4196  007D20  EF94  F03E         	goto	u1640
  4197  007D24                     u1641:
  4198  007D24  EF95  F03E         	goto	l797
  4199  007D28                     u1640:
  4200  007D28  8022               	bsf	___flmul@prod^0,0,c
  4201  007D2A                     l797:
  4202  007D2A  90D8               	bcf	status,0,c
  4203  007D2C  361C               	rlcf	___flmul@grs^0,f,c
  4204  007D2E  361D               	rlcf	(___flmul@grs+1)^0,f,c
  4205  007D30  361E               	rlcf	(___flmul@grs+2)^0,f,c
  4206  007D32  361F               	rlcf	(___flmul@grs+3)^0,f,c
  4207  007D34  0626               	decf	___flmul@temp^0,f,c
  4208  007D36  A0D8               	btfss	status,0,c
  4209  007D38  0627               	decf	(___flmul@temp+1)^0,f,c
  4210  007D3A                     l2156:
  4211  007D3A  AE24               	btfss	(___flmul@prod+2)^0,7,c
  4212  007D3C  EFA2  F03E         	goto	u1651
  4213  007D40  EFA4  F03E         	goto	u1650
  4214  007D44                     u1651:
  4215  007D44  EF88  F03E         	goto	l2150
  4216  007D48                     u1650:
  4217  007D48  0E00               	movlw	0
  4218  007D4A  6E20               	movwf	___flmul@aexp^0,c
  4219  007D4C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4220  007D4E  EFAB  F03E         	goto	u1661
  4221  007D52  EFAD  F03E         	goto	u1660
  4222  007D56                     u1661:
  4223  007D56  EFD1  F03E         	goto	l799
  4224  007D5A                     u1660:
  4225  007D5A  0EFF               	movlw	255
  4226  007D5C  141C               	andwf	___flmul@grs^0,w,c
  4227  007D5E  6E17               	movwf	??___flmul^0,c
  4228  007D60  0EFF               	movlw	255
  4229  007D62  141D               	andwf	(___flmul@grs+1)^0,w,c
  4230  007D64  6E18               	movwf	(??___flmul+1)^0,c
  4231  007D66  0EFF               	movlw	255
  4232  007D68  141E               	andwf	(___flmul@grs+2)^0,w,c
  4233  007D6A  6E19               	movwf	(??___flmul+2)^0,c
  4234  007D6C  0E7F               	movlw	127
  4235  007D6E  141F               	andwf	(___flmul@grs+3)^0,w,c
  4236  007D70  6E1A               	movwf	(??___flmul+3)^0,c
  4237  007D72  5017               	movf	??___flmul^0,w,c
  4238  007D74  1018               	iorwf	(??___flmul+1)^0,w,c
  4239  007D76  1019               	iorwf	(??___flmul+2)^0,w,c
  4240  007D78  101A               	iorwf	(??___flmul+3)^0,w,c
  4241  007D7A  B4D8               	btfsc	status,2,c
  4242  007D7C  EFC2  F03E         	goto	u1671
  4243  007D80  EFC4  F03E         	goto	u1670
  4244  007D84                     u1671:
  4245  007D84  EFC8  F03E         	goto	l800
  4246  007D88                     u1670:
  4247  007D88                     l2164:
  4248  007D88  0E01               	movlw	1
  4249  007D8A  6E20               	movwf	___flmul@aexp^0,c
  4250  007D8C  EFD1  F03E         	goto	l799
  4251  007D90                     l800:
  4252  007D90  A022               	btfss	___flmul@prod^0,0,c
  4253  007D92  EFCD  F03E         	goto	u1681
  4254  007D96  EFCF  F03E         	goto	u1680
  4255  007D9A                     u1681:
  4256  007D9A  EFD1  F03E         	goto	l799
  4257  007D9E                     u1680:
  4258  007D9E  EFC4  F03E         	goto	l2164
  4259  007DA2                     l799:
  4260  007DA2  5020               	movf	___flmul@aexp^0,w,c
  4261  007DA4  B4D8               	btfsc	status,2,c
  4262  007DA6  EFD7  F03E         	goto	u1691
  4263  007DAA  EFD9  F03E         	goto	u1690
  4264  007DAE                     u1691:
  4265  007DAE  EFFD  F03E         	goto	l2176
  4266  007DB2                     u1690:
  4267  007DB2  0E01               	movlw	1
  4268  007DB4  2622               	addwf	___flmul@prod^0,f,c
  4269  007DB6  0E00               	movlw	0
  4270  007DB8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4271  007DBA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4272  007DBC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4273  007DBE  A025               	btfss	(___flmul@prod+3)^0,0,c
  4274  007DC0  EFE4  F03E         	goto	u1701
  4275  007DC4  EFE6  F03E         	goto	u1700
  4276  007DC8                     u1701:
  4277  007DC8  EFFD  F03E         	goto	l2176
  4278  007DCC                     u1700:
  4279  007DCC  C022  F017         	movff	___flmul@prod,??___flmul
  4280  007DD0  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4281  007DD4  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4282  007DD8  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4283  007DDC  341A               	rlcf	(??___flmul+3)^0,w,c
  4284  007DDE  321A               	rrcf	(??___flmul+3)^0,f,c
  4285  007DE0  3219               	rrcf	(??___flmul+2)^0,f,c
  4286  007DE2  3218               	rrcf	(??___flmul+1)^0,f,c
  4287  007DE4  3217               	rrcf	??___flmul^0,f,c
  4288  007DE6  C017  F022         	movff	??___flmul,___flmul@prod
  4289  007DEA  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4290  007DEE  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4291  007DF2  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4292  007DF6  4A26               	infsnz	___flmul@temp^0,f,c
  4293  007DF8  2A27               	incf	(___flmul@temp+1)^0,f,c
  4294  007DFA                     l2176:
  4295  007DFA  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4296  007DFC  EF08  F03F         	goto	u1711
  4297  007E00  5027               	movf	(___flmul@temp+1)^0,w,c
  4298  007E02  E108               	bnz	u1710
  4299  007E04  2826               	incf	___flmul@temp^0,w,c
  4300  007E06  A0D8               	btfss	status,0,c
  4301  007E08  EF08  F03F         	goto	u1711
  4302  007E0C  EF0A  F03F         	goto	u1710
  4303  007E10                     u1711:
  4304  007E10  EF14  F03F         	goto	l2180
  4305  007E14                     u1710:
  4306  007E14  0E00               	movlw	0
  4307  007E16  6E22               	movwf	___flmul@prod^0,c
  4308  007E18  0E00               	movlw	0
  4309  007E1A  6E23               	movwf	(___flmul@prod+1)^0,c
  4310  007E1C  0E80               	movlw	128
  4311  007E1E  6E24               	movwf	(___flmul@prod+2)^0,c
  4312  007E20  0E7F               	movlw	127
  4313  007E22  6E25               	movwf	(___flmul@prod+3)^0,c
  4314  007E24  EF42  F03F         	goto	l2192
  4315  007E28                     l2180:
  4316  007E28  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4317  007E2A  EF21  F03F         	goto	u1720
  4318  007E2E  5027               	movf	(___flmul@temp+1)^0,w,c
  4319  007E30  E106               	bnz	u1721
  4320  007E32  0426               	decf	___flmul@temp^0,w,c
  4321  007E34  B0D8               	btfsc	status,0,c
  4322  007E36  EF1F  F03F         	goto	u1721
  4323  007E3A  EF21  F03F         	goto	u1720
  4324  007E3E                     u1721:
  4325  007E3E  EF2D  F03F         	goto	l807
  4326  007E42                     u1720:
  4327  007E42  0E00               	movlw	0
  4328  007E44  6E22               	movwf	___flmul@prod^0,c
  4329  007E46  0E00               	movlw	0
  4330  007E48  6E23               	movwf	(___flmul@prod+1)^0,c
  4331  007E4A  0E00               	movlw	0
  4332  007E4C  6E24               	movwf	(___flmul@prod+2)^0,c
  4333  007E4E  0E00               	movlw	0
  4334  007E50  6E25               	movwf	(___flmul@prod+3)^0,c
  4335  007E52  0E00               	movlw	0
  4336  007E54  6E1B               	movwf	___flmul@sign^0,c
  4337  007E56  EF42  F03F         	goto	l2192
  4338  007E5A                     l807:
  4339  007E5A  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4340  007E5E  0EFF               	movlw	255
  4341  007E60  1622               	andwf	___flmul@prod^0,f,c
  4342  007E62  0EFF               	movlw	255
  4343  007E64  1623               	andwf	(___flmul@prod+1)^0,f,c
  4344  007E66  0E7F               	movlw	127
  4345  007E68  1624               	andwf	(___flmul@prod+2)^0,f,c
  4346  007E6A  0E00               	movlw	0
  4347  007E6C  1625               	andwf	(___flmul@prod+3)^0,f,c
  4348  007E6E  A021               	btfss	___flmul@bexp^0,0,c
  4349  007E70  EF3C  F03F         	goto	u1731
  4350  007E74  EF3E  F03F         	goto	u1730
  4351  007E78                     u1731:
  4352  007E78  EF3F  F03F         	goto	l2190
  4353  007E7C                     u1730:
  4354  007E7C  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4355  007E7E                     l2190:
  4356  007E7E  90D8               	bcf	status,0,c
  4357  007E80  3021               	rrcf	___flmul@bexp^0,w,c
  4358  007E82  6E25               	movwf	(___flmul@prod+3)^0,c
  4359  007E84                     l2192:
  4360  007E84  501B               	movf	___flmul@sign^0,w,c
  4361  007E86  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4362  007E88  C022  F00F         	movff	___flmul@prod,?___flmul
  4363  007E8C  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4364  007E90  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4365  007E94  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4366  007E98                     l794:
  4367  007E98  0012               	return		;funcret
  4368  007E9A                     __end_of___flmul:
  4369                           	opt callstack 0
  4370                           
  4371                           	psect	rparam
  4372  0000                     tosu	equ	0xFFF
  4373                           tosh	equ	0xFFE
  4374                           tosl	equ	0xFFD
  4375                           stkptr	equ	0xFFC
  4376                           pclatu	equ	0xFFB
  4377                           pclath	equ	0xFFA
  4378                           pcl	equ	0xFF9
  4379                           tblptru	equ	0xFF8
  4380                           tblptrh	equ	0xFF7
  4381                           tblptrl	equ	0xFF6
  4382                           tablat	equ	0xFF5
  4383                           prodh	equ	0xFF4
  4384                           prodl	equ	0xFF3
  4385                           indf0	equ	0xFEF
  4386                           postinc0	equ	0xFEE
  4387                           postdec0	equ	0xFED
  4388                           preinc0	equ	0xFEC
  4389                           plusw0	equ	0xFEB
  4390                           fsr0h	equ	0xFEA
  4391                           fsr0l	equ	0xFE9
  4392                           wreg	equ	0xFE8
  4393                           indf1	equ	0xFE7
  4394                           postinc1	equ	0xFE6
  4395                           postdec1	equ	0xFE5
  4396                           preinc1	equ	0xFE4
  4397                           plusw1	equ	0xFE3
  4398                           fsr1h	equ	0xFE2
  4399                           fsr1l	equ	0xFE1
  4400                           bsr	equ	0xFE0
  4401                           indf2	equ	0xFDF
  4402                           postinc2	equ	0xFDE
  4403                           postdec2	equ	0xFDD
  4404                           preinc2	equ	0xFDC
  4405                           plusw2	equ	0xFDB
  4406                           fsr2h	equ	0xFDA
  4407                           fsr2l	equ	0xFD9
  4408                           status	equ	0xFD8


Data Sizes:
    Strings     333
    Constant    22
    Data        76
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     53      79
    BANK0           128    120     120
    BANK1           256      0      50
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> main@frase(BANK0[50]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 50
		 -> main@frase(BANK0[50]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 50
		 -> main@frase(BANK0[50]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 50
		 -> main@frase(BANK0[50]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_10(CODE[2]), STR_8(CODE[17]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[20]), main@tamanhos(BANK0[16]), main@cafes(BANK0[50]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_10(CODE[2]), STR_8(CODE[17]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_5(CODE[20]), main@tamanhos(BANK0[16]), main@cafes(BANK0[50]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[2]), main@tamanhos(BANK0[16]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 50
		 -> main@frase(BANK0[50]), 

    scrollDisplay@linha2	PTR unsigned char  size(2) Largest target is 32
		 -> STR_15(CODE[32]), STR_9(CODE[31]), STR_4(CODE[31]), 

    scrollDisplay@linha1	PTR unsigned char  size(2) Largest target is 50
		 -> STR_14(CODE[21]), main@frase(BANK0[50]), STR_3(CODE[28]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> main@frase(BANK0[50]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 50
		 -> main@frase(BANK0[50]), 

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_17(CODE[17]), STR_16(CODE[14]), STR_15(CODE[32]), STR_14(CODE[21]), 
		 -> STR_13(CODE[18]), STR_12(CODE[14]), STR_11(CODE[17]), STR_9(CODE[31]), 
		 -> main@frase(BANK0[50]), STR_4(CODE[31]), STR_3(CODE[28]), STR_2(CODE[17]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _tempoPreparo->___awmod
    ___awmod->___awdiv
    _strcat->_strcpy
    _strcpy->_strlen
    _scrollDisplay->_lcd_str
    _opcaoDesejada->_tc_tecla
    _tc_tecla->_atraso_ms
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_init->_lcd_cmd
    _lcd_cmd->_atraso_ms
    ___fltol->___flmul
    ___flmul->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               125   125      0   28244
                                             49 COMRAM     4     4      0
                                              0 BANK0    120   120      0
                            ___flmul
                            ___fltol
                           ___xxtofl
                          _atraso_ms
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                      _opcaoDesejada
                      _scrollDisplay
                             _strcat
                             _strcpy
                       _tempoPreparo
 ---------------------------------------------------------------------------------
 (1) _tempoPreparo                                         9     7      2    2125
                                             14 COMRAM     9     7      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     0      4    1550
                                             14 COMRAM     4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4    1008
                                              4 COMRAM    10     6      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _scrollDisplay                                        6     2      4    6094
                                             12 COMRAM     6     2      4
                          _atraso_ms
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _opcaoDesejada                                        2     2      0    6095
                                             13 COMRAM     2     2      0
                            _lcd_cmd
                            _lcd_str
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (2) _tc_tecla                                             7     5      2    1946
                                              6 COMRAM     7     5      2
                          _atraso_ms
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              5     3      2    2400
                                              7 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (3) _lcd_dat                                              1     1      0    1550
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    3056
                          _atraso_ms
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              1     1      0    1550
                                              6 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (4) _lcd_wr                                               1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _atraso_ms                                            6     4      2    1506
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flmul
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _atraso_ms
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_init
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _opcaoDesejada
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
     _tc_tecla
       _atraso_ms
   _scrollDisplay
     _atraso_ms
     _lcd_cmd
       _atraso_ms
       _lcd_wr
     _lcd_str
       _lcd_dat
         _atraso_ms
         _lcd_wr
   _strcat
     _strcpy
       _strlen (ARG)
     _strlen
   _strcpy
     _strlen (ARG)
   _tempoPreparo
     ___awdiv
     ___awmod
       ___awdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      32       7       19.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     78      78       5       93.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     35      4F       1       62.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F9      15        0.0%
DATA                 0      0      F9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jul 04 18:53:44 2020

                        l5 6AB4                          l8 6B1E                         l11 6B48  
                       l20 6D8E                         l30 6D16                         l14 6C56  
                       l50 7436                         l52 741E                         l45 73F6  
                       l62 749E                         l55 7476                         l47 73E0  
                       l72 7554                         l57 745E               ___awdiv@sign 0006  
              __CFG_OSC$HS 000000                        l138 6FDE                        l147 70D0  
                      l155 75A2                        l420 6E3E                        l173 7776  
                      l407 6F02                        l800 7D90                        l473 71D6  
                      l807 7E5A                        l831 722E                        l834 738A  
                      l860 6CB2                        l845 7322                        l790 7B34  
                      l838 72C6                        l854 6AF4                        l794 7E98  
                      l866 6BB0                        l797 7D2A                        l799 7DA2  
                      u980 6CD4                        u981 6CD0                        u990 6CEC  
                      u991 6CE8  __end_oftempoPreparo@valor 7EA5               ___awmod@sign 000E  
                      wreg 000FE8               ___flmul@aexp 0020               ___flmul@bexp 0021  
    __end_of_opcaoDesejada 6FE0               ___flmul@sign 001B               ___flmul@temp 0026  
             ___flmul@prod 0022               __CFG_LVP$OFF 000000               ___fltol@exp1 0031  
             __CFG_WDT$OFF 000000                       l2000 75D8                       l2010 763A  
                     l2002 75E4                       l2100 7B24                       l2020 7650  
                     l2012 763C                       l2004 75E8                       l2110 7B74  
                     l2102 7B44                       l2030 76A6                       l2022 7666  
                     l2014 763E                       l2006 75FE                       l2120 7BC4  
                     l2112 7B7E                       l2104 7B54                       l2200 70E8  
                     l2040 7708                       l2032 76A8                       l2024 76A0  
                     l2016 7640                       l2008 7638                       l2130 7C06  
                     l2122 7BD0                       l2114 7B94                       l2210 7138  
                     l2050 771C                       l2042 770A                       l2034 76B4  
                     l2026 76A2                       l2018 764C                       l2140 7C68  
                     l2132 7C16                       l2124 7BDE                       l2116 7BA0  
                     l2108 7B68                       l2220 7162                       l2212 713C  
                     l2204 70FC                       l2060 7756                       l2052 7720  
                     l2044 770C                       l2036 76B8                       l2028 76A4  
                     l2300 77B0                       l2150 7D10                       l2142 7C84  
                     l2134 7C30                       l2126 7BEA                       l2118 7BB8  
                     l2070 7A7C                       l2230 718A                       l2222 716C  
                     l2214 714A                       l2206 7126                       l2054 7736  
                     l2046 770E                       l2038 76CE                       l2310 77C4  
                     l2302 77B4                       l2160 7D4C                       l2152 7D1A  
                     l2144 7CAE                       l2136 7C40                       l2128 7BFA  
                     l2080 7ABC                       l2072 7A8A                       l2232 7196  
                     l2224 7176                       l2208 7128                       l2064 776A  
                     l2056 773A                       l2048 7710                       l2320 77E6  
                     l2312 77C8                       l2304 77B8                       l2170 7DBE  
                     l2162 7D5A                       l2154 7D28                       l2146 7CE4  
                     l2138 7C5C                       l2090 7AEC                       l2082 7AC2  
                     l2074 7A8C                       l2234 71A6                       l2250 7254  
                     l2242 71DA                       l2066 7772                       l2058 7750  
                     l2330 7834                       l2322 77F2                       l2314 77CE  
                     l2306 77BC                       l2180 7E28                       l2172 7DCC  
                     l2164 7D88                       l2156 7D3A                       l2148 7CF2  
                     l2092 7AEE                       l2084 7AD2                       l2076 7A9C  
                     l2068 7A70                       l2236 71B6                       l2260 72AE  
                     l2244 71EA                       l1700 6D50                       l2412 78AC  
                     l2340 787A                       l2332 783E                       l2324 77FE  
                     l2316 77D4                       l2308 77C0                       l2190 7E7E  
                     l2182 7E42                       l2174 7DF6                       l2158 7D48  
                     l2094 7AFE                       l2086 7AD8                       l2078 7AAC  
                     l2238 71C6                       l2270 7312                       l2262 72B0  
                     l2254 7268                       l2246 71F8                       l1702 6D52  
                     l2350 78F0                       l2342 788E                       l2334 7852  
                     l2326 7812                       l2318 77E0                       l2184 7E5E  
                     l2192 7E84                       l2168 7DB2                       l2176 7DFA  
                     l2096 7B0E                       l2088 7ADE                       l2280 736A  
                     l2272 7330                       l2264 72BC                       l2256 7270  
                     l2248 723E                       l1640 6AB0                       l1720 73D2  
                     l1704 738C                       l1800 6E92                       l2360 7986  
                     l2352 7924                       l2336 785C                       l2328 7820  
                     l2194 7E88                       l2186 7E6E                       l2178 7E14  
                     l2098 7B1E                       l2282 7378                       l2274 7332  
                     l2266 72F8                       l2258 727C                       l1650 6CD8  
                     l1642 6CB4                       l1714 73A4                       l1706 7398  
                     l1810 6ECC                       l1802 6E9A                       l2370 79C0  
                     l2362 7992                       l2354 7938                       l2338 7870  
                     l2346 7898                       l2290 779C                       l2188 7E7C  
                     l2284 737A                       l2276 7336                       l2268 7304  
                     l1660 6CF6                       l1652 6CDC                       l1644 6CC0  
                     l1740 746C                       l1732 742C                       l1724 73EE  
                     l1716 73B8                       l1708 73A0                       l1820 6EF2  
                     l1812 6ED4                       l1804 6EA2                       l2380 7A38  
                     l2372 79D2                       l2364 7998                       l2356 797A  
                     l2348 78D2                       l2292 77A0                       l2198 70D2  
                     l2278 735A                       l1646 6CC4                       l1670 6B24  
                     l1742 7484                       l1750 74B6                       l1734 7444  
                     l1726 7404                       l1718 73C6                       l1910 708A  
                     l1822 6EFA                       l1814 6ED6                       l1806 6EB0  
                     l1830 6DA2                       l2382 7A3E                       l2374 7A20  
                     l2366 79A4                       l2358 7980                       l2294 77A4  
                     l1656 6CF0                       l1664 6CFC                       l1680 6B46  
                     l1672 6B2A                       l1752 74C8                       l1744 7490  
                     l1736 7450                       l1728 7410                       l1760 74EE  
                     l1920 70A8                       l1904 7058                       l1816 6EDC  
                     l1808 6EB6                       l1840 6DD6                       l1832 6DAA  
                     l2384 7A4A                       l2376 7A26                       l2368 79AE  
                     l2296 77A8                       l2288 7778                       l1666 6D00  
                     l1690 6B0E                       l1682 6AF8                       l1674 6B2C  
                     l1770 7538                       l1762 7504                       l1754 74CA  
                     l1930 6F30                       l1922 70C4                       l1906 706A  
                     l1818 6EE2                       l1850 6E12                       l1842 6DDE  
                     l1834 6DAE                       l1826 6D90                       l2386 7A54  
                     l2378 7A2C                       l2298 77AC                       l1692 6B10  
                     l1684 6AFA                       l1676 6B38                       l1668 6B22  
                     l1772 754A                       l1764 7516                       l1748 74AC  
                     l1756 74DA                       l1940 6F6C                       l1932 6F42  
                     l1924 6F06                       l1916 7092                       l1908 706E  
                     l1780 6C68                       l1852 6E18                       l1844 6DE6  
                     l1836 6DBC                       l1828 6D94                       l1694 6B1C  
                     l1686 6B00                       l1678 6B3A                       l1774 754E  
                     l1766 7526                       l1758 74E6                       l1942 6F7E  
                     l1950 6FB8                       l1934 6F46                       l1926 6F18  
                     l1918 70A4                       l1862 6B7C                       l1790 6E5E  
                     l1782 6E40                       l1846 6DF4                       l1854 6E1E  
                     l1838 6DC4                       l1688 6B02                       l1872 6BFC  
                     l1696 6D18                       l1768 7536                       l1952 6FCA  
                     l1944 6F90                       l1936 6F56                       l1928 6F24  
                     l1880 6FEC                       l1864 6B88                       l1792 6E6C  
                     l1784 6E44                       l1856 6E2E                       l1848 6E0A  
                     l1874 6C00                       l1698 6D20                       l1946 6FA2  
                     l1954 6FDC                       l1938 6F5A                       l1882 6FF8  
                     l1778 6C58                       l1866 6B8C                       l1794 6E74  
                     l1786 6E52                       l1858 6E36                       l1970 7564  
                     l1962 7556                       l1876 6C0C                       l1892 701E  
                     l1884 700A                       l1868 6BA4                       l1796 6E78  
                     l1788 6E5A                       l1980 758A                       l1972 7568  
                     l1964 7558                       l1894 7030                       l1886 7016  
                     l1878 6FE0                       l1958 6AD0                       l1798 6E80  
                     l1990 75AA                       l1982 758C                       l1974 756C  
                     l1966 755C                       l1896 7034                       l1992 75D0  
                     l1984 759E                       l1976 7570                       l1968 7560  
                     l1898 7050                       l1994 75D2                       l1978 7578  
                     l1996 75D4                       l1998 75D6                       STR_1 7FE2  
                     STR_2 7FB2                       STR_3 7F0F                       STR_4 7EF0  
                     STR_5 7F6A                       STR_6 7F2B                       STR_7 7F40  
                     STR_8 7FC3                       STR_9 7ED1                       u1000 6D16  
                     u1001 6D12                       u1010 6D4C                       u1020 6D7E  
                     u1100 7444                       u1101 7440                       u1030 6D8E  
                     u1110 745E                       u1031 6D8A                       u1111 745A  
                     u1200 7536                       u1120 746C                       u1040 73C6  
                     u1017 6D42                       u1201 7532                       u1121 7468  
                     u1041 73C2                       u1210 754A                       u1130 7484  
                     u1050 73E0                       u1027 6D74                       u1211 7546  
                     u1131 7480                       u1051 73DC                       u1140 749E  
                     u1060 73EE                       u1220 6CA0                       u1300 6DA2  
                     u1141 749A                       u1061 73EA                       u1301 6D9E  
                     u1150 74AC                       u1070 7404                       u1230 6CB2  
                     u1310 6DBC                       u1151 74A8                       u1071 7400  
                     u1231 6CAE                       u1311 6DB8                       u1160 74DA  
                     u1080 741E                       u1400 6F18                       u1240 6E52  
                     u1320 6DD6                       u1161 74D6                       u1081 741A  
                     u1401 6F14                       u1241 6E4E                       u1321 6DD2  
                     u1170 7504                       u1090 742C                       u1410 6F6C  
                     u1250 6E6C                       u1330 6DF4                       u1171 7500  
                     u1091 7428                       u1411 6F68                       u1227 6C96  
                     u1251 6E68                       u1331 6DF0                       u1180 7516  
                     u1420 6F7E                       u1260 6E92                       u1340 6E0A  
                     u1500 7666                       u1181 7512                       u1421 6F7A  
                     u1261 6E8E                       u1341 6E06                       u1501 7662  
                     u1190 7526                       u1430 6F90                       u1270 6EB0  
                     u1350 6E2E                       u1510 76CE                       u1191 7522  
                     u1431 6F8C                       u1271 6EAC                       u1351 6E2A  
                     u1511 76CA                       u1600 7B0E                       u1440 6FA2  
                     u1360 6BA4                       u1280 6ECC                       u1520 7736  
                     u1601 7B0A                       u1441 6F9E                       u1361 6BA0  
                     u1281 6EC8                       u1521 7732                       u1610 7B44  
                     u1450 6FB4                       u1370 7050                       u1290 6EF2  
                     u1530 7750                       u1611 7B40                       u1451 6FB0  
                     u1371 704C                       u1291 6EEE                       u1531 774C  
                     u1700 7DCC                       u1620 7B54                       u1460 6FCA  
                     u1380 708A                       u1540 776A                       u1701 7DC8  
                     u1621 7B50                       u1461 6FC6                       u1381 7086  
                     u1541 7766                       u1710 7E14                       u1630 7CCE  
                     u1550 7A8A                       u1470 6FDC                       u1390 70C4  
                     u1711 7E10                       u1551 7A86                       u1471 6FD8  
                     u1391 70C0                       u1720 7E42                       u1640 7D28  
                     u1560 7A9C                       u1800 71B6                       u1480 759E  
                     u1721 7E3E                       u1641 7D24                       u1561 7A98  
                     u1801 71B2                       u1481 759A                       u1730 7E7C  
                     u1650 7D48                       u1570 7AAC                       u1810 71EA  
                     u1490 75FE                       u1731 7E78                       u1651 7D44  
                     u1635 7CC4                       u1571 7AA8                       u1811 71E6  
                     u1491 75FA                       u1660 7D5A                       u1580 7AEC  
                     u1740 70E8                       u1900 7378                       u1820 71F8  
                     u1661 7D56                       u1581 7AE8                       u1741 70E4  
                     u1901 7374                       u1821 71F4                       u1670 7D88  
                     u1590 7AFE                       u1750 711C                       u1830 7254  
                     u1671 7D84                       u1591 7AFA                       u1831 7250  
                     u1911 7782                       u1680 7D9E                       u1760 714A  
                     u1840 72AA                       u1681 7D9A                       u1761 7146  
                     u1841 72A6                       u1921 7794                       u1690 7DB2  
                     u1770 715E                       u1850 72F4                       u1930 79C0  
                     u1691 7DAE                       u1771 715A                       u1755 7112  
                     u1851 72F0                       u1931 79BC                       u1780 7186  
                     u1860 7312                       u1940 79D2                       u1781 7182  
                     u1861 730E                       u1941 79CE                       u1790 71A6  
                     u1870 7322                       u1791 71A2                       u1871 731E  
                     u1880 7330                       u1881 732C                       u1890 736A  
                     u1891 7366               __CFG_WDTPS$1 000000                main@tamanho 00F6  
                     _main 7778                       fsr0h 000FEA                       indf0 000FEF  
                     fsr2h 000FDA                       fsr0l 000FE9                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       prodh 000FF4  
                     prodl 000FF3                       start 0000               ___param_bank 000000  
            ___fltol@sign1 0030                      ?_main 0001            __end_of___awdiv 6F04  
                    STR_10 7EEE                      STR_11 7FA1                      STR_12 7FF0  
                    STR_13 7F7E                      STR_14 7F55                      STR_15 7EB1  
                    STR_16 7FD4                      STR_17 7F90            __end_of___awmod 6E40  
          __end_of___flmul 7E9A            __end_of___fltol 71D8            ___awdiv@divisor 0003  
           __CFG_DEBUG$OFF 000000            ___awdiv@counter 0005            __end_of_lcd_dat 6B4A  
          __end_of_lcd_cmd 6B20            __end_of_lcd_str 6D90               main@tamanhos 00B2  
                    _linha 7EAD                      tablat 000FF5                      plusw1 000FE3  
                    plusw2 000FDB                      status 000FD8            __initialization 6BB2  
             __end_of_main 7A70                     ??_main 0032              __activetblptr 000002  
          tc_tecla@timeout 0007              main@corfirmar 00F4           ___awdiv@dividend 0001  
         __end_of___xxtofl 738C           __end_of_lcd_init 6C58                  ??___awdiv 0005  
                ??___awmod 000D                  ??___flmul 0017                  ??___fltol 002C  
                   _lcd_wr 6AAE                     _atraso 004C           ___awdiv@quotient 0007  
 __end_oftempoPreparo@leds 7EAD            ___awmod@divisor 000B            ___awmod@counter 000D  
                ??_lcd_dat 0007                  ??_lcd_cmd 0007           __end_of_tc_tecla 7556  
                   _strcat 6AD0                     _strcpy 6C58                     _strlen 6B7C  
                ??_lcd_str 000A               __pdataCOMRAM 0036           opcaoDesejada@tmp 000F  
             __mediumconst 7E9A                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8               ___xxtofl@arg 000B               ___xxtofl@exp 000A  
             ___xxtofl@val 0001                 __accesstop 0080    __end_of__initialization 6BF2  
            ___rparam_used 000001                 ___fltol@f1 0028             __pcstackCOMRAM 0001  
             __pidataBANK1 6B4A      __end_of_scrollDisplay 70D2              __end_of_linha 7EB1  
       __size_of_atraso_ms 0064                tc_tecla@ret 000C                tc_tecla@tmp 000B  
                  ?_lcd_wr 0001                    ?_strcat 000F                    ?_strcpy 0005  
                  ?_strlen 0001                  ?___xxtofl 0001                  ?_lcd_init 0001  
               _atraso_min 004E                  ?_tc_tecla 0007                    __Hparam 0000  
                  __Lparam 0000     __size_of_opcaoDesejada 00DC                    ___awdiv 6E40  
                  ___awmod 6D90                    ___flmul 7A70                    ___fltol 70D2  
        __end_of_atraso_ms 6D18            __size_of_lcd_wr 0008                    __pcinit 6BB2  
                  __ramtop 0600                    __ptext0 7778                    __ptext1 7556  
                  __ptext2 6D90                    __ptext3 6E40                    __ptext4 6AD0  
                  __ptext5 6B7C                    __ptext6 6C58                    __ptext7 6FE0  
                  __ptext8 6F04                    __ptext9 738C                    _lcd_dat 6B20  
                  _lcd_cmd 6AF6                    _lcd_str 6D18            __size_of_strcat 0026  
          __size_of_strcpy 005C            __size_of_strlen 0036                 ??___xxtofl 0005  
         ___awmod@dividend 0009              ?_tempoPreparo 000F                 ??_lcd_init 0008  
     end_of_initialization 6BF2              __Lmediumconst 7E9A          opcaoDesejada@menu 000E  
               ??_tc_tecla 0009                    postdec1 000FE5                    postinc0 000FEE  
                  strcpy@d 000D                    strlen@a 0003                    strcpy@s 000B  
                  strlen@s 0001            tempoPreparo@aux 0013             ??_tempoPreparo 0011  
            ___xxtofl@sign 0009                 lcd_dat@val 0007                 lcd_cmd@val 0007  
            _opcaoDesejada 6F04                ___flmul@grs 001C             scrollDisplay@i 0011  
               lcd_str@str 0008                 atraso_ms@i 0003                 atraso_ms@j 0005  
               atraso_ms@k 0006                 atraso_ms@t 0001              __pidataCOMRAM 6AB6  
           __end_of_lcd_wr 6AB6             __end_of_strcat 6AF6             __end_of_strcpy 6CB4  
           __end_of_strlen 6BB2        start_initialization 6BB2             ?_opcaoDesejada 0001  
      scrollDisplay@linha1 000D        scrollDisplay@linha2 000F                   ??_lcd_wr 0001  
              __pdataBANK1 0100                   ??_strcat 0013                   ??_strcpy 0009  
                 ??_strlen 0003                  ___flmul@a 0013                  ___flmul@b 000F  
            __pcstackBANK0 0080          __size_of___xxtofl 01B4     __size_of_scrollDisplay 00F2  
        __size_of_lcd_init 005C                 tc_tecla@to 0009       __end_of_tempoPreparo 7778  
        __size_of_tc_tecla 01CA              __pmediumconst 7E9A                   ?___awdiv 0001  
                 ?___awmod 0009                   ?___flmul 000F                   ?___fltol 0028  
                 ?_lcd_dat 0001                   ?_lcd_cmd 0001                   ?_lcd_str 0008  
                _atrasoMed 0048                  _atrasoMax 0046                  _atrasoMin 004A  
                _atraso_ms 6CB4            ??_opcaoDesejada 000E       tempoPreparo@segundos 000F  
            _scrollDisplay 6FE0                 ?_atraso_ms 0001                  main@cafes 0080  
                main@frase 00C2                  lcd_wr@val 0001                  main@tempo 00F7  
                copy_data0 6BC6                  copy_data1 6BE6                   __Hrparam 0000  
                 __Lrparam 0000             ?_scrollDisplay 000D           __size_of___awdiv 00C4  
         __size_of___awmod 00B0           __size_of___flmul 042A           __size_of___fltol 0106  
         __size_of_lcd_dat 002A           __size_of_lcd_cmd 002A           __size_of_lcd_str 0078  
                 ___xxtofl 71D8                 strcat@dest 000F                  tc_tecla@i 000D  
                 __ptext10 6D18                   __ptext11 6B20                   __ptext12 6BFC  
                 __ptext13 6AF6                   __ptext14 6AAE                   __ptext15 6CB4  
                 __ptext16 71D8                   __ptext17 70D2                   __ptext18 7A70  
                 _lcd_init 6BFC                 strcpy@dest 0005      __size_of_tempoPreparo 0222  
            __size_of_main 02F8                   _tc_tecla 738C                   main@F200 0036  
                 main@F196 0100              tempoPreparo@i 0011              tempoPreparo@k 0016  
                 main@cafe 00F5                   lcd_str@i 000C                ??_atraso_ms 0003  
             _tempoPreparo 7556                  strcat@src 0011                  strcpy@src 0007  
          ??_scrollDisplay 0011          tempoPreparo@delay 0014          tempoPreparo@valor 7E9B  
         tempoPreparo@leds 7EA5  
